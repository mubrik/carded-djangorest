{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./frontend/src/api/api.js","webpack:///./frontend/src/components/ui/SlideTransition.js","webpack:///./frontend/src/components/ui/SnackBarAlert.js","webpack:///./frontend/src/components/users/userSlice.js","webpack:///./frontend/src/components/cards/cardsSlice.js","webpack:///./frontend/src/components/utils/GoogleLogo.svg","webpack:///./frontend/src/components/utils/utilities.js","webpack:///./frontend/src/components/decks/deckSlice.js","webpack:///./frontend/src/components/users/authenticationSlice.js","webpack:///./frontend/src/components/users/AccountMangementPage.js","webpack:///./frontend/src/components/utils/PopupWindow.js","webpack:///./frontend/src/components/utils/LoginGithub.js","webpack:///./frontend/src/components/users/authFormStyles.js","webpack:///./frontend/src/components/ui/CustomBackdrop.js","webpack:///./frontend/src/components/users/LoginForm.js","webpack:///./frontend/src/components/users/SignupForm.js","webpack:///./frontend/src/components/ui/AboutPage.js","webpack:///./frontend/src/components/ui/uiFormat.js","webpack:///./frontend/src/components/cards/CardInputBox.js","webpack:///./frontend/src/components/cards/CardBody.js","webpack:///./frontend/src/components/decks/DeckItem.js","webpack:///./frontend/src/components/hooks/customHooks.js","webpack:///./frontend/src/components/ui/EmptyListRender.js","webpack:///./frontend/src/components/cards/CardList.js","webpack:///./frontend/src/components/cards/newCardStyles.js","webpack:///./frontend/src/components/cards/CustomDeckSelect.js","webpack:///./frontend/src/components/cards/AddCardForm.js","webpack:///./frontend/src/components/ui/CustomNoMatchFound.js","webpack:///./frontend/src/components/cards/EditCardForm.js","webpack:///./frontend/src/components/decks/DeckCardSection.js","webpack:///./frontend/src/components/decks/DeckInputBox.js","webpack:///./frontend/src/components/decks/DeckListForm.js","webpack:///./frontend/src/components/decks/DeckList.js","webpack:///./frontend/src/components/header/LogoComponent.js","webpack:///./frontend/src/components/header/AccountNavButton.js","webpack:///./frontend/src/components/header/LogoutDialog.js","webpack:///./frontend/src/components/header/LogoutButton.js","webpack:///./frontend/src/components/search/searchSlice.js","webpack:///./frontend/src/components/header/SearchForm.js","webpack:///./frontend/src/components/header/NavButton.js","webpack:///./frontend/src/components/header/SideDrawer.js","webpack:///./frontend/src/components/header/MobileHeaderDropdown.js","webpack:///./frontend/src/components/header/DarkModeSwitch.js","webpack:///./frontend/src/components/header/HeaderBar.js","webpack:///./frontend/src/components/users/ProfilePage.js","webpack:///./frontend/src/components/users/ConfirmPasswordResetForm.js","webpack:///./frontend/src/components/users/ConfirmUserEmail.js","webpack:///./frontend/src/components/search/SearchPage.js","webpack:///./frontend/src/App.js","webpack:///./frontend/src/app/store.js","webpack:///./frontend/src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","token","observers","isLoggedIn","notify","prepareHeader","React","props","ref","Slide","timeout","enter","exit","notistackRef","onClickDismiss","key","current","closeSnackbar","dense","preventDuplicate","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","SlideTransition","action","IconButton","onClick","Close","children","axiosInstance","require","create","baseURL","tokenProvider","JSON","parse","localStorage","getItem","isLogged","forEach","observer","getToken","setToken","_token","setItem","removeItem","subscribe","push","unsubscribe","_observer","useAuth","useState","setIsLogged","useEffect","listener","newIsLogged","apiFecthResource","tokenObj","defaults","headers","common","get","url","data","params","response","post","remove","delete","edit","put","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","login","logout","fetchUserData","createAsyncThunk","passedArgs","rejectWithValue","request","non_field_errors","editProfileData","getState","user","id","updateUserPassword","resetUserPassword","confirmPasswordReset","confirmUserEmail","userSlice","createSlice","initialState","status","email","user_profile","profile_picture","birth_date","reducers","extraReducers","fulfilled","state","payload","rejected","selectUserDetailStatus","selectUserEmail","selectUserUsername","username","selectUserProfilePic","selectUserBdate","_path","_path2","_path3","_path4","cardsAdapter","createEntityAdapter","selectId","card","sortComparer","a","b","created","localeCompare","getInitialState","loading","error","isErrored","message","fetchCards","addNewCard","dispatch","updateCardInDeck","newCard","type","removeCard","cards","deletedCard","entities","removeCardFromDecks","delCard","editCard","requestBody","prevCard","console","log","cardsSlice","clearCards","removeAll","setStale","pending","upsertMany","addOne","updObj","changes","updateOne","removeOne","getSelectors","selectAllCards","selectAll","selectCardById","selectById","selectCardsIds","selectIds","selectCardsTotal","selectTotal","actions","selectCardsStatus","createSelector","cardId","notebook","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","width","height","xmlns","fill","d","getArrayDifference","arrayA","arrayB","_difference","elem","toQuery","delimiter","keys","str","index","query","GoogleIcon","SvgIcon","component","GoogleLogo","viewBox","decksAdapter","deck","activeDeck","fetchDecks","addNewDeck","removeDeckById","removeDeck","updateDeckCards","deckId","decks","deckName","notebook_notes","decksSlice","clearDecks","delDeckId","delIndex","ids","updateActiveDeck","prevDeckArray","newArr","prevId","deletedCardId","selectAllDecks","selectDeckById","selectDecksIds","selectDeckTotal","selectDecksStatus","selectActiveDeck","axios","userLogin","loginValues","setAuthToken","userSocialLogin","rest","userLogout","clearAuthToken","userSignup","authenticationSlice","authenticated","fullfilled","authStatusSelector","auth","useStyles","makeStyles","theme","input_file","display","root","justifyItems","alignContent","boxShadow","palette","text","primary","borderRadius","margin","padding","minHeight","backgroundColor","background","default","color","profileCardMini","minWidth","alignItems","secondary","main","textAlign","flexDirection","profileCard","justifyContent","topMargin","marginTop","spacing","cancelButton","warning","borderColor","PasswordChangeForm","useDispatch","classes","enqueueSnackbar","useSnackbar","formik","useFormik","initialValues","new_password1","new_password2","onSubmit","values","formikBag","then","result","meta","requestStatus","variant","resetForm","setErrors","toString","setSubmitting","validationSchema","Yup","required","className","handleSubmit","TextField","label","autoComplete","errors","helperText","value","onChange","handleChange","onBlur","handleBlur","Button","disabled","isSubmitting","PasswordResetRequest","userEmail","useSelector","open","setOpen","handleClose","Link","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","defaultValue","fullWidth","DialogActions","userDetailStatus","options","window","cancel","close","promise","resolve","reject","_iid","setInterval","popup","closed","Error","location","href","pathname","q","search","replace","param","clearInterval","args","poll","LoginGithub","clientId","scope","redirectUri","popupHeight","popupWidth","client_id","redirect_uri","top","outerHeight","screenY","left","outerWidth","screenX","PopupWindow","onRequest","onSuccess","onFailure","code","buttonText","attrs","onBtnClick","startIcon","GitHub","Component","PropTypes","flex","border","light","buttonForm","buttonWrapper","flexWrap","position","signupButtonWrapper","buttonProgress","marginLeft","zIndex","backdrop","CustomBackdrop","forwardedref","Backdrop","CircularProgress","GoogleAuthButton","cookiePolicy","accessToken","access_token","res","render","renderProps","GithubAuthButton","show","setShow","isAuthenticated","history","useHistory","password","min","fluid","Typography","noValidate","size","password1","password2","max","paragraph","touched","rootMain","overflowY","rootSection","borderTop","borderBottom","rootTitle","dark","flexRow","flexColumn","wrapperMain","innerForm","marginBottom","Decks","innerDecks","gridTemplateColumns","gap","breakpoints","between","gridTemplateRows","innerListForm","maxHeight","innerCards","deckList","formContainer","marginRight","MainBodyLayout","deckForm","selectedDeckId","input","body","searchBody","ListGroup","InputFormLayout","inputContainer","buttonContainer","baseCardForm","cardFormButtonsGroup","formButton","deleteButton","InputButtonGroup","setShowInput","showInput","title","content","handleReset","onFocus","multiline","placeholder","dirty","cardMain","cursor","overflow","maxWidth","up","cardSubject","fontWeight","whiteSpace","textOverflow","cardContent","overflowWrap","wordBreak","fontSize","cardExtras","justifySelf","EditCardDialogForm","showDialog","setShowDialog","rows","DeleteDialogSlide","handleDeleteClicked","cardProps","aria-label","Delete","Transition","aria-describedby","direction","cardsStatus","renderButtons","cardprops","data-index","Skeleton","animation","deleteIconOutlinedColorPrimary","clickableColorPrimary","paper","contrastText","active","openDelete","handleDeleteClick","keepMounted","setOpenDelete","delProps","Chip","onDelete","clsx","clickable","useCardsCreator","listObj","item","emptyRoot","Icon","ArrowUpward","CardsListRender","totalCardsNum","totalCardsId","cardsArray","formCtl","defaultArr","allDecksList","deckStatus","arr","setFieldValue","Autocomplete","multiple","freeSolo","filterSelectedOptions","getOptionLabel","option","getOptionSelected","renderTags","getTagProps","renderInput","event","optionArray","reason","newCardStyles","selectedDeck","EditCardForm","useParams","currentCardDeck","deckobj","goBack","pageState","setPageState","decksStatus","totalDeckNum","singleDeck","CustomDeckInput","validateOnBlur","mainTheme","overflowX","listHeader","AddDeckList","checked","setChecked","AddCardsArray","labelId","ListItem","role","undefined","button","currentIndex","newChecked","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","RemoveDeckList","deleteChecked","setDeleteChecked","RemoveCardsArray","ListButtons","removeList","handleUpdate","handleRemove","DoneAll","Clear","allCardsArray","deckCardsArrayById","selectCardsByDeckId","setRemoveList","listProps","diff","List","subheader","ListSubheader","SwapHoriz","DeckChipsRenderList","deckArray","headerImg","useTheme","src","setSrc","darkTheme","alt","AccountNavButton","anchorEl","setAnchorEl","openLogout","setOpenLogout","forwardedRef","bprops","handleMenuItemClick","path","getAttribute","logDialogProps","handleLogoutConfirm","handleLogoutCancel","aria-controls","aria-haspopup","currentTarget","AccountCircle","Boolean","MenuItem","e","LogoutDialog","LogoutButton","ExitToApp","searchAdapter","searchCards","fillSearchData","searchSlice","setAll","selectCardsSearchIds","selectCardsSearchTotal","selectSearchLoadingStatus","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","searchValue","Search","InputBase","IconToUse","icon","BookRoundedIcon","LibraryBooksRoundedIcon","RouterLink","to","ListItemLink","renderLink","itemProps","drawer","flexShrink","drawerOpen","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","drawerHeader","mixins","toolbar","drawerPaper","handleDrawerClose","showCollapse","setShowCollapse","Drawer","anchor","ChevronRight","ChevronLeft","Divider","BookRounded","LibraryBooksRounded","AddBoxRounded","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","useLocation","handleClick","ArrowDropDownRounded","FormControlLabel","control","Switch","darkMode","setDarkMode","typography","fontFamily","fontWeightLight","appBar","appBarShift","menuButton","hide","grow","flexGrow","navButton","shape","fade","white","sectionDesktop","sectionMobile","contentShift","easeOut","mainBody","drawerProps","AppBar","Toolbar","Menu","profileUsername","ProfileAvatarForm","ProfileAvatarImg","uploadBtn","ProfileAvatarBtnGrp","ProfileAvatar","setDisabled","avatarLink","formData","FormData","append","accept","files","Avatar","htmlFor","style","PhotoCamera","ProfileCardStatDetail","cardsTotal","decksTotal","ProfileCardUpdateForm","userBday","InputLabelProps","shrink","uid","alert","confirmStatus","setConfirmStatus","isAuth","setTimeout","SearchListRender","searchLoading","PrivateRoute","persist","from","prefersDarkMode","useMediaQuery","createMuiTheme","join","xs","sm","md","lg","xl","phones","responsiveFontSizes","factor","ThemeProvider","exact","configureStore","reducer","authReducer","cardsReducer","deckReducer","userReducer","searchReducer","ReactDOM","CssBaseline","store","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","r","Symbol","toStringTag","nmd","paths","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"app.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import {useState, useEffect} from \"react\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"/backend/\",\r\n    timeout: 7000,\r\n});\r\n\r\n//token handler for managing token auth, unexposed\r\nconst createTokenProvider = () => {\r\n\r\n    /* Implementation */\r\n    let token = JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\"));\r\n\r\n    /* observer/subscriber list  */\r\n    let observers = [];\r\n\r\n    //fetch token\r\n    const getToken = async () => {\r\n        // if a valid token exists, return it\r\n        if (token) {\r\n            return token;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // return true if token != null\r\n    const isLoggedIn = () => {\r\n        return !!token;\r\n    };\r\n\r\n    // pushes a method from object subscribing\r\n    const subscribe = (observer) => {\r\n        observers.push(observer);\r\n    };\r\n    \r\n    // removes method from object unsubscribing\r\n    const unsubscribe = (observer) => {\r\n        observers = observers.filter(_observer => _observer !== observer);\r\n    };\r\n\r\n    // notifies members in observers, basically running the method\r\n    const notify = () => {\r\n        const isLogged = isLoggedIn();\r\n        observers.forEach(observer => observer(isLogged));\r\n    };\r\n\r\n    // sets token to local storage and instance token variable\r\n    const setToken = (_token=null) => {\r\n\r\n        if (_token) {\r\n            localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(_token));\r\n        } else {\r\n            localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n        }\r\n        token = _token;\r\n        notify();\r\n    };\r\n\r\n    return {\r\n        getToken,\r\n        isLoggedIn,\r\n        setToken,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n};\r\n\r\n// handler exposed for auth/login/token verification \r\nconst createAuthProvider = () => {\r\n\r\n    /* Implementation */\r\n\r\n    // handler to set token\r\n    const login = (token) => {\r\n        tokenProvider.setToken(token);\r\n    };\r\n    \r\n    // handler to remove token\r\n    const logout = () => {\r\n        tokenProvider.setToken(null);\r\n    };\r\n\r\n    // react hook to check auth status\r\n    const useAuth = () => {\r\n\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n    \r\n        useEffect(() => {\r\n            const listener = (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            };\r\n    \r\n            tokenProvider.subscribe(listener);\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n        }, []);\r\n    \r\n        return isLogged;\r\n    };\r\n\r\n    // for making authenticated requests\r\n    const server = () => {\r\n\r\n        const prepareHeader = async () => {\r\n\r\n            const tokenObj = await tokenProvider.getToken();\r\n            let token = `Token ${tokenObj ? tokenObj[\"key\"] : \"\"}`;\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = token;\r\n            axiosInstance.defaults.headers.common[\"Accept\"] = \"application/json\";\r\n        };\r\n\r\n        const get = async (url, data) => {\r\n            await prepareHeader();\r\n            let response;\r\n            if (data) {\r\n                response = await axiosInstance.get(url, {params: data});\r\n                return response;\r\n            }\r\n            response = await axiosInstance.get(url);\r\n            return response;\r\n        };\r\n\r\n        const post = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.post(url, data);\r\n            return response;\r\n        };\r\n        \r\n        const remove = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.delete(url, data);\r\n            return response;\r\n        };\r\n        \r\n        const edit = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.put(url, data);\r\n            return response;\r\n        };\r\n\r\n        const getCookie = (name) => {\r\n            let cookieValue = null;\r\n            if (document.cookie && document.cookie !== \"\") {\r\n                const cookies = document.cookie.split(\";\");\r\n                for (let i = 0; i < cookies.length; i++) {\r\n                    const cookie = cookies[i].trim();\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + \"=\")) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        };\r\n\r\n        return {get, post, remove, edit, getCookie};\r\n    };\r\n\r\n    const apiFecthResource = server();\r\n\r\n    return {\r\n        useAuth,\r\n        apiFecthResource,\r\n        login,\r\n        logout\r\n    };\r\n};\r\n\r\nconst tokenProvider = createTokenProvider();\r\n\r\nexport {tokenProvider};\r\nexport const {login, logout, useAuth, apiFecthResource} = createAuthProvider();","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide \r\n            ref={ref}\r\n            {...props}\r\n            timeout={{ enter: 150, exit: 300,}} />;\r\n});\r\n\r\nexport default SlideTransition","import React from 'react'\r\nimport { SnackbarProvider } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SlideTransition from './SlideTransition'\r\n\r\n\r\nconst notistackRef = React.createRef();\r\nconst onClickDismiss = key => () => { \r\n    notistackRef.current.closeSnackbar(key);\r\n}\r\n\r\nconst CustomSnackbarProvider = (props) => {\r\n\r\n    return(\r\n        <SnackbarProvider \r\n            dense\r\n            preventDuplicate\r\n            maxSnack={3} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            TransitionComponent={SlideTransition}\r\n            ref={notistackRef}\r\n            action={(key) => (\r\n            <IconButton onClick={onClickDismiss(key)}>\r\n                <CloseIcon/>\r\n            </IconButton>)}\r\n        >\r\n          {props.children}\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n\r\nexport default CustomSnackbarProvider;","import { createSlice, createAsyncThunk, } from \"@reduxjs/toolkit\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"http://127.0.0.1:8000/\",\r\n    timeout: 4000,\r\n});\r\n\r\nconst initialState = {\r\n    data: {\r\n        status: \"stale\",\r\n        email: null,\r\n        user_profile: {\r\n            profile_picture: null,\r\n            birth_date: null\r\n        }\r\n    },\r\n};\r\n\r\nexport const fetchUserData = createAsyncThunk(\"user/fetchUserData\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.get(\"/users/get_user_detail/\");\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const editProfileData = createAsyncThunk(\"user/editProfileData\", async (passedArgs, { rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        const { user } = getState();\r\n        let response = await apiFecthResource.edit(`/profiles/${user.data.id}/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const updateUserPassword = createAsyncThunk(\"user/updateUserPassword\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/change/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const resetUserPassword = createAsyncThunk(\"user/resetUserPassword\", async (passedArgs, {rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/reset/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const confirmPasswordReset = createAsyncThunk(\"user/confirmPasswordReset\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/reset/confirm/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:[\"Link expired\"]});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const confirmUserEmail = createAsyncThunk(\"user/confirmUserEmail\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await axiosInstance.post(\"/dj-rest-auth/registration/verify-email/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:[\"Link expired\"]});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchUserData.fulfilled]: (state, action) => {\r\n            state.data = {\r\n                status: \"loaded\",\r\n                ...action.payload\r\n            };\r\n        },\r\n        [fetchUserData.rejected]: (state) => {\r\n            state.data.status = \"stale\";\r\n        },\r\n        [editProfileData.fulfilled]: (state, action) => {\r\n            state.data.user_profile = action.payload;\r\n            state.status = \"loaded\";\r\n        },\r\n        [editProfileData.rejected]: (state) => {\r\n            state.data.status = \"stale\";\r\n        },\r\n    }\r\n});\r\n\r\nexport const selectEmailConfirmationStatus = state => state.user.emailConfirmation;\r\nexport const selectUserDetailStatus = state => state.user.data.status;\r\nexport const selectUserEmail = state => state.user.data.email;\r\nexport const selectUserUsername = state => state.user.data.username;\r\nexport const selectUserProfilePic = state => state.user.data.user_profile.profile_picture;\r\nexport const selectUserBdate = state => state.user.data.user_profile.birth_date;\r\n\r\nexport default userSlice.reducer;","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter, createSelector\r\n} from \"@reduxjs/toolkit\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\nimport {removeCardFromDecks, updateCardInDeck} from \"../decks/deckSlice\";\r\n\r\nconst cardsAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n});\r\n\r\nconst initialState = cardsAdapter.getInitialState({\r\n    loading: \"idle\",\r\n    status: \"stale\",\r\n    error: {\r\n        isErrored: false,\r\n        message: \"\",\r\n    }\r\n});\r\n\r\nexport const fetchCards = createAsyncThunk(\"cards/fetchCards\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n\r\n        let url = \"notes/\";\r\n        response = await apiFecthResource.get(url);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors: \"Invalid Request was made\"});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const addNewCard = createAsyncThunk(\"cards/addNewCard\", async (params, { dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post(\"notes/\", params);\r\n        dispatch(updateCardInDeck({newCard: response.data, type: \"create\"}));\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const removeCard = createAsyncThunk(\"cards/removeCard\", async (params, {getState, dispatch, rejectWithValue}) => {\r\n\r\n    try {\r\n        let url = `notes/${params}/`;\r\n        await apiFecthResource.remove(url);\r\n        const {cards} = getState();\r\n        let deletedCard = cards.entities[params];\r\n        dispatch(removeCardFromDecks({delCard: deletedCard}));\r\n        return params;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const editCard = createAsyncThunk(\"cards/editCard\", async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    \r\n    try {\r\n        const {id, requestBody} = params;\r\n        let url = `notes/${id}/`;\r\n        let response = await apiFecthResource.edit(url, requestBody);\r\n        const {cards} = getState();\r\n        let prevCard = cards.entities[id];\r\n        dispatch(updateCardInDeck({prevCard, newCard: response.data, type: \"update\"}));\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            console.log(err.response);\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const searchCards = createAsyncThunk(\"cards/searchCards\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = \"search/\";\r\n        response = await apiFecthResource.get(url, params);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nconst cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState,\r\n    reducers: {\r\n        clearCards(state) {\r\n            cardsAdapter.removeAll(state);\r\n            state.status = \"stale\";\r\n        },\r\n        setStale(state) {\r\n            state.status = \"stale\";\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchCards.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [fetchCards.fulfilled]: (state, action) => {\r\n            cardsAdapter.upsertMany(state, action.payload);\r\n            state.loading = \"loaded\";\r\n            state.status = \"updated\";\r\n        },\r\n        [addNewCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.addOne(state, action.payload);\r\n        },\r\n        [editCard.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload[\"id\"],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n            cardsAdapter.updateOne(state, updObj);\r\n        },\r\n        [removeCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.removeOne(state, action.payload);\r\n        },\r\n        [fetchCards.rejected]: (state) => {\r\n            state.loading = \"failed\";\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllCards,\r\n    selectById: selectCardById,\r\n    selectIds: selectCardsIds,\r\n    selectTotal: selectCardsTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = cardsAdapter.getSelectors(state => state.cards);\r\n\r\nexport const {clearCards, setStale} = cardsSlice.actions;\r\n\r\nexport const selectCardsStatus = (state) => state.cards.status;\r\n\r\nexport const selectCardsLoadingStatus = createSelector(\r\n    [selectAllCards],\r\n    (cards) => cards.loading\r\n);\r\nexport const selectDecksByCardId = createSelector(\r\n    [selectAllCards, (state, cardId) => cardId],\r\n    (cards, cardId) => cards[cardId].notebook\r\n);\r\n\r\nexport default cardsSlice.reducer;","var _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgGoogleLogo(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#4285F4\",\n    d: \"M23.745 12.27c0-.79-.07-1.54-.19-2.27h-11.3v4.51h6.47c-.29 1.48-1.14 2.73-2.4 3.58v3h3.86c2.26-2.09 3.56-5.17 3.56-8.82z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#34A853\",\n    d: \"M12.255 24c3.24 0 5.95-1.08 7.93-2.91l-3.86-3c-1.08.72-2.45 1.16-4.07 1.16-3.13 0-5.78-2.11-6.73-4.96h-3.98v3.09C3.515 21.3 7.565 24 12.255 24z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FBBC05\",\n    d: \"M5.525 14.29c-.25-.72-.38-1.49-.38-2.29s.14-1.57.38-2.29V6.62h-3.98a11.86 11.86 0 000 10.76l3.98-3.09z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#EA4335\",\n    d: \"M12.255 4.75c1.77 0 3.35.61 4.6 1.8l3.42-3.42C18.205 1.19 15.495 0 12.255 0c-4.69 0-8.74 2.7-10.71 6.62l3.98 3.09c.95-2.85 3.6-4.96 6.73-4.96z\"\n  })));\n}\n\nexport default SvgGoogleLogo;","import React from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport GoogleLogo from \"./GoogleLogo.svg\";\r\n\r\nconst InputFormLayout = (props) => {\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row fluid=\"true\">\r\n                <Col>\r\n                    {props.input}\r\n                </Col>\r\n                <Col xs=\"auto\" xl=\"auto\" lg=\"auto\">\r\n                    {props.options}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst getArrayDifference = (arrayA, arrayB) => {\r\n    let _difference = new Set(arrayA);\r\n    for (let elem of arrayB) {\r\n        _difference.delete(elem);\r\n    }\r\n    return [..._difference];\r\n};\r\n\r\nconst getArrayIntersection = (arrayA, arrayB) => {\r\n    let _intersection = [];\r\n    for (let elem of arrayB) {\r\n        if (arrayA.includes(elem)) {\r\n            _intersection.push(elem);\r\n        }\r\n    }\r\n    return _intersection;\r\n};\r\n\r\nexport { InputFormLayout, \r\n    getArrayDifference, getArrayIntersection\r\n};\r\n\r\nexport function toParams(query) {\r\n    const q = query.replace(/^\\??\\//, \"\");\r\n  \r\n    return q.split(\"&\").reduce((values, param) => {\r\n        const [key, value] = param.split(\"=\");\r\n  \r\n        values[key] = value;\r\n  \r\n        return values;\r\n    }, {});\r\n}\r\n  \r\nexport function toQuery(params, delimiter = \"&\") {\r\n    const keys = Object.keys(params);\r\n  \r\n    return keys.reduce((str, key, index) => {\r\n        let query = `${str}${key}=${params[key]}`;\r\n  \r\n        if (index < (keys.length - 1)) {\r\n            query += delimiter;\r\n        }\r\n  \r\n        return query;\r\n    }, \"\");\r\n}\r\n\r\nexport function GoogleIcon() {\r\n    return (\r\n        <SvgIcon component={GoogleLogo} viewBox={\"0 0 24 24\"}/>\r\n    );\r\n}","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from \"@reduxjs/toolkit\";\r\nimport {setStale, fetchCards} from \"../cards/cardsSlice\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\nimport {getArrayDifference} from \"../utils/utilities\";\r\n\r\nconst decksAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (deck) => deck.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n});\r\n\r\nconst initialState = decksAdapter.getInitialState({\r\n    loading: \"idle\",\r\n    status: \"stale\",\r\n    activeDeck: null,\r\n    error: {\r\n        isErrored: false,\r\n        message: \"\",\r\n    }\r\n});\r\n\r\nexport const fetchDecks = createAsyncThunk(\"decks/fetchDecks\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = \"notebooks/\";\r\n        response = await apiFecthResource.get(url);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({message: \"Invalid Request was made\"});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({message: \"No Response recieved from server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const addNewDeck = createAsyncThunk(\"decks/addNewDeck\", async (params, {rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post(\"notebooks/\", params);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const removeDeckById = createAsyncThunk(\"decks/removeDeckById\", async (params, { dispatch, rejectWithValue}) => {\r\n\r\n    try {\r\n        let url = `notebooks/${params}/`;\r\n        await apiFecthResource.remove(url);\r\n        dispatch(removeDeck(params));\r\n        return params;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            console.log(err.response);\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const updateDeckCards = createAsyncThunk(\"decks/updateDeckCards\", async (params, {dispatch, rejectWithValue, getState}) => {\r\n\r\n    let response;\r\n    try {\r\n        const {deckId, cards} = params;\r\n        const {decks} = getState();\r\n        let deckName = decks.entities[deckId].name;\r\n        let data = {name: deckName, notebook_notes: cards};\r\n        response = await apiFecthResource.edit(`notebooks/${deckId}/`, data);\r\n        dispatch(setStale());\r\n        dispatch(fetchCards());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nconst decksSlice = createSlice({\r\n    name: \"decks\",\r\n    initialState,\r\n    reducers: {\r\n        clearDecks(state) {\r\n            decksAdapter.removeAll(state);\r\n            state.status = \"stale\";\r\n        },\r\n        removeDeck(state, action) {\r\n            let delDeckId = action.payload;\r\n            let delIndex = state.ids.findIndex((deckId) => deckId === delDeckId);\r\n\r\n            if (state.activeDeck === action.payload) {\r\n                if (delIndex > 0 && state.ids.length > 1 ) {\r\n                    state.activeDeck = state.ids[delIndex - 1];\r\n                } \r\n                else if (delIndex === 0 && state.ids.length > 1 ) {state.activeDeck = state.ids[delIndex + 1];}\r\n                else {state.activeDeck = null;}\r\n            }\r\n            decksAdapter.removeOne(state, action.payload);\r\n        },\r\n        updateActiveDeck(state, action) {\r\n            state.activeDeck = action.payload;\r\n        },\r\n        updateCardInDeck(state, action) {\r\n            let prevCard = action.payload[\"prevCard\"] ? action.payload[\"prevCard\"] : [];\r\n            let newCard = action.payload[\"newCard\"] ? action.payload[\"newCard\"] : [];\r\n            let actionType = action.payload[\"type\"];\r\n\r\n            if (actionType === \"update\") {\r\n                let prevDeckArray = prevCard.notebook.slice();\r\n                let deckDiff = getArrayDifference(prevDeckArray, newCard.notebook);\r\n                deckDiff.forEach(deckId => {\r\n                    let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== prevCard.id);\r\n                    state.entities[deckId].notebook_notes = newArr;\r\n                });\r\n            }\r\n            \r\n            newCard.notebook.forEach(deckId => {\r\n                if (state.entities[deckId].notebook_notes.includes(newCard.id)) return;\r\n                state.entities[deckId].notebook_notes.push(newCard.id);\r\n            });\r\n        },\r\n        removeCardFromDecks(state, action) {\r\n            let deletedCard = action.payload[\"delCard\"];\r\n            const deletedCardId = deletedCard[\"id\"];\r\n            const deletedCardDecks = deletedCard.notebook.slice();\r\n\r\n            deletedCardDecks.forEach(deckId => {\r\n                let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== deletedCardId);\r\n                state.entities[deckId].notebook_notes = newArr;\r\n            });\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchDecks.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [fetchDecks.fulfilled]: (state, action) => {\r\n            decksAdapter.upsertMany(state, action.payload);\r\n            state.loading = \"loaded\";\r\n            state.status = \"updated\";\r\n        },\r\n        [fetchDecks.rejected]: (state) => {\r\n            state.loading = \"failed\";\r\n        },\r\n        [addNewDeck.fulfilled]: (state, action) => {\r\n            decksAdapter.addOne(state, action.payload);\r\n        },\r\n        [updateDeckCards.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload[\"id\"],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n            decksAdapter.updateOne(state, updObj);\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllDecks,\r\n    selectById: selectDeckById,\r\n    selectIds: selectDecksIds,\r\n    selectTotal: selectDeckTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = decksAdapter.getSelectors(state => state.decks);\r\nexport const selectDecksStatus = (state) => state.decks.status;\r\nexport const selectActiveDeck = (state) => state.decks.activeDeck;\r\nexport const selectCardsByDeckId = (state, id) => {\r\n    if (id === null || id === undefined) return [];\r\n    let arr = selectDeckById(state, id).notebook_notes;\r\n    return arr;\r\n};\r\n\r\nexport const {updateActiveDeck, removeCardFromDecks, updateCardInDeck, removeDeck, clearDecks} = decksSlice.actions;\r\n\r\nexport default decksSlice.reducer;","import { createSlice, createAsyncThunk, } from \"@reduxjs/toolkit\";\r\nimport {login, logout, apiFecthResource} from \"../../api/api\";\r\nimport {fetchUserData} from \"./userSlice\";\r\nimport {clearDecks} from \"../decks/deckSlice\";\r\nimport {clearCards} from \"../cards/cardsSlice\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst initialState = {\r\n    token: null,\r\n    authenticated: false,\r\n    loading: \"idle\",\r\n};\r\n\r\nexport const userLogin = createAsyncThunk(\"auth/userLogin\", async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const loginValues = passedArgs;\r\n    try {\r\n        let response = await axios.post(\"/backend/dj-rest-auth/login/\", loginValues);\r\n        dispatch(setAuthToken(response.data));\r\n        login(response.data);\r\n        dispatch(fetchUserData());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nexport const userSocialLogin = createAsyncThunk(\"auth/userGoogleLogin\", async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    \r\n    try {\r\n        const {url, ...rest} = passedArgs;\r\n        let response = await axios.post(url, rest);\r\n        dispatch(setAuthToken(response.data));\r\n        login(response.data);\r\n        dispatch(fetchUserData());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            console.log(err.response.data);\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nexport const userLogout = createAsyncThunk(\"auth/userLogout\", async (passedArgs, { dispatch }) => {\r\n    await apiFecthResource.post(\"dj-rest-auth/logout/\");\r\n    logout();\r\n    dispatch(clearAuthToken());\r\n    dispatch(clearCards());\r\n    dispatch(clearDecks());\r\n});\r\n\r\nexport const userSignup = createAsyncThunk(\"auth/userSignup\", async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const requestBody = passedArgs;\r\n    try {\r\n        let response = await axios.post(\"dj-rest-auth/registration/\", requestBody);\r\n        dispatch(setAuthToken(response.data));\r\n        login(response.data);\r\n        dispatch(fetchUserData());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nconst authenticationSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setAuthToken(state, action) {\r\n            state.token = action.payload[\"key\"];\r\n            state.authenticated = true;\r\n        },\r\n        clearAuthToken(state) {\r\n            state.token = null;\r\n            state.authenticated = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [userLogin.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [userLogin.fullfilled]: (state) => {\r\n            state.loading = \"loaded\";\r\n        },\r\n        [userSignup.fulfilled]: (state) => {\r\n            state.loading = \"loaded\";\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const authTokenSelector = (state) => state.auth.token;\r\nexport const authStatusSelector = (state) => state.auth.authenticated;\r\n\r\nexport const {clearAuthToken, setAuthToken} = authenticationSlice.actions;\r\n\r\nexport default authenticationSlice.reducer;","import React from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {TextField, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Link } from \"@material-ui/core\";\r\nimport {\r\n    updateUserPassword, resetUserPassword,\r\n    selectUserDetailStatus, fetchUserData,\r\n    selectUserEmail\r\n} from \"./userSlice\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n        display: \"none\",\r\n    },\r\n    root: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        alignContent: \"flex-start\",\r\n        boxShadow: `0px 1px 4px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: \"8px\",\r\n        margin: \"auto\",\r\n        padding: \".4em .5em\",\r\n        minHeight: \"inherit\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileCardMini: {\r\n        minWidth: \"80px\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCard: {\r\n        minWidth: \"80%\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(1.5)\r\n    },\r\n    cancelButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\nconst AccountMangementPage = () => {\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus);\r\n    const dispatch = useDispatch();\r\n    \r\n    React.useEffect(() => {\r\n        if (userDetailStatus === \"stale\") {\r\n            dispatch(fetchUserData());\r\n        }\r\n    }, [userDetailStatus, dispatch]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <PasswordChangeForm />\r\n            <PasswordResetRequest/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PasswordChangeForm = () => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // material styles\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            /* old_password: \"\", */\r\n            new_password1: \"\",\r\n            new_password2: \"\"\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(updateUserPassword(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Password Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                        formikBag.resetForm();\r\n                    } else {\r\n                        const {\r\n                            /* old_password */ new_password1,\r\n                            new_password2, non_field_errors\r\n                        } = result.payload;\r\n                        formikBag.setErrors({\r\n                            /* old_password: old_password ? old_password.toString(): \"\", */\r\n                            new_password1: new_password1 ? new_password1.toString(): \"\",\r\n                            new_password2: new_password2 ? new_password2.toString(): \"\",\r\n                            non_field_errors: non_field_errors ? non_field_errors.toString(): \"\",\r\n                        });\r\n                        enqueueSnackbar(\"Error Updating Password\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            /* old_password: Yup.string().required(\"Required\"), */\r\n            new_password1: Yup.string().required(\"Required\"),\r\n            new_password2: Yup.string().required(\"Required\"),\r\n        })\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <form className={classes.profileCard} onSubmit={formik.handleSubmit}>\r\n                {/* <TextField\r\n                    id=\"filled-old_password-input\"\r\n                    name=\"old_password\"\r\n                    label=\"Old Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.old_password}\r\n                    helperText={formik.errors.old_password}\r\n                    value={formik.values.old_password}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                /> */}\r\n                <TextField\r\n                    id=\"filled-new_password1-input\"\r\n                    name=\"new_password1\"\r\n                    label=\"New Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.new_password1}\r\n                    helperText={formik.errors.new_password1}\r\n                    value={formik.values.new_password1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    id=\"filled-new_password2-input\"\r\n                    name=\"new_password2\"\r\n                    label=\"New Password Again\"\r\n                    type=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.new_password2}\r\n                    helperText={formik.errors.new_password2}\r\n                    value={formik.values.new_password2}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <Button variant=\"contained\" \r\n                    onClick={formik.handleSubmit} \r\n                    margin=\"dense\" \r\n                    className={classes.topMargin}\r\n                    disabled={formik.isSubmitting}\r\n                >\r\n                Update Password\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PasswordResetRequest = () => {\r\n    // redux \r\n    const dispatch = useDispatch();\r\n    const userEmail = useSelector(selectUserEmail);\r\n    // react\r\n    const [open, setOpen] = React.useState(false);\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material styles\r\n    const classes = useStyles();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userEmail ? userEmail : \"\"\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(resetUserPassword(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Password Reset link Queued\", { \r\n                            variant: \"success\",\r\n                        });\r\n                        setOpen(false);\r\n                    } else {\r\n                        const {\r\n                            email, non_field_errors\r\n                        } = result.payload;\r\n                        formikBag.setErrors({\r\n                            email: email ? email.toString(): \"\",\r\n                            non_field_errors: non_field_errors ? non_field_errors.toString(): \"\",\r\n                        });\r\n                        enqueueSnackbar(`Error ${non_field_errors.toString()}`, {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link\r\n                component=\"button\"\r\n                variant='subtitle2'\r\n                onClick={handleClickOpen}\r\n                className={classes.topMargin}\r\n                color=\"inherit\"\r\n            >\r\n            Forgot Password? Click here to request a password reset\r\n            </Link>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-password-reset\">\r\n                <DialogTitle id=\"form-dialog-password-reset\">Password Reset</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                Enter your email address and we will forward you a password reset link\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        color=\"secondary\"\r\n                        name=\"email\"\r\n                        margin=\"dense\"\r\n                        id=\"emailForm\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        defaultValue={formik.values.email}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} className={classes.cancelButton}>\r\n                Cancel\r\n                    </Button>\r\n                    <Button onClick={formik.handleSubmit} color=\"default\">\r\n                Request Reset\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountMangementPage;\r\nexport {PasswordResetRequest, PasswordChangeForm};","import { toParams, toQuery } from \"./utilities\";\r\n\r\nclass PopupWindow {\r\n    constructor(id, url, options = {}) {\r\n        this.id = id;\r\n        this.url = url;\r\n        this.options = options;\r\n    }\r\n\r\n    open() {\r\n        const { url, id, options } = this;\r\n\r\n        this.window = window.open(url, id, toQuery(options, \",\"));\r\n    }\r\n\r\n    close() {\r\n        this.cancel();\r\n        this.window.close();\r\n    }\r\n\r\n    poll() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this._iid = window.setInterval(() => {\r\n                try {\r\n                    const popup = this.window;\r\n\r\n                    if (!popup || popup.closed !== false) {\r\n                        this.close();\r\n\r\n                        reject(new Error(\"The popup was closed\"));\r\n\r\n                        return;\r\n                    }\r\n\r\n                    if (popup.location.href === this.url || popup.location.pathname === \"blank\") {\r\n                        return;\r\n                    }\r\n\r\n                    const params = toParams(popup.location.search.replace(/^\\?/, \"\"));\r\n\r\n                    resolve(params);\r\n\r\n                    this.close();\r\n                } catch (error) {\r\n                    /*\r\n           * Ignore DOMException: Blocked a frame with origin from accessing a\r\n           * cross-origin frame.\r\n           */\r\n                }\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        if (this._iid) {\r\n            window.clearInterval(this._iid);\r\n            this._iid = null;\r\n        }\r\n    }\r\n\r\n    then(...args) {\r\n        return this.promise.then(...args);\r\n    }\r\n\r\n    catch(...args) {\r\n        return this.promise.then(...args);\r\n    }\r\n\r\n    static open(...args) {\r\n        const popup = new this(...args);\r\n\r\n        popup.open();\r\n        popup.poll();\r\n\r\n        return popup;\r\n    }\r\n}\r\n\r\nexport default PopupWindow;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"@material-ui/core\";\r\nimport PopupWindow from './PopupWindow';\r\nimport { toQuery } from './utilities';\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nclass LoginGithub extends Component {\r\n  static propTypes = {\r\n        buttonText: PropTypes.string,\r\n        children: PropTypes.node,\r\n        className: PropTypes.string,\r\n        clientId: PropTypes.string.isRequired,\r\n        onRequest: PropTypes.func,\r\n        onSuccess: PropTypes.func,\r\n        onFailure: PropTypes.func,\r\n        popupHeight: PropTypes.number,\r\n        popupWidth: PropTypes.number,\r\n        redirectUri: PropTypes.string,\r\n        scope: PropTypes.string,\r\n        disabled: PropTypes.bool\r\n    }\r\n\r\n  static defaultProps = {\r\n        buttonText: 'Sign in with GitHub',\r\n        redirectUri: '',\r\n        scope: 'user:email',\r\n        popupHeight: 650,\r\n        popupWidth: 500,\r\n        onRequest: () => {},\r\n        onSuccess: () => {},\r\n        onFailure: () => {},\r\n  }\r\n\r\n  onBtnClick = () => {\r\n        const { clientId, scope, redirectUri, popupHeight, popupWidth} = this.props;\r\n        const search = toQuery({\r\n        client_id: clientId,\r\n        scope,\r\n        redirect_uri: redirectUri,\r\n    });\r\n\r\n    // To fix issues with window.screen in multi-monitor setups, the easier option is to\r\n    // center the pop-up over the parent window.\r\n    const top = window.top.outerHeight / 2 + window.top.screenY - (popupHeight / 2);\r\n    const left = window.top.outerWidth / 2 + window.top.screenX - (popupWidth / 2);\r\n\r\n    const popup = this.popup = PopupWindow.open(\r\n      'github-oauth-authorize',\r\n      `https://github.com/login/oauth/authorize?${search}`,\r\n      {\r\n        height: popupHeight,\r\n        width: popupWidth,\r\n        top: top,\r\n        left: left\r\n      }\r\n    );\r\n\r\n    this.onRequest();\r\n    popup.then(\r\n      data => this.onSuccess(data),\r\n      error => this.onFailure(error)\r\n    );\r\n  }\r\n\r\n  onRequest = () => {\r\n    this.props.onRequest();\r\n  }\r\n\r\n  onSuccess = (data) => {\r\n    if (!data.code) {\r\n      return this.onFailure(new Error('\\'code\\' not found'));\r\n    }\r\n\r\n    this.props.onSuccess(data);\r\n  }\r\n\r\n  onFailure = (error) => {\r\n    this.props.onFailure(error);\r\n  }\r\n\r\n  render() {\r\n    const { className, buttonText, children, disabled } = this.props;\r\n    const attrs = {\r\n      onClick: this.onBtnClick,\r\n      className: className || '',\r\n      disabled: disabled || false,\r\n      variant: \"contained\",\r\n      startIcon: <GitHubIcon/>\r\n    };\r\n    return <Button {...attrs}>{ children || buttonText }</Button>;\r\n  }\r\n}\r\n\r\nexport default LoginGithub;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flex: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\"\r\n    },\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"80%\",\r\n        border: `1px solid ${theme.palette.secondary.main}`,\r\n        boxShadow: `8px 7px 4px 1px ${theme.palette.secondary.main}4a`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 78%,\r\n            ${theme.palette.secondary.light}f5 220%)`,\r\n        borderRadius: \"0.5em\",\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonForm: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    buttonWrapper: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    signupButtonWrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: \"absolute\",\r\n        top: \"24px\",\r\n        left: \"32px\",\r\n        marginTop: -8,\r\n        marginLeft: -8,\r\n        zIndex: 1\r\n    },\r\n}));\r\n\r\nexport default useStyles;","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst CustomBackdrop = ({forwardedref, ...props}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Backdrop {...props} ref={forwardedref} color=\"primary\" className={classes.backdrop}>\r\n            <CircularProgress color=\"inherit\"/>\r\n        </Backdrop>\r\n    );\r\n};\r\n\r\n/* export default CustomBackdrop; */\r\nexport default React.forwardRef((props, ref) => <CustomBackdrop {...props} forwardedref={ref} />);","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { Button, TextField, Typography, Link } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {userLogin, userSocialLogin} from \"./authenticationSlice\";\r\nimport {PasswordResetRequest} from \"./AccountMangementPage\";\r\nimport {useFormik } from \"formik\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport LoginGithub from \"../utils/LoginGithub\";\r\nimport {GoogleIcon} from \"../utils/utilities\";\r\nimport {useAuth} from \"../../api/api\";\r\nimport useStyles from \"./authFormStyles\";\r\nimport CustomBackdrop from \"../ui/CustomBackdrop\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst LoginForm = () => {\r\n\r\n    // backdrop state\r\n    const [show, setShow] = React.useState(false);\r\n    //  auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // router\r\n    const history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // useeffect\r\n    React.useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.replace(\"/cards\");\r\n        }\r\n    },[isAuthenticated]);\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues:{username: \"\", password: \"\"},\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userLogin(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"rejected\") {\r\n                        const {\r\n                            username, password,\r\n                            non_field_errors\r\n                        } = result.payload;\r\n                    \r\n                        formikBag.setErrors({\r\n                            username: username ? username.toString() : \"Invalid Credentials\",\r\n                            password: password ? password.toString() : \"Invalid Credentials\",\r\n                        });\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() :\"Authenticaton Error\", { \r\n                            variant: \"error\",\r\n                        });\r\n                        formikBag.setSubmitting(false);\r\n                    }\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n                .min(4, \"Must be more than 4 characters\")\r\n                .required(\"Required\"),\r\n            password: Yup.string()\r\n                .required(\"Required\"),\r\n        })\r\n    });\r\n    return (\r\n        <>\r\n            <CustomBackdrop open={show}/>\r\n            <Container className={classes.flex} fluid>\r\n                <Typography variant=\"h3\" className={classes.buttonForm}> Welcome to Carded </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.buttonForm}> Please Login to continue or click <Link href=\"/signup\" color=\"inherit\">here</Link> to register an account </Typography>\r\n                <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        id=\"id-username\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        autoComplete=\"username\"\r\n                        error={!!formik.errors.username}\r\n                        helperText={!!formik.errors.username && formik.errors.username}\r\n                        fullWidth\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"id-password\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        autoComplete=\"current-password\"\r\n                        error={!!formik.errors.password}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <div className={classes.buttonWrapper}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            type=\"submit\"\r\n                            disabled={formik.isSubmitting}\r\n                            className={classes.buttonForm}\r\n                            margin='dense'\r\n                        >\r\n                        Login\r\n                        </Button>\r\n                        <Typography variant=\"body1\" className={classes.buttonForm}> or </Typography>\r\n                        <GoogleAuthButton backdrop={setShow}/>\r\n                        <GithubAuthButton backdrop={setShow}/>\r\n                        {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </div>\r\n                </form>\r\n                <PasswordResetRequest/>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst GoogleAuthButton = ({backdrop}) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // handle login\r\n    function handleSuccessLogin({accessToken}) {\r\n        let url = \"/backend/dj-rest-auth/google/\";\r\n        dispatch(userSocialLogin({url, access_token:accessToken}))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"rejected\") {\r\n                    const { non_field_errors } = result.payload;\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() : \"Error Using social Auth, Try again later\", {\r\n                        variant: \"error\"\r\n                    });\r\n                    return;\r\n                }\r\n                enqueueSnackbar(\"Welcome\", {\r\n                    variant: \"success\"\r\n                });\r\n            });\r\n    }\r\n    // handle load\r\n    function handleFailureLogin(res) {\r\n        console.log(res);\r\n        enqueueSnackbar(\"Error Using social Auth, Try again later\", {\r\n            variant: \"error\"\r\n        });\r\n    }\r\n\r\n    return(\r\n        <GoogleLogin\r\n            clientId={\"225063154787-g0p5ukj9irp5ak4i74nvcolf7hk7mdki.apps.googleusercontent.com\"}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            onSuccess={handleSuccessLogin}\r\n            onFailure={handleFailureLogin}\r\n            render={renderProps => (\r\n                <Button \r\n                    variant=\"contained\"\r\n                    startIcon={<GoogleIcon/>}\r\n                    className={classes.buttonForm} \r\n                    onClick={() => {\r\n                        backdrop(true);\r\n                        renderProps.onClick();\r\n                    }} \r\n                    disabled={renderProps.disabled}>\r\n                        Sign In with Google\r\n                </Button>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst GithubAuthButton = () => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // handle login\r\n    function handleSuccessLogin({code}) {\r\n        let url = \"/backend/dj-rest-auth/github/\";\r\n        dispatch(userSocialLogin({url, code}))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"rejected\") {\r\n                    const { non_field_errors } = result.payload;\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() : \"Error Using social Auth, Try again later\", {\r\n                        variant: \"error\"\r\n                    });\r\n                    return;\r\n                }\r\n                enqueueSnackbar(\"Welcome\", {\r\n                    variant: \"success\"\r\n                });\r\n            });\r\n    }\r\n    // handle load fail\r\n    function handleFailureLogin(res) {\r\n        console.log(res);\r\n        enqueueSnackbar(\"Error Using social Auth, Try again later\", {\r\n            variant: \"error\"\r\n        });\r\n    }\r\n\r\n    return(\r\n        <LoginGithub\r\n            className={classes.buttonForm}\r\n            clientId={\"03fa45fab73ccf9ff6dc\"}\r\n            onSuccess={handleSuccessLogin}\r\n            onFailure={handleFailureLogin}\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { Button, TextField, Typography, Link } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useStyles from \"./authFormStyles\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport {userSignup} from \"./authenticationSlice\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst SignupForm = () => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: { username: \"\", password1: \"\", password2: \"\", email: \"\" },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userSignup(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Account Created Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        const {\r\n                            username, password1,\r\n                            password2, email, non_field_errors\r\n                        } = result.payload;\r\n                        formikBag.setErrors({\r\n                            username: username ? username.toString(): \"\",\r\n                            password1: password1 ? password1.toString(): \"\",\r\n                            password2: password2 ? password2.toString(): \"\",\r\n                            email: email ? email.toString(): \"\",\r\n                            non_field_errors: non_field_errors ? non_field_errors.toString(): \"\",\r\n                        });\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() : \"Error, Try again\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n                .max(18, \"Must be 18 characters or less\")\r\n                .min(4, \"Must be more than 4 characters\")\r\n                .required(\"Required\"),\r\n            password1: Yup.string()\r\n                .required(\"Required\"),\r\n            password2: Yup.string()\r\n                .required(\"Required\"),\r\n            email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n        })\r\n    });\r\n \r\n    return (\r\n        <>\r\n            <Container className={classes.flex} fluid>\r\n                <Typography variant=\"h3\" className={classes.buttonForm}> Register for a carded account </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.buttonForm} paragraph> Have an account? click <Link href=\"/login\" color=\"inherit\">here</Link> to login </Typography>\r\n                <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                    <TextField\r\n                        name=\"username\"\r\n                        label=\"Username\"\r\n                        id=\"id-username\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        autoComplete={\"username\"}\r\n                        error={!!formik.errors.username && !!formik.touched.username}\r\n                        helperText={!!formik.errors.username && !!formik.touched.username && formik.errors.username}\r\n                        fullWidth\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        id=\"id-email\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        autoComplete={\"email\"}\r\n                        error={!!formik.errors.email && !!formik.touched.email}\r\n                        helperText={!!formik.errors.email && !!formik.touched.email && formik.errors.email}\r\n                        fullWidth\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        name=\"password1\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"id-password1\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        autoComplete={\"new-password\"}\r\n                        error={!!formik.errors.password1 && !!formik.touched.password1}\r\n                        helperText={!!formik.errors.password1 && !!formik.touched.password1 && formik.errors.password1}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        name=\"password2\"\r\n                        label=\"Confirm Password\"\r\n                        type=\"password\"\r\n                        id=\"id-password2\"\r\n                        margin=\"dense\"\r\n                        color=\"secondary\"\r\n                        autoComplete={\"new-password\"}\r\n                        error={!!formik.errors.password2 && !!formik.touched.password2}\r\n                        helperText={!!formik.errors.password2 && !!formik.touched.password2 && formik.errors.password2}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <div className={classes.signupButtonWrapper}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"default\"\r\n                            type=\"submit\"\r\n                            onClick={formik.handleSubmit}\r\n                            disabled={formik.isSubmitting}\r\n                            className={classes.buttonForm}\r\n                        >\r\n                        Sign up\r\n                        </Button>\r\n                        {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React from \"react\";\r\nimport {Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootMain: {\r\n        minWidth: \"40%\",\r\n        minHeight: \"calc(97vh - 56px)\",\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 52%,\r\n            ${theme.palette.secondary.main}f5 300%)`,\r\n        border: `1px solid ${theme.palette.secondary.light}`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.8em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\",\r\n        overflowY:\"auto\"\r\n    },\r\n    rootSection: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        alignContent: \"flex-start\",\r\n        padding: \".4em .5em\",\r\n        margin: \".2em .7em\",\r\n        boxShadow: `6px 5px 4px 1px ${theme.palette.secondary.main}4a`,\r\n        borderTop: `1px solid ${theme.palette.secondary.main}`,\r\n        borderBottom: `1px solid ${theme.palette.secondary.main}`,\r\n        borderRadius: \"0.7em\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    rootTitle: {\r\n        borderRadius: \"0.2em\",\r\n        padding: \".4em .5em\",\r\n        margin: \".2em .7em\",\r\n        borderBottom: `1px solid ${theme.palette.secondary.dark}`,\r\n    },\r\n    flexRow: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    },\r\n    flexColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    }\r\n}));\r\n\r\n\r\nconst AboutPage = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.rootMain}>\r\n            <div className={classes.rootTitle}>\r\n                <Typography variant=\"h4\" >\r\n                Hi, Welcome to My Carded Webapp project\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.rootSection}>\r\n                <Typography variant=\"h5\" paragraph>\r\n                Project Goal:\r\n                </Typography>\r\n                <div>   \r\n                    <Typography variant=\"body2\" paragraph>\r\n                    My goal with this project is mainly about grasping the basics of REST APIs, futhering my Javasript knowledge, SPAs and RWAs.\r\n                    </Typography>\r\n                    <Typography variant=\"body2\"paragraph>\r\n                    I love learning by building and with a simple backend for CRUD operations, I was able to familiarize\r\n                    and deepen my understanding of several development frameworks.\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={classes.rootSection}>\r\n                <Typography variant=\"h5\" paragraph>\r\n                Project Details:\r\n                </Typography>\r\n                <div>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Funtionalities of this basic app incudes the\r\n                    ability to take down notes (cards), grouping of cards by deck, moving of cards in between different decks,\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Basic user account creation, Password reset, Oauth by Google/Github, Profile Picture upload and other CRUD operations.\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className={classes.rootSection}>\r\n                <Typography variant=\"h5\" paragraph>\r\n                Project Frameworks:\r\n                </Typography>\r\n                <div>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Languages: Python, Javasript, CSS-in-JS.\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Backend: Django, Django-REST-frameworks, Allauth, Health checks.\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Frontend: React for web, React-redux, React-router, MaterialUI, Notisstack, Axios, Formik, Babel, Webpack etc.\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" paragraph>\r\n                    Hosting: AWS Beanstalk, AWS S3, AWS EC2, Google domains.\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutPage;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {selectActiveDeck} from \"../decks/deckSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: \"0.4em 1em\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n        borderRadius: \".4em\"\r\n    },\r\n    innerForm: {\r\n        padding: \"0.4em 0.4em\",\r\n        border: `0.5px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: \".5em\",\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    Decks: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n    },\r\n    innerDecks: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"auto 1fr\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"1em\",\r\n        [theme.breakpoints.between(\"100\", \"500\")]: {\r\n            gridTemplateColumns: \"none\",\r\n            gridTemplateRows: \"auto\"\r\n        },\r\n    },\r\n    innerListForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.secondary.light}`,\r\n        borderRadius: \".8em\",\r\n        [theme.breakpoints.between(\"100\", \"500\")]: {\r\n            maxHeight: \"200px\"\r\n        },\r\n    },\r\n    innerCards: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    deckList: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n        width: \"100%\",\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr auto\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"1em\"\r\n    },\r\n}));\r\n\r\nconst MainBodyLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n    // decks\r\n    const deck = props.deck;\r\n    // deckform\r\n    const deckForm = props.deckForm;\r\n    // cards\r\n    const cards = props.cards;\r\n    // search\r\n    const search = props.search;\r\n    // selected deck\r\n    const selectedDeckId = useSelector(selectActiveDeck);\r\n\r\n    return(\r\n        <div className={classes.wrapperMain}>\r\n            <div className={classes.innerForm}>\r\n                {props.input}\r\n            </div>\r\n            {cards && \r\n            <div className={classes.innerCards}>\r\n                {props.body}\r\n            </div>\r\n            }\r\n            {search && \r\n            <div className={classes.innerCards}>\r\n                {props.searchBody}\r\n            </div>\r\n            }\r\n            { deck &&\r\n            <div className={classes.Decks}>\r\n                <ListGroup horizontal className={classes.deckList}>\r\n                    {props.deckList}\r\n                </ListGroup>\r\n                <div className={classes.innerDecks}>\r\n                    {selectedDeckId && \r\n                        <div className={classes.innerListForm}>\r\n                            {deckForm}\r\n                        </div>\r\n                    }\r\n                    <div className={classes.innerCards}>\r\n                        {props.decks}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst InputFormLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.formContainer}>\r\n            <div className={classes.inputContainer}>\r\n                {props.input}\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n                {props.options}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {InputFormLayout, MainBodyLayout};","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useFormik } from \"formik\";\r\nimport {TextField, Button,} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewCard} from \"./cardsSlice\";\r\nimport {InputFormLayout} from \"../ui/uiFormat\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    baseCardForm: {\r\n        width: \"100%\",\r\n        marginBottom: theme.spacing(1),\r\n        display: \"grid\",\r\n        gridTemplateRows: \"auto\",\r\n        gap: \"1em\"\r\n    },\r\n    cardFormButtonsGroup: {\r\n        display: \"flex\"\r\n    },\r\n    formButton: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    deleteButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CustomCardInput = () => {\r\n    \r\n    // react \r\n    const [showInput, setShowInput] = useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n        },\r\n        onSubmit: async (values) => {\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            if (values.title === \"\") {\r\n                delete values.title;\r\n            }\r\n            const requestBody = {\r\n                ...values\r\n            };\r\n            dispatch(addNewCard(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        formik.handleReset();\r\n                        setShowInput(false);\r\n                        enqueueSnackbar(\"Card Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating card\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    });\r\n    // material classes\r\n    const classes = useStyles();\r\n    // handle focuseEvent\r\n    const handleFocus = () => {\r\n        setShowInput(true);\r\n    };\r\n    const handleClose = () => {\r\n        setShowInput(false);\r\n    };\r\n\r\n    return(\r\n        <InputFormLayout\r\n            input={\r\n                <form className={classes.baseCardForm} autoComplete=\"off\" noValidate onSubmit={formik.handleSubmit}>\r\n                    {showInput && \r\n                    <TextField \r\n                        id=\"title-basic\" \r\n                        name=\"title\" \r\n                        label=\"Title\" \r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onChange={formik.handleChange} \r\n                        margin=\"dense\"/>\r\n                    }\r\n                    <TextField id=\"content-basic\"\r\n                        name=\"content\" \r\n                        label=\"New Card\" \r\n                        variant=\"outlined\" \r\n                        color=\"secondary\"\r\n                        onChange={formik.handleChange} \r\n                        onFocus={handleFocus}\r\n                        value={formik.values.content}\r\n                        multiline \r\n                        fullWidth\r\n                        placeholder=\"Start typing to add a new card\"\r\n                    />\r\n                    {showInput && \r\n                <div className={classes.cardFormButtonsGroup}>\r\n                    <Button variant=\"outlined\"\r\n                        color=\"secondary\" \r\n                        onClick={formik.handleSubmit} \r\n                        className={classes.formButton}\r\n                        disabled={!formik.dirty}\r\n                    > Save Card</Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose} className={classes.deleteButton}> Cancel</Button>\r\n                </div>\r\n                    }\r\n                </form>\r\n            }\r\n\r\n            options={\r\n                <InputButtonGroup formik={formik} input={{showInput, setShowInput}}/>\r\n            }\r\n        \r\n        />\r\n    );\r\n};\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {input} = props;\r\n\r\n    return (\r\n        <Button onClick={() => input.setShowInput((state) => !state)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\">{input.showInput ? \"Close\" : \"Expand\"}</Button>\r\n    );\r\n};\r\n\r\nexport default CustomCardInput;","import React, {useState} from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n    removeCard, selectCardById, editCard,\r\n    selectCardsStatus\r\n} from \"./cardsSlice\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {Button, IconButton, Dialog, DialogActions, DialogTitle, DialogContent, TextField, makeStyles} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n/* boxShadow: '-1px 1px 5px 1px rgb(142 142 142 / 75%)', */\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    cardMain: {\r\n        display: \"grid\",\r\n        position: \"relative\",\r\n        gridTemplateRows: \"auto 1fr auto\",\r\n        cursor: \"pointer\",\r\n        padding: \"0.2em\",\r\n        borderRadius: \".4em\",\r\n        overflow: \"hidden\",\r\n        boxShadow: `0px 0px 1px 0px ${theme.palette.text.primary}`,\r\n        width: \"auto\",\r\n        minWidth: \"150px\",\r\n        maxWidth: \"calc((95vw / 2) - 28px)\",\r\n        minHeight: \"220px\",\r\n        maxHeight: \"305px\",\r\n        margin: \"0.3em 0.5em\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            maxWidth: \"calc((95vw / 2) - 28px)\",\r\n            minWidth: \"180px\"\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            maxWidth: \"calc((95vw / 3) - 15px)\",\r\n            minWidth: \"190px\"\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            maxWidth: \"calc((95vw / 4) - 15px)\",\r\n            minWidth: \"200px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            maxWidth: \"calc((95vw / 5) - 15px)\",\r\n            minWidth: \"210px\"\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            maxWidth: \"calc((95vw / 6) - 15px)\",\r\n            minWidth: \"220px\"\r\n        },\r\n    },\r\n    cardSubject: {\r\n        padding: \".3em\",\r\n        borderBottom: `1px solid ${theme.palette.secondary.dark}`,\r\n        fontWeight: \"600\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\"\r\n    },\r\n    cardContent: {\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        overflowWrap: \"break-word\",\r\n        whiteSpace: \"normal\",\r\n        wordBreak: \"break-all\",\r\n        padding: \".3em\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        fontSize: \"1rem\"\r\n    },\r\n    cardExtras: {\r\n        padding: \".2em\",\r\n        display: \"flex\",\r\n        justifySelf: \"stretch\",\r\n        overflow: \"hidden\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n\r\n}));\r\n\r\nconst CardBody = (props) => {\r\n\r\n    const id = props.id;\r\n    // react\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const dispatch = useDispatch();\r\n    const card = useSelector(state => selectCardById(state, id));\r\n    // router-dom\r\n    let history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const renderButtons = props.renderButtons ? props.renderButtons : true;\r\n\r\n    const handleDeleteClicked = () => {\r\n        dispatch(removeCard(id))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Card Deleted\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error removing item\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleCardBodyClick = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const handleEditClicked = () => {\r\n        history.push(`/card/edit/${id}`);\r\n    };\r\n\r\n    const cardprops = {\r\n        id,\r\n        handleDeleteClicked,\r\n        showDialog,\r\n        setShowDialog,\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {cardsStatus === \"updated\" &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <div className={classes.cardSubject}>\r\n                    {card.title}\r\n                </div>\r\n                <div className={classes.cardContent} data-index={id} onClick={() => handleCardBodyClick()}>\r\n                    {card.content}\r\n                </div>\r\n                { renderButtons &&\r\n                    <div className={classes.cardExtras}>\r\n                        <Button color=\"default\" size=\"small\" href=\"\" data-index={id} onClick={() => handleEditClicked()}>\r\n                            Edit\r\n                        </Button>\r\n                        <DeleteDialogSlide cardProps={cardprops}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {showDialog && <EditCardDialogForm state={cardprops}/>}\r\n        </>\r\n            }\r\n            {cardsStatus === \"stale\" &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <Skeleton variant=\"rect\" height={220} animation=\"wave\"/>\r\n            </div>\r\n        </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst EditCardDialogForm = (props) => {\r\n\r\n    // state\r\n    const {id, showDialog, setShowDialog} = props.state;\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let card  = useSelector(state => selectCardById(state, id));\r\n\r\n    // formik, using hook to make form layout easier\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: card[\"title\"],\r\n            content: card[\"content\"],\r\n        },\r\n        onSubmit: (values) => {\r\n            // Do stuff here...\r\n            const {title, content} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                id,\r\n                title,\r\n                content,\r\n            };\r\n            dispatch(editCard({id, requestBody}))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Card Updated\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error updating item\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n            setShowDialog(false);\r\n        }\r\n    });\r\n\r\n    // handle dialog\r\n    const handleClose = () => setShowDialog(false);\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={showDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-card\">{formik.values.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        id=\"titleDialog\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        name='title'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.title}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        id=\"contentDialog\"\r\n                        label=\"Content\"\r\n                        name='content'\r\n                        multiline\r\n                        rows={7}\r\n                        fullWidth\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.content}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>\r\n                Cancel\r\n                    </Button>\r\n                    <Button color=\"default\" onClick={formik.handleSubmit}>\r\n                Update\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n  \r\nconst DeleteDialogSlide = (props) => {\r\n    //react \r\n    const [open, setOpen] = React.useState(false);\r\n    // material\r\n    const classes = useStyles();\r\n    //destructure\r\n    const {handleDeleteClicked} =props.cardProps;\r\n  \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n        setOpen(false);\r\n        handleDeleteClicked();\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n            <IconButton \r\n                aria-label=\"delete\"\r\n                onClick={handleClickOpen}\r\n                size=\"small\"\r\n            >\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n                aria-labelledby=\"alert-dialog-slide-prompt\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-prompt\">{\"Delete this Item?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n                    </Button>\r\n                    <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default CardBody;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport clsx from \"clsx\";\r\nimport {selectDeckById, updateActiveDeck, removeDeckById, selectActiveDeck} from \"./deckSlice\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteIconOutlinedColorPrimary: {\r\n        color: theme.palette.warning.light,\r\n        \"&:hover\": {\r\n            color:\"#e61e1eb3\"\r\n        }\r\n    },\r\n    clickableColorPrimary: {\r\n        background: theme.palette.background.paper,\r\n    },\r\n    root: {\r\n        margin: \"0.3em 0.2em\",\r\n        boxShadow: \"-2px 1px 2px 0px rgb(50 50 50 / 65%)\",\r\n        color: theme.palette.text.primary,\r\n        \"&$active\": {\r\n            background: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n            boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n            \"&:hover\": {\r\n                background: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n    },\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    active: {}\r\n}));\r\n  \r\nconst DeckItem = (props) => {\r\n\r\n    const id = props.id;\r\n    //react \r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const deck = useSelector(state => selectDeckById(state, id));\r\n    const activeDeck = useSelector(selectActiveDeck);\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDelete(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpenDelete(false);\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        // implement dispatch state with curr deck id\r\n        dispatch(removeDeckById(id))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Deleted\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error removing item\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const handleDeckClick = () => {\r\n        // implement update state with curr deck id\r\n        dispatch(updateActiveDeck(id));\r\n    };\r\n\r\n    const delProps = {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Chip \r\n                label={deck.name} \r\n                onDelete={handleClickOpen} \r\n                onClick={() => handleDeckClick(deck.id)} \r\n                color=\"primary\" \r\n                variant=\"outlined\"\r\n                classes={{\r\n                    root: classes.root,\r\n                    deleteIconOutlinedColorPrimary: classes.deleteIconOutlinedColorPrimary,\r\n                }}\r\n                className={clsx({\r\n                    [classes.active]: activeDeck === id,\r\n                })}\r\n                clickable\r\n            />\r\n            <DeleteDialogSlide {...delProps}/>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DeleteDialogSlide = (props) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n    \r\n    const {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    } = props;\r\n\r\n    \r\n    const handleConfirm = () => {\r\n        handleClose();\r\n        handleDeleteClick();\r\n    };\r\n  \r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={openDelete}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete this Item?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n                    </Button>\r\n                    <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default DeckItem;","import React from \"react\";\r\nimport CardBody from \"../cards/CardBody\";\r\nimport DeckItem from \"../decks/DeckItem\";\r\n\r\nconst useCreateDeck = (listObj) => {\r\n\r\n    let tabledDeck = [];\r\n    if (listObj.length >= 0) {\r\n        tabledDeck = listObj.map((deck) => {\r\n            return {value: deck[\"id\"], label: deck[\"name\"] };\r\n        });\r\n        return tabledDeck;\r\n    } else {\r\n        return tabledDeck;\r\n    }\r\n};\r\n\r\nconst useCardsCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null;\r\n    if (listObj.length === 0 ) return [];\r\n    let cards = listObj.map((item) => {\r\n        return <CardBody key={item} id={item}/>;\r\n    });\r\n\r\n    return cards;\r\n\r\n};\r\n\r\nconst useDecksCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null;\r\n    if (listObj.length === 0 ) return null;\r\n\r\n    let cards = listObj.map((item) => {\r\n        return <DeckItem key={item} id={item}/>;\r\n    });\r\n\r\n    return cards;\r\n};\r\n\r\nexport {useCreateDeck, useCardsCreator, useDecksCreator};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    emptyRoot: {\r\n        display: 'grid',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    Icon: {\r\n        justifySelf: 'center',\r\n    },\r\n}));\r\n\r\n\r\nconst EmptyListRender = (props) => {\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.emptyRoot}>\r\n            <ArrowUpwardIcon fontSize=\"large\" className={classes.Icon}/>\r\n            <Typography variant={'h4'}> {props.children} </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyListRender;","import React from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport {selectCardsTotal, selectCardsIds, selectCardsStatus, fetchCards} from \"./cardsSlice\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {MainBodyLayout} from \"../ui/uiFormat\";\r\nimport CustomBackdrop from \"../ui/CustomBackdrop\";\r\nimport CustomCardInput from \"./CardInputBox\";\r\nimport {useCardsCreator} from \"../hooks/customHooks\";\r\nimport EmptyListRender from \"../ui/EmptyListRender\";\r\n\r\n\r\nconst CardList = () => {\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            dispatch(fetchCards())\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"rejected\") {\r\n                        enqueueSnackbar(\"Error getting cards, Try again\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }, [cardsStatus, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <MainBodyLayout\r\n                input={<CustomCardInput/>}\r\n                body={<CardsListRender/>}\r\n                cards\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst CardsListRender = () => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsTotal);\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const totalCardsId = useSelector(selectCardsIds);\r\n    const cardsArray = useCardsCreator(totalCardsId);\r\n\r\n    if (cardsArray === null && cardsStatus === \"stale\") {\r\n        return (\r\n            <CustomBackdrop/>\r\n        );\r\n    } else if (cardsStatus === \"updated\" && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Cards, Create a Card</EmptyListRender>\r\n        );\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst newCardStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: '0.4em 1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center',\r\n        borderRadius: '.4em'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '90%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    formCtl: {\r\n\r\n    }\r\n}));\r\n\r\nexport default newCardStyles;","import React from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {selectAllDecks, selectDecksStatus, fetchDecks} from \"../decks/deckSlice\";\r\n\r\nconst CustomSelect = ({formik, defaultArr}) => {\r\n\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    const deckStatus = useSelector(selectDecksStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (defaultArr && defaultArr.length > 0) {\r\n            let arr = defaultArr.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n        }\r\n    }, []);\r\n    \r\n    React.useEffect(() => {\r\n        if (deckStatus === \"stale\") {\r\n            dispatch(fetchDecks());\r\n        }\r\n    }, [deckStatus]);\r\n    \r\n    const handleChange = (event, optionArray, reason) => {\r\n        \r\n        switch (reason) {\r\n        case \"select-option\": {\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        } \r\n        case \"remove-option\":{\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        }\r\n        \r\n        case \"clear\":{\r\n            formik.setFieldValue(\"selectedDeck\", [], false);\r\n            break;\r\n        }\r\n        \r\n        default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Autocomplete\r\n            multiple\r\n            freeSolo\r\n            fullWidth\r\n            filterSelectedOptions={true}\r\n            autoComplete={true}\r\n            margin={\"dense\"}\r\n            id=\"tags-filled\"\r\n            options={allDecksList}\r\n            defaultValue={defaultArr ? defaultArr : []}\r\n            getOptionLabel={option => option.name}\r\n            getOptionSelected={(option, value) => {\r\n                if (option.id === value.id) return true;\r\n                return false;\r\n            }}\r\n            renderTags={(deckList, getTagProps) =>\r\n                deckList.map((deck, index) => (\r\n                    <Chip variant=\"outlined\" label={deck.name} key={deck.id} {...getTagProps({ index })} />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField {...params} margin={\"dense\"} label=\"Select Deck\" placeholder=\"...\" />\r\n            )}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CustomSelect;","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport newCardStyles from \"./newCardStyles\";\r\nimport DeckCustomSelect from \"./CustomDeckSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewCard} from \"./cardsSlice\";\r\n\r\nconst AddCardForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // material\r\n    const classes = newCardStyles();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n            selectedDeck: [],\r\n        },\r\n        onSubmit:(values) => {\r\n            // Do stuff here...\r\n            const {title, content, selectedDeck: notebook} = values;\r\n            const requestBody = {\r\n                title,\r\n                content,\r\n                notebook,\r\n            };\r\n            if (requestBody.title === \"\") {\r\n                delete requestBody.title;\r\n            }\r\n            dispatch(addNewCard(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Card Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating card\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <div className={classes.wrapperMain}>\r\n                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        name=\"title\"\r\n                        id=\"cardTitle\"\r\n                        label=\"Title\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        multiline\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        rows={10}\r\n                        name=\"content\"\r\n                        id=\"cardContent\"\r\n                        label=\"Content\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.content}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <DeckCustomSelect formik={formik}/>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\" \r\n                        margin={\"dense\"}\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.dirty}\r\n                    >\r\n                        Create Card\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n/* const CustomSelect = ({formik, defaultArr}) => {\r\n\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    \r\n    const handleChange = (event, optionArray, reason) => {\r\n        \r\n        switch (reason) {\r\n        case \"select-option\": {\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        } \r\n        case \"remove-option\":{\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        }\r\n        \r\n        case \"clear\":{\r\n            formik.setFieldValue(\"selectedDeck\", [], false);\r\n            break;\r\n        }\r\n        \r\n        default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Autocomplete\r\n            multiple\r\n            freeSolo\r\n            fullWidth\r\n            autoComplete={true}\r\n            margin={\"dense\"}\r\n            id=\"tags-filled\"\r\n            options={allDecksList}\r\n            defaultValue={defaultArr ? defaultArr : []}\r\n            getOptionLabel={option => option.name}\r\n            renderTags={(deckList, getTagProps) =>\r\n                deckList.map((deck, index) => (\r\n                    <Chip variant=\"outlined\" label={deck.name} key={deck.id} {...getTagProps({ index })} />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField {...params} margin={\"dense\"} label=\"Select Deck\" placeholder=\"...\" />\r\n            )}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}; */\r\nexport default AddCardForm;","import React from 'react';\r\nimport {Typography, } from '@material-ui/core';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nconst NoMatchFound = (props) => {\r\n\r\n    return(\r\n        <Container>\r\n            <Typography>Error, Page does not exist</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoMatchFound","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport newCardStyles from \"./newCardStyles\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport { Formik  } from \"formik\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {editCard, selectCardById, selectCardsStatus, fetchCards} from \"./cardsSlice\";\r\nimport {selectAllDecks, selectDecksStatus, fetchDecks} from \"../decks/deckSlice\";\r\nimport DeckCustomSelect from \"./CustomDeckSelect\";\r\nimport NoMatchFound from \"../ui/CustomNoMatchFound\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst EditCardPage = () => {\r\n    // react state\r\n    const [pageState, setPageState] = React.useState(\"load\");\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let cardsStatus  = useSelector(selectCardsStatus);\r\n    let decksStatus  = useSelector(selectDecksStatus);\r\n    // material\r\n    const classes = newCardStyles();\r\n    // use effect for getting cards\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            setPageState(\"load\");\r\n            dispatch(fetchCards());\r\n        } else {\r\n            setPageState(\"show\");\r\n        }\r\n    },[cardsStatus]);\r\n    // effect for decks \r\n    React.useEffect(() => {\r\n        if (decksStatus === \"stale\") {\r\n            setPageState(\"load\");\r\n            dispatch(fetchDecks());\r\n        } else {\r\n            setPageState(\"show\");\r\n        }\r\n    },[decksStatus]);\r\n\r\n    return(\r\n        <div className={classes.wrapperMain}>\r\n            {pageState === \"load\" && \r\n                <Skeleton variant=\"rect\" height={220} animation=\"wave\"/>\r\n            }\r\n            {pageState === \"show\" && \r\n                <EditCardForm/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst EditCardForm = () => {\r\n\r\n    // react-router\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let cardsStatus  = useSelector(selectCardsStatus);\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = newCardStyles();\r\n    // redux store\r\n    let card  = useSelector(state => selectCardById(state, id));\r\n    if (cardsStatus === \"updated\" && !card) {\r\n        return (\r\n            <>\r\n                <NoMatchFound/>\r\n            </>\r\n        );\r\n    }\r\n    // custom hook\r\n    // formats decklist into a clean array\r\n    let currentCardDeck = [];\r\n\r\n    // fills current card deck with decks card is in\r\n    if (card) {\r\n        card.notebook.forEach(deckId => {\r\n            let deck = allDecksList.find((deckobj) => deckId === deckobj.id);\r\n            const {id, name} = deck;\r\n            currentCardDeck.push({id, name});\r\n        });\r\n    }\r\n \r\n    return(\r\n        <>\r\n            {card &&\r\n                    <>\r\n                        <Formik\r\n                            initialValues={{\r\n                                title: card[\"title\"],\r\n                                content: card[\"content\"],\r\n                                selectedDeck: [],\r\n                            }}\r\n                            onSubmit={\r\n                                (values) => {\r\n                                    // Do stuff here...\r\n                                    const {title, content, selectedDeck: notebook} = values;\r\n                                    /* alert(JSON.stringify(values, null, 3)); */\r\n                                    const requestBody = {\r\n                                        id,\r\n                                        title,\r\n                                        content,\r\n                                        notebook\r\n                                    };\r\n                                    dispatch(editCard({id, requestBody}))\r\n                                        .then((result) => {\r\n                                            if (result.meta.requestStatus === \"fulfilled\") {\r\n                                                enqueueSnackbar(\"Card Updated\", { \r\n                                                    variant: \"success\",\r\n                                                });\r\n                                                history.goBack();\r\n                                            } else {\r\n                                                enqueueSnackbar(\"Error Updating\", { \r\n                                                    variant: \"error\",\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                }\r\n                            }\r\n                        >\r\n                            {formik => (\r\n                                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        margin={\"dense\"}\r\n                                        name=\"title\"\r\n                                        id=\"cardTitle\"\r\n                                        label=\"Title\"\r\n                                        color=\"secondary\"\r\n                                        value={formik.values.title}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        multiline\r\n                                        fullWidth\r\n                                        margin={\"dense\"}\r\n                                        rows={10}\r\n                                        name=\"content\"\r\n                                        id=\"cardContent\"\r\n                                        label=\"Content\"\r\n                                        color=\"secondary\"\r\n                                        value={formik.values.content}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                    />\r\n                                    <DeckCustomSelect formik={formik} defaultArr={currentCardDeck}/>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                                        Update Card\r\n                                    </Button>\r\n                                </form> \r\n                            )}\r\n                        </Formik>\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditCardPage;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Typography } from '@material-ui/core';\r\nimport {selectDeckById, selectActiveDeck, selectDeckTotal} from './deckSlice'\r\nimport {selectCardsStatus, fetchCards} from '../cards/cardsSlice'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\n\r\nconst DeckCardSection = (props) => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const activeDeck = useSelector(selectActiveDeck)\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const totalDeckNum = useSelector(selectDeckTotal)\r\n    const singleDeck = useSelector((state) => selectDeckById(state, activeDeck))\r\n    const cardsArray = useCardsCreator(singleDeck ? singleDeck.notebook_notes : null)\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            dispatch(fetchCards())\r\n        }\r\n    }, [cardsStatus])\r\n\r\n    if (activeDeck === null && totalDeckNum > 0 ) {\r\n        return (\r\n            <Typography variant=\"body1\">Select a Deck</Typography>\r\n        )\r\n    } else if (activeDeck === null && totalDeckNum === 0) {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {cardsArray && cardsArray.length > 0 &&\r\n            [cardsArray]\r\n        }\r\n        {cardsArray && cardsArray.length === 0 &&\r\n            <Typography variant=\"body1\">Empty Deck, Add some cards</Typography>\r\n        }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DeckCardSection","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport {TextField, Button} from \"@material-ui/core\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewDeck} from \"./deckSlice\";\r\nimport {InputFormLayout} from \"../ui/uiFormat\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CustomDeckInput = () => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {deckName: \"\" },\r\n        onSubmit: async (values, formikBag) => {\r\n            // Do stuff here...\r\n            const {deckName} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                name: deckName\r\n            };\r\n            dispatch(addNewDeck(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Deck Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                        formikBag.resetForm();\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating deck\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            deckName: Yup.string()\r\n                .required(\"Required\"),\r\n        }),\r\n        validateOnBlur: false\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <InputFormLayout\r\n                input={\r\n                    <form className=\"baseForm\" onSubmit={formik.handleSubmit} required>\r\n                        <TextField \r\n                            label=\"Create Deck\" \r\n                            variant=\"outlined\" \r\n                            name=\"deckName\" \r\n                            placeholder=\"Start typing to create a new deck\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.deckName}\r\n                            size=\"small\"\r\n                            error={ formik.errors.deckName ? true : false}\r\n                            helperText={formik.errors.deckName}\r\n                            fullWidth/>\r\n                    </form>\r\n                }\r\n\r\n                options={\r\n                    <InputButtonGroup formik={formik}/>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {formik} = props;\r\n\r\n    return (\r\n        <Button onClick={formik.handleSubmit} variant=\"outlined\" color=\"secondary\">Save Deck</Button>\r\n    );\r\n};\r\n\r\nexport {CustomDeckInput};","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport {selectAllCards} from \"../cards/cardsSlice\";\r\nimport {updateDeckCards, selectActiveDeck, selectCardsByDeckId} from \"./deckSlice\";\r\nimport {getArrayDifference} from \"../utils/utilities\";\r\n\r\nconst useStyles = makeStyles((mainTheme) => ({\r\n    root: {\r\n        width: \"210px\",\r\n        maxHeight: \"58vh\",\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n        [mainTheme.breakpoints.between(\"100\", \"500\")]: {\r\n            width: \"auto\"\r\n        },\r\n    },\r\n    listHeader: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    buttonForm: {\r\n        display: \"flex\",\r\n        alignContent: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n        flexWrap: \"nowrap\",\r\n    },\r\n}));\r\n\r\nconst DeckListForm = () => {\r\n    // selected deck\r\n    const selectedDeckId = useSelector(selectActiveDeck);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const allCardsArray = useSelector(selectAllCards);\r\n    const deckCardsArrayById = useSelector((state) => selectCardsByDeckId(state, selectedDeckId));\r\n    let AddCardsArray = selectedDeckId ? allCardsArray.filter(card => !deckCardsArrayById.includes(card[\"id\"])) : [];\r\n    let RemoveCardsArray = selectedDeckId ? allCardsArray.filter(card => deckCardsArrayById.includes(card[\"id\"])) : [];\r\n    // react \r\n    const [checked, setChecked] = React.useState([]);\r\n    const [deleteChecked, setDeleteChecked] = React.useState([]);\r\n    const [removeList, setRemoveList] = React.useState(true);\r\n    // material\r\n    const classes = useStyles();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleUpdate = () => {\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: checked.concat(deckCardsArrayById)\r\n        }))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Updated\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error Updating Deck\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setChecked([]);\r\n    };\r\n    \r\n    const handleRemove = () => {\r\n        let diff = getArrayDifference(deckCardsArrayById, deleteChecked);\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: diff\r\n        }))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Updated\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error Updating Deck\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setDeleteChecked([]);\r\n    };\r\n\r\n    const listProps = {\r\n        checked,\r\n        setChecked,\r\n        deleteChecked,\r\n        setDeleteChecked,\r\n        handleUpdate,\r\n        handleRemove,\r\n        AddCardsArray,\r\n        RemoveCardsArray,\r\n        removeList\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {  selectedDeckId &&\r\n            <>\r\n                <List \r\n                    className={classes.root}\r\n                    subheader={\r\n                        <ListSubheader className={classes.listHeader} component=\"div\" id=\"nested-list-subheader\">\r\n                            {removeList ? \"Remove Cards\" : \"Add Cards\"}\r\n                            <IconButton onClick={() => setRemoveList(state => !state)}>\r\n                                <SwapHorizIcon/>\r\n                            </IconButton>\r\n                        </ListSubheader>\r\n                    }\r\n                >   \r\n                    {removeList && <RemoveDeckList {...listProps}/>}\r\n                    {!removeList && <AddDeckList {...listProps}/>}\r\n                </List>\r\n                <ListButtons {...listProps}/>\r\n            </>\r\n            }\r\n            { !selectedDeckId && null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst AddDeckList = (props) =>  {\r\n\r\n    const {checked, setChecked, AddCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {AddCardsArray ? AddCardsArray.map((card) => {\r\n                const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n                return (\r\n                    <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                checked={checked.indexOf(card.id) !== -1}\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={`${card.title}`} />\r\n                    </ListItem>\r\n                );\r\n            }) : null }\r\n        </>\r\n    );\r\n};\r\n\r\nconst RemoveDeckList = (props) =>  {\r\n\r\n    const {deleteChecked, setDeleteChecked, RemoveCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = deleteChecked.indexOf(value);\r\n        const newChecked = [...deleteChecked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setDeleteChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {RemoveCardsArray ? RemoveCardsArray.map((card) => {\r\n                const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n                return (\r\n                    <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                checked={deleteChecked.indexOf(card.id) !== -1}\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={`${card.title}`} />\r\n                    </ListItem>\r\n                );\r\n            }) : null }\r\n        </>\r\n    );\r\n};\r\n\r\nconst ListButtons = (props) => {\r\n\r\n    const {\r\n        removeList, handleUpdate,\r\n        handleRemove, setDeleteChecked,\r\n        setChecked\r\n    } = props;\r\n\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClear = () => {\r\n        if (removeList) {\r\n            setDeleteChecked([]);\r\n        } else {\r\n            setChecked([]);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className={classes.buttonForm}>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<DoneAllIcon />}\r\n                size=\"small\"\r\n                onClick={removeList ? handleRemove : handleUpdate }\r\n            >\r\n                {removeList ? \"remove\" : \"update\" }\r\n            </Button>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<ClearIcon />}\r\n                size=\"small\"\r\n                onClick={handleClear}\r\n            >\r\n                clear\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeckListForm;","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {MainBodyLayout} from \"../ui/uiFormat\";\r\nimport {useDecksCreator} from \"../hooks/customHooks\";\r\nimport {selectDecksIds, selectDecksStatus, fetchDecks, selectDeckTotal} from \"./deckSlice\";\r\nimport DeckCardSection from \"./DeckCardSection\";\r\nimport {CustomDeckInput} from \"./DeckInputBox\";\r\nimport DeckListForm from \"./DeckListForm\";\r\nimport CustomBackdrop from \"../ui/CustomBackdrop\";\r\nimport EmptyListRender from \"../ui/EmptyListRender\";\r\n\r\n\r\nconst DeckList = () => {\r\n\r\n    // redux\r\n    const decksStatus = useSelector(selectDecksStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (decksStatus === \"stale\") {\r\n            dispatch(fetchDecks());\r\n        }\r\n    }, [decksStatus, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <MainBodyLayout\r\n                deck\r\n                input={<CustomDeckInput/>}\r\n                deckList={<DeckChipsRenderList/>}\r\n                decks={<DeckCardSection/>}\r\n                deckForm={<DeckListForm />}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst DeckChipsRenderList = () => {\r\n\r\n    // redux\r\n    const decks = useSelector(selectDecksIds);\r\n    const decksStatus = useSelector(selectDecksStatus);\r\n    const totalDeckNum = useSelector(selectDeckTotal);\r\n    // create deck list \r\n    const deckArray = useDecksCreator(decks);\r\n\r\n    if (deckArray === null && decksStatus === \"stale\") {\r\n        return (\r\n            <CustomBackdrop/>\r\n        );\r\n    } else if (decksStatus === \"updated\" && totalDeckNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Decks, Create a Deck</EmptyListRender>\r\n        );\r\n    }\r\n\r\n    return(\r\n        [deckArray]\r\n    );\r\n\r\n};\r\n\r\nexport default DeckList;","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerImg: {\r\n        display: \"none\",\r\n        height: \"34px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\",\r\n        }\r\n    }\r\n}));\r\n\r\nconst LogoComponent = () => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // react\r\n    const [src, setSrc] = React.useState(theme.palette.type);\r\n    const darkTheme = theme.palette.type;\r\n\r\n    React.useEffect(() => {\r\n        if (darkTheme === \"dark\") {\r\n            setSrc(\"dark\");\r\n        } else {\r\n            setSrc(\"light\");\r\n        }\r\n    }, [darkTheme]);\r\n\r\n    return(\r\n        <img\r\n            key={\"image-icon\"}\r\n            className={classes.headerImg}\r\n            alt={\"title\"}\r\n            src={src === \"dark\" ? \"/static/frontend/assets/images/CARDEDWHITE.png\" : \"/static/frontend/assets/images/CARDEDBLACK.png\"}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LogoComponent;","import React from \"react\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SlideTransition from \"../ui/SlideTransition\";\r\nimport {userLogout} from \"../users/authenticationSlice\";\r\n\r\nconst AccountNavButton = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // logout dialog\r\n    const [openLogout, setOpenLogout] = React.useState(false);\r\n    //\r\n    const { forwardedRef, ...bprops } = props;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute(\"href\");\r\n        handleClose();\r\n        history.push(path);\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        handleClose();\r\n        setOpenLogout(true);\r\n    };\r\n    \r\n    const handleLogoutCancel = () => {\r\n        setOpenLogout(false);\r\n    };\r\n\r\n    const handleLogoutConfirm = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    const logDialogProps = {\r\n        handleLogoutConfirm,\r\n        handleLogoutCancel,\r\n        openLogout\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button aria-controls=\"account-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<AccountCircleIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={\"small\"}\r\n                color=\"secondary\"\r\n                ref={forwardedRef}\r\n                {...bprops}\r\n            >\r\n            Account\r\n            </Button>\r\n            <Menu\r\n                id=\"account-menu\"\r\n                variant=\"menu\"\r\n                TransitionComponent={SlideTransition}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={\"/profile\"}>Profile</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={\"/account\"}>My account</MenuItem>\r\n                <MenuItem onClick={handleLogoutClick}>\r\n                Logout\r\n                </MenuItem>\r\n            </Menu>\r\n            {openLogout && <LogoutDialog {...logDialogProps}/>}\r\n        </>\r\n    );\r\n};\r\n\r\nconst LogoutDialog = (props) => {\r\n\r\n    const {openLogout, handleLogoutCancel, handleLogoutConfirm} = props;\r\n\r\n    return(\r\n        <>\r\n            <Dialog open={openLogout} onClose={handleLogoutCancel} aria-labelledby=\"alert-dialog-title\">\r\n                <DialogTitle>{\"Confirm Logout?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleLogoutCancel} color=\"default\" variant='outlined'>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLogoutConfirm} color=\"secondary\" variant='outlined' autoFocus>\r\n                    Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.forwardRef((props, ref) => <AccountNavButton {...props} forwardedRef={ref} />);","import React from \"react\";\r\nimport {Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst LogoutDialog = (props) => {\r\n\r\n    const {openLogout, handleLogoutCancel, handleLogoutConfirm} = props;\r\n\r\n    return(\r\n        <>\r\n            <Dialog open={openLogout} onClose={handleLogoutCancel} aria-labelledby=\"alert-dialog-title\">\r\n                <DialogTitle>{\"Confirm Logout?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleLogoutCancel} color=\"default\" variant='outlined'>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLogoutConfirm} color=\"secondary\" variant='outlined' autoFocus>\r\n                    Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LogoutDialog;","import React from \"react\";\r\nimport LogoutDialog from \"./LogoutDialog\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport {userLogout} from \"../users/authenticationSlice\";\r\n\r\n\r\nexport default function LogoutButton() {\r\n\r\n    // logout dialog\r\n    const [openLogout, setOpenLogout] = React.useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogoutClick = () => {\r\n        setOpenLogout(true);\r\n    };\r\n    \r\n    const handleLogoutCancel = () => {\r\n        setOpenLogout(false);\r\n    };\r\n\r\n    const handleLogoutConfirm = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    const logDialogProps = {\r\n        handleLogoutConfirm,\r\n        handleLogoutCancel,\r\n        openLogout\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={handleLogoutClick}>\r\n                <ExitToAppIcon />\r\n            </IconButton>\r\n            {openLogout && <LogoutDialog {...logDialogProps}/>}\r\n        </>\r\n    );\r\n}","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport {apiFecthResource} from '../../api/api'\r\n\r\nconst searchAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n})\r\n\r\nconst initialState = searchAdapter.getInitialState({\r\n    loading: 'idle',\r\n    status: 'stale',\r\n    error: {\r\n        isErrored: false,\r\n        message: '',\r\n    }\r\n})\r\n\r\nexport const searchCards = createAsyncThunk('search/searchCards', async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `search/`\r\n        response = await apiFecthResource.get(url, params)\r\n        dispatch(fillSearchData(response.data))\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nconst searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        fillSearchData(state, action) {\r\n            searchAdapter.setAll(state, action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [searchCards.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [searchCards.fulfilled]: (state, action) => {\r\n            state.loading = 'loaded'\r\n            state.status = 'updated'\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    selectAll: selectAllCardSearch,\r\n    selectIds: selectCardsSearchIds,\r\n    selectTotal: selectCardsSearchTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = searchAdapter.getSelectors(state => state.search);\r\nexport const selectSearchLoadingStatus = state => state.search.loading;\r\nexport const {fillSearchData} = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer\r\n","import React from 'react';\r\nimport {useFormik } from 'formik';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport {searchCards} from '../search/searchSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchIcon: {\r\n        padding: theme.spacing(0.8, 1.6),\r\n        /* height: '100%', */\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    inputRoot: {\r\n        border: `1px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: '.5em',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SearchForm = (props) => {\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // react router\r\n    const history = useHistory();\r\n    // formik\r\n    const formik  = useFormik({\r\n      initialValues: {\r\n        searchValue: ''\r\n      },\r\n      onSubmit: async(values) => {\r\n        dispatch(searchCards(values))\r\n        history.push('/search')\r\n      }\r\n    })\r\n\r\n    return(\r\n        <div className={props.className}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon color=\"secondary\"/>\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              type=\"search\"\r\n              name=\"searchValue\"\r\n              onSubmit={formik.handleSubmit}\r\n              value={formik.values.searchValue}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\nconst NavButton = (props) => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    // icon mangement\r\n    let IconToUse;\r\n\r\n    switch (props.icon) {\r\n        case 'card':\r\n            IconToUse = BookRoundedIcon\r\n            break;\r\n        case 'deck':\r\n            IconToUse = LibraryBooksRoundedIcon\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <Button\r\n            component={RouterLink}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size={'small'}\r\n            classes={{\r\n                root: classes.root\r\n            }}\r\n            startIcon={<IconToUse/>}\r\n            to={props.to}\r\n        >\r\n            {props.primary}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","import React from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n    List, Divider, IconButton, Collapse,\r\n    ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst ListItemLink = (props) => {\r\n    const { icon, primary, to } = props;\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <li>\r\n        <ListItem button component={renderLink}>\r\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n          <ListItemText primary={primary} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n}));\r\n\r\nconst SideDrawer = (props) => {\r\n\r\n    const {open, handleDrawerClose, isAuthenticated} = props;\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // collapsible menu\r\n    const [showCollapse, setShowCollapse] = React.useState(true);\r\n\r\n    const handleCollapseClick = () => {\r\n        setShowCollapse(!showCollapse);\r\n    };\r\n\r\n    return(\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { !isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        primary={'Login'}\r\n                        to={'/login'}\r\n                        key={'login'}\r\n                    />\r\n                    <ListItemLink\r\n                        primary={'Register'}\r\n                        to={'/signup'}\r\n                        key={'signup'}\r\n                    />\r\n                </>\r\n                }\r\n                { isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        icon={<BookRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Cards'}\r\n                        to={'/cards'}\r\n                        key={'Cards'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<LibraryBooksRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Decks'}\r\n                        to={'/deck'}\r\n                        key={'Decks'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<AddBoxRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Create Card'}\r\n                        to={'/card/new'}\r\n                        key={'Create Card'}\r\n                    />\r\n                    <ListItem button onClick={handleCollapseClick}>\r\n                        <ListItemIcon>\r\n                            <AccountCircleIcon color=\"secondary\"/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Account\" />\r\n                        {showCollapse ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={showCollapse} timeout=\"auto\" unmountOnExit>\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Profile'}\r\n                            to={'/profile'}\r\n                            key={'Profile'}\r\n                            disablePadding\r\n                        />\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Password'}\r\n                            to={'/account'}\r\n                            key={'Account Management'}\r\n                            disablePadding\r\n                        />\r\n\r\n                    </Collapse>\r\n                </>\r\n                }\r\n            </List>\r\n            <Divider />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport { useHistory, useLocation} from 'react-router-dom'\r\nimport SlideTransition from '../ui/SlideTransition'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\n\r\nconst MobileHeaderDropdown = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory()\r\n    const {pathname} = useLocation()\r\n    // auth \r\n    const {isAuthenticated} = props;\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute('href')\r\n        handleClose()\r\n        history.push(path)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {pathname ? pathname.slice(1) : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/cards'}>Cards</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/deck'}>Decks</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/profile'}>Profile</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/account'}>My account</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        { !isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {pathname ? pathname.slice(1) : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/login'}>Login</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/signup'}>Register</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MobileHeaderDropdown","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 0\r\n    }\r\n}))\r\n\r\nconst DarkModeSwitch = (props) => {\r\n    /* const {darkMode, setDarkMode} = {...props} */\r\n    const theme = useTheme();\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <FormControlLabel\r\n        label=\"Dark Mode\"\r\n        className={classes.root}\r\n        control={\r\n            <Switch\r\n                checked={theme.darkMode.darkMode}\r\n                onChange={() => theme.darkMode.setDarkMode(state => !state)}\r\n                name=\"darkMode\"\r\n                inputProps={{ 'aria-label': 'darkmode checkbox' }}\r\n            />\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default DarkModeSwitch;","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport LogoComponent from \"./LogoComponent\";\r\nimport {useAuth} from \"../../api/api\";\r\nimport AccountNavButton from \"./AccountNavButton\";\r\nimport LogoutButton from \"./LogoutButton\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport NavButton from \"./NavButton\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport MobileHeaderDropdown from \"./MobileHeaderDropdown\";\r\nimport DarkModeSwitch from \"./DarkModeSwitch\";\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        minHeight: \"100vh\",\r\n        fontSize: theme.typography.fontSize,\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 52%,\r\n            ${theme.palette.secondary.main}f5 300%)`,\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 24,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n    headerImg: {\r\n        display: \"none\",\r\n        height: \"34px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\",\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    navButton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    search: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(2),\r\n            width: \"auto\",\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: \"none\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"flex\",\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    title: {\r\n        display: \"none\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\",\r\n        }\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    wrapperMain: {\r\n        minHeight: `calc(97vh - ${theme.mixins.toolbar.minHeight}px)`,\r\n        position: \"relative;\",\r\n        padding: \".5em .5em;\",\r\n    }\r\n}));\r\n\r\nconst HeaderBar = (props) => {\r\n\r\n    // main body\r\n    const {mainBody} = props;\r\n    // auth \r\n    const isAuthenticated = useAuth();\r\n    // material classes\r\n    const classes = useStyles();\r\n    // drawer open\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const drawerProps = {\r\n        open,\r\n        handleDrawerClose,\r\n        isAuthenticated\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar variant=\"dense\">\r\n                    <IconButton\r\n                        color=\"secondary\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <LogoComponent/>\r\n                    { isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={\"card\"} to={\"/cards\"} primary={\"Cards\"}/>\r\n                        <NavButton icon={\"deck\"} to={\"/deck\"} primary={\"Decks\"}/>\r\n                        <SearchForm className={classes.search}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionMobile}>\r\n                        <DarkModeSwitch/>\r\n                        <LogoutButton className={classes.navButton}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <DarkModeSwitch/>\r\n                        <AccountNavButton className={classes.navButton}/>\r\n                    </div>\r\n                </>\r\n                    }\r\n                    { !isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={\"card\"} to={\"/login\"} primary={\"Login\"}/>\r\n                        <NavButton icon={\"deck\"} to={\"/signup\"} primary={\"Register\"}/>\r\n                        <NavButton icon={\"deck\"} to={\"/about\"} primary={\"About\"}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionMobile}>\r\n                        <DarkModeSwitch/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <DarkModeSwitch/>\r\n                    </div>\r\n                </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <SideDrawer {...drawerProps}/>\r\n            <main className={clsx(classes.content, {\r\n                [classes.contentShift]: open,\r\n            })}>\r\n                <div className={classes.toolbar} />\r\n                <div className={classes.wrapperMain}>\r\n                    {mainBody}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default HeaderBar;\r\n","import React from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {TextField, Button, Typography, Avatar } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {editProfileData, fetchUserData,\r\n    selectUserDetailStatus, selectUserBdate,\r\n    selectUserProfilePic, selectUserUsername\r\n} from \"./userSlice\";\r\nimport {selectCardsTotal} from \"../cards/cardsSlice\";\r\nimport {selectDeckTotal} from \"../decks/deckSlice\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n        display: \"none\",\r\n    },\r\n    root: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        alignContent: \"flex-start\",\r\n        boxShadow: `0px 1px 2px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: \"8px\",\r\n        margin: \"auto\",\r\n        padding: \".4em .5em\",\r\n        minHeight: \"inherit\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileUsername: {\r\n        minWidth: \"80px\",\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 95%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCardMini: {\r\n        minWidth: \"80px\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCard: {\r\n        minWidth: \"40%\",\r\n        boxShadow: `0px 0px 3px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    ProfileAvatarForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    ProfileAvatarImg: {\r\n        height: \"150px\",\r\n        width: \"150px\"\r\n    },\r\n    uploadBtn: {\r\n        padding: \"4px\"\r\n    },\r\n    ProfileAvatarBtnGrp: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    flexRow: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    },\r\n    flexColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    }\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus);\r\n    const username = useSelector(selectUserUsername);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (userDetailStatus === \"stale\") {\r\n            dispatch(fetchUserData());\r\n        }\r\n    }, [userDetailStatus, dispatch]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className={classes.profileUsername} variant=\"h6\"> Hello {username ? username : \"User\"} </Typography>\r\n            <ProfileAvatar/>\r\n            <ProfileCardStatDetail/>\r\n            <ProfileCardUpdateForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileAvatar = () => {\r\n    // material\r\n    const classes = useStyles();\r\n    // upload button status\r\n    const [disabled, setDisabled] = React.useState(true);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const avatarLink = useSelector(selectUserProfilePic);\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            profile_picture: null,\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            setDisabled(true);\r\n            const formData = new FormData();\r\n            formData.append(\"profile_picture\", values[\"profile_picture\"]);\r\n            dispatch(editProfileData(formData))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    \r\n                    } else {\r\n                        const {\r\n                            profile_picture,\r\n                            non_field_errors\r\n                        } = result.payload;\r\n\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${profile_picture.toString()}`, { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <div className={classes.flexColumn}>\r\n            <form className={classes.ProfileAvatarForm}>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-u\"\r\n                    type=\"file\"\r\n                    name=\"profile_picture\"\r\n                    className={classes.input_file}\r\n                    onChange={(event) => {\r\n                        formik.setFieldValue(\"profile_picture\", event.currentTarget.files[0]);\r\n                        setDisabled(false);\r\n                    }}\r\n                />\r\n                <Avatar alt=\"ao brrr\" src={avatarLink} className={classes.ProfileAvatarImg} />\r\n                <div className={classes.ProfileAvatarBtnGrp}>\r\n                    <label htmlFor=\"contained-button-u\" style={{marginBottom: 0}}>\r\n                        <IconButton color=\"default\" aria-label=\"upload picture\" component=\"span\" className={classes.uploadBtn} size=\"small\">\r\n                            <PhotoCamera size=\"small\" />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"default\" \r\n                        size=\"small\" \r\n                        onClick={formik.handleSubmit}\r\n                        disabled={ disabled || formik.isSubmitting}\r\n                    >\r\n                        Update Avatar\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileCardStatDetail = () => {\r\n\r\n    const classes = useStyles();\r\n    // redux\r\n    const cardsTotal = useSelector(selectCardsTotal);\r\n    const decksTotal = useSelector(selectDeckTotal);\r\n\r\n    return (\r\n        <div className={classes.flexRow}>\r\n            <div className={classes.profileCardMini}> Cards <span> {cardsTotal} </span></div>\r\n            <div className={classes.profileCardMini}> Decks <span> {decksTotal} </span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileCardUpdateForm = () => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const userBday = useSelector(selectUserBdate);\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            birth_date: userBday ? userBday : null\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            /* alert(JSON.stringify(values, null, 2)); */\r\n            const formData = new FormData();\r\n            formData.append(\"birth_date\", values[\"birth_date\"]);\r\n            dispatch(editProfileData(formData))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        const {\r\n                            birth_date,\r\n                            non_field_errors\r\n                        } = result.payload;\r\n\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${birth_date.toString()}`, { \r\n                            variant: \"error\",\r\n                        });\r\n                    \r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form noValidate className={classes.profileCard}>\r\n            <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                name=\"birth_date\"\r\n                color=\"secondary\"\r\n                margin=\"dense\"\r\n                defaultValue={formik.values.birth_date}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={formik.handleChange}\r\n            />\r\n            <Button variant=\"contained\" color=\"default\" onClick={formik.handleSubmit} disabled={formik.isSubmitting}>\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport { useFormik  } from \"formik\";\r\nimport {TextField, Button, Typography } from \"@material-ui/core\";\r\nimport {confirmPasswordReset} from \"./userSlice\";\r\n\r\nconst ConfirmPasswordResetForm = () => {\r\n\r\n    // react-router\r\n    const { uid, token  } = useParams();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            uid,\r\n            token,\r\n            new_password1: \"\",\r\n            new_password2: \"\"\r\n        },\r\n        onSubmit: async (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            dispatch(confirmPasswordReset(values));\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={\"profile-main\"}>\r\n            <form className={\"profile-form\"}>\r\n                <TextField\r\n                    id=\"filled-new_password1-input\"\r\n                    name=\"new_password1\"\r\n                    label=\"New Password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    value={formik.values.new_password1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    id=\"filled-new_password2-input\"\r\n                    name=\"new_password2\"\r\n                    label=\"New Password Again\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    value={formik.values.new_password2}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                Update Password\r\n                </Button>\r\n                <Typography variant=\"subtitle1\">\r\n                Forgot Password? Click here to request a pssword reset\r\n                </Typography>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmPasswordResetForm;","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport { Backdrop } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {confirmUserEmail} from \"./userSlice\";\r\nimport {authStatusSelector} from \"./authenticationSlice\";\r\n\r\nconst ConfirmUserEmail = () => {\r\n\r\n    // react \r\n    const [confirmStatus, setConfirmStatus ] = React.useState(\"load\");\r\n    // react-router\r\n    const { key  } = useParams();\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector(authStatusSelector);\r\n    // notification\r\n    const { enqueueSnackbar, } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        dispatch(confirmUserEmail({key}))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Email Verified!\", {variant:\"success\"});\r\n                    setConfirmStatus(\"success\");\r\n                } else {\r\n                    enqueueSnackbar(\"Please check link\", {variant:\"error\"});\r\n                    setConfirmStatus(\"failed\");\r\n                }\r\n            });\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if (isAuth && confirmStatus === \"success\") {\r\n            setTimeout(() => {\r\n                history.push(\"/cards\");\r\n            }, 2000);\r\n        } else {\r\n            setTimeout(() => {\r\n                history.push(\"/login\");\r\n            }, 2000);\r\n        }\r\n    }, [confirmStatus, isAuth, history]);\r\n\r\n    if (confirmStatus ===  \"load\") {\r\n        return(\r\n            <Backdrop open={true}/>\r\n        );\r\n    } else if (confirmStatus ===  \"success\") {\r\n        return(\r\n            <div className={\"inner-main\"}>\r\n                <div className={\"profile-main\"}>\r\n                    <p> Email Verified!</p>\r\n                    <p> Redirecting...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (confirmStatus ===  \"failed\") {\r\n        return(\r\n            <div className={\"inner-main\"}>\r\n                <div className={\"profile-main\"}>\r\n                    <p> Error, verifying link. please request verification link again</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n};\r\n\r\nexport default ConfirmUserEmail;","import React from 'react';\r\nimport { useSelector} from 'react-redux'\r\nimport {selectCardsSearchTotal, selectCardsSearchIds, selectSearchLoadingStatus} from './searchSlice'\r\nimport {MainBodyLayout} from '../ui/uiFormat'\r\nimport CustomBackdrop from '../ui/CustomBackdrop'\r\nimport CustomCardInput from '../cards/CardInputBox'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\nimport EmptyListRender from '../ui/EmptyListRender'\r\n\r\nconst SearchPage = (props) => {\r\n\r\n    return (\r\n        <>\r\n        <MainBodyLayout\r\n            input={<CustomCardInput/>}\r\n            searchBody={<SearchListRender/>}\r\n            search\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nconst SearchListRender = (props) => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsSearchTotal)\r\n    const searchLoading = useSelector(selectSearchLoadingStatus)\r\n    const totalCardsId = useSelector(selectCardsSearchIds)\r\n    const cardsArray = useCardsCreator(totalCardsId)\r\n\r\n    if (searchLoading !== 'loaded') {\r\n        return (\r\n            <CustomBackdrop/>\r\n        )\r\n    } else if (cardsArray.length === 0 && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty..</EmptyListRender>\r\n        )\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    )\r\n}\r\n\r\nexport default SearchPage","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route, Redirect,\r\n} from \"react-router-dom\";\r\nimport { ThemeProvider  } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport CustomSnackbarProvider from \"./components/ui/SnackBarAlert\";\r\nimport LoginForm from \"./components/users/LoginForm\";\r\nimport SignupForm from \"./components/users/SignupForm\";\r\nimport AboutPage from \"./components/ui/AboutPage\";\r\nimport CardList from \"./components/cards/CardList\";\r\nimport AddCardForm from \"./components/cards/AddCardForm\";\r\nimport EditCardForm from \"./components/cards/EditCardForm\";\r\nimport DeckList from \"./components/decks/DeckList\";\r\nimport HeaderBar from \"./components/header/HeaderBar.js\";\r\nimport ProfilePage from \"./components/users/ProfilePage\";\r\nimport AccountMangementPage from \"./components/users/AccountMangementPage\";\r\nimport ConfirmPasswordResetForm from \"./components/users/ConfirmPasswordResetForm\";\r\nimport ConfirmUserEmail from \"./components/users/ConfirmUserEmail\";\r\nimport SearchPage from \"./components/search/SearchPage\";\r\nimport NoMatchFound from \"./components/ui/CustomNoMatchFound\";\r\nimport {useAuth} from \"./api/api\";\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    // auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // React\r\n    React.useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            enqueueSnackbar(\"Logged Out\", {variant: \"warning\", persist: false,});\r\n        }\r\n    }, [isAuthenticated, enqueueSnackbar]);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated ? (children) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n\r\n    let isAuthenticated = useAuth();\r\n    let prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n    let [darkMode, setDarkMode] = React.useState(false);\r\n    let theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: darkMode ? \"dark\" : \"light\",\r\n                    primary: {\r\n                        light: \"#ffffff\",\r\n                        main: \"#f5f5f5\",\r\n                        dark: \"#c2c2c2\",\r\n                        contrastText: \"#fff\",\r\n                    },\r\n                    secondary: {\r\n                        light: \"#ffc4ff\",\r\n                        main: \"#ce93d8\",\r\n                        dark: \"#9c64a6\",\r\n                        contrastText: \"#000\",\r\n                    },\r\n                    warning: {\r\n                        main: \"#b40000\"\r\n                    }\r\n                },\r\n                typography: {\r\n                    fontFamily: [\r\n                        \"Open Sans\",\r\n                        \"sans-serif\",\r\n                        \"Segoe UI\",\r\n                    ].join(\",\"),\r\n                    fontSize: 14,\r\n                },\r\n                breakpoints: {\r\n                    values: {\r\n                        xs: 500,\r\n                        sm: 600,\r\n                        md: 960,\r\n                        lg: 1280,\r\n                        xl: 1920,\r\n                        phones: 450,\r\n                    },\r\n                },\r\n                darkMode: {\r\n                    darkMode,\r\n                    setDarkMode\r\n                }\r\n            }),\r\n        [darkMode],\r\n    );\r\n    theme = responsiveFontSizes(theme, {factor:3});\r\n\r\n\r\n    React.useEffect(() => {\r\n        setDarkMode(prefersDarkMode);\r\n    }, [prefersDarkMode]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomSnackbarProvider>\r\n                <Router>\r\n                    <HeaderBar\r\n                        mainBody={\r\n                            <Switch>\r\n                                <Route path=\"/login\" render={() => <LoginForm/>}/>\r\n                                <Route path=\"/signup\" render={() => <SignupForm/>}/>\r\n                                <Route path=\"/about\" render={() => <AboutPage/>}/>\r\n                                <PrivateRoute path=\"/cards\"><CardList/></PrivateRoute>\r\n                                <PrivateRoute path=\"/card/new\"><AddCardForm/></PrivateRoute>\r\n                                <PrivateRoute path=\"/card/edit/:id\"><EditCardForm/></PrivateRoute>\r\n                                <PrivateRoute path=\"/deck\"><DeckList/></PrivateRoute>\r\n                                <PrivateRoute path=\"/profile\"><ProfilePage/></PrivateRoute>\r\n                                <PrivateRoute path=\"/account\"><AccountMangementPage/></PrivateRoute>\r\n                                <PrivateRoute path=\"/search\"><SearchPage/></PrivateRoute>\r\n                                <Route path=\"/password-reset/confirm/:uid/:token\" render={() => <ConfirmPasswordResetForm/>}/>\r\n                                <Route path=\"/accounts/confirm-email/:key\" render={() => <ConfirmUserEmail/>}/>\r\n                                <Route exact path=\"/\">\r\n                                    {\r\n                                        isAuthenticated ? <Redirect to=\"/cards\"/> : <Redirect to=\"/login\"/>\r\n                                    }\r\n                                </Route>\r\n                                <Route path=\"*\" render={() => <NoMatchFound/>}/>\r\n                            </Switch>\r\n                        }\r\n                    />\r\n                </Router>\r\n            </CustomSnackbarProvider>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport authReducer from '../components/users/authenticationSlice'\r\nimport userReducer from '../components/users/userSlice'\r\nimport cardsReducer from '../components/cards/cardsSlice'\r\nimport deckReducer from '../components/decks/deckSlice'\r\nimport searchReducer from '../components/search/searchSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        cards: cardsReducer,\r\n        decks: deckReducer,\r\n        user: userReducer,\r\n        search: searchReducer,\r\n    }\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n/* import './scss/main.scss'; */\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <CssBaseline/>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcarded_react\"] = self[\"webpackChunkcarded_react\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [201,460,913,698,612,278,14,794,555,617,105,70,593,606,145,968,162,344,979,619], function() { return __webpack_require__(66137); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./frontend/src/api/api.js","webpack:///./frontend/src/components/ui/SlideTransition.js","webpack:///./frontend/src/components/ui/SnackBarAlert.js","webpack:///./frontend/src/components/users/userSlice.js","webpack:///./frontend/src/components/cards/cardsSlice.js","webpack:///./frontend/src/components/utils/utilities.js","webpack:///./frontend/src/components/decks/deckSlice.js","webpack:///./frontend/src/components/users/authenticationSlice.js","webpack:///./frontend/src/components/users/AccountMangementPage.js","webpack:///./frontend/src/components/users/LoginForm.js","webpack:///./frontend/src/components/users/SignupForm.js","webpack:///./frontend/src/components/ui/uiFormat.js","webpack:///./frontend/src/components/ui/CustomBackdrop.js","webpack:///./frontend/src/components/cards/CardInputBox.js","webpack:///./frontend/src/components/cards/CardBody.js","webpack:///./frontend/src/components/decks/DeckItem.js","webpack:///./frontend/src/components/hooks/customHooks.js","webpack:///./frontend/src/components/ui/EmptyListRender.js","webpack:///./frontend/src/components/cards/CardList.js","webpack:///./frontend/src/components/cards/newCardStyles.js","webpack:///./frontend/src/components/cards/AddCardForm.js","webpack:///./frontend/src/components/cards/EditCardForm.js","webpack:///./frontend/src/components/decks/DeckCardSection.js","webpack:///./frontend/src/components/decks/DeckInputBox.js","webpack:///./frontend/src/components/decks/DeckListForm.js","webpack:///./frontend/src/components/decks/DeckList.js","webpack:///./frontend/src/components/header/LogoComponent.js","webpack:///./frontend/src/components/header/AccountNavButton.js","webpack:///./frontend/src/components/search/searchSlice.js","webpack:///./frontend/src/components/header/SearchForm.js","webpack:///./frontend/src/components/header/NavButton.js","webpack:///./frontend/src/components/header/SideDrawer.js","webpack:///./frontend/src/components/header/MobileHeaderDropdown.js","webpack:///./frontend/src/components/header/DarkModeSwitch.js","webpack:///./frontend/src/components/header/HeaderBar.js","webpack:///./frontend/src/components/users/ProfilePage.js","webpack:///./frontend/src/components/users/ConfirmPasswordResetForm.js","webpack:///./frontend/src/components/users/ConfirmUserEmail.js","webpack:///./frontend/src/components/search/SearchPage.js","webpack:///./frontend/src/components/ui/CustomNoMatchFound.js","webpack:///./frontend/src/App.js","webpack:///./frontend/src/app/store.js","webpack:///./frontend/src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","token","observers","isLoggedIn","notify","prepareHeader","React","props","ref","Slide","timeout","enter","exit","notistackRef","onClickDismiss","key","current","closeSnackbar","dense","preventDuplicate","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","SlideTransition","action","IconButton","onClick","Close","children","axiosInstance","require","create","baseURL","tokenProvider","JSON","parse","localStorage","getItem","isLogged","forEach","observer","getToken","setToken","_token","setItem","removeItem","subscribe","push","unsubscribe","_observer","useAuth","useState","setIsLogged","useEffect","listener","newIsLogged","apiFecthResource","tokenObj","defaults","headers","common","get","url","data","params","response","post","remove","delete","edit","put","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","login","logout","fetchUserData","createAsyncThunk","passedArgs","dispatch","rejectWithValue","request","non_field_errors","editProfileData","getState","user","id","updateUserPassword","resetUserPassword","confirmPasswordReset","confirmUserEmail","userSlice","createSlice","initialState","status","email","user_profile","profile_picture","birth_date","reducers","extraReducers","fulfilled","state","payload","rejected","selectUserDetailStatus","selectUserEmail","selectUserUsername","username","selectUserProfilePic","selectUserBdate","cardsAdapter","createEntityAdapter","selectId","card","sortComparer","a","b","created","localeCompare","getInitialState","loading","error","isErrored","message","fetchCards","addNewCard","updateCardInDeck","newCard","type","removeCard","cards","deletedCard","entities","removeCardFromDecks","delCard","editCard","requestBody","prevCard","cardsSlice","clearCards","removeAll","setStale","pending","upsertMany","addOne","updObj","changes","updateOne","removeOne","getSelectors","selectAllCards","selectAll","selectCardById","selectById","selectCardsIds","selectIds","selectCardsTotal","selectTotal","actions","selectCardsStatus","createSelector","cardId","notebook","getArrayDifference","arrayA","arrayB","_difference","elem","decksAdapter","deck","activeDeck","fetchDecks","addNewDeck","removeDeckById","removeDeck","updateDeckCards","deckId","decks","deckName","notebook_notes","decksSlice","clearDecks","delDeckId","delIndex","ids","updateActiveDeck","prevDeckArray","newArr","prevId","deletedCardId","selectAllDecks","selectDeckById","selectDecksIds","selectDeckTotal","selectDecksStatus","selectActiveDeck","axios","userLogin","loginValues","setAuthToken","userLogout","clearAuthToken","userSignup","unAuthServer","authenticationSlice","authenticated","fullfilled","authStatusSelector","auth","useStyles","makeStyles","theme","input_file","display","root","justifyItems","alignContent","boxShadow","palette","text","primary","borderRadius","margin","padding","minHeight","backgroundColor","background","default","color","profileCardMini","minWidth","alignItems","secondary","main","textAlign","flexDirection","profileCard","justifyContent","topMargin","marginTop","spacing","cancelButton","warning","borderColor","PasswordChangeForm","useDispatch","classes","enqueueSnackbar","useSnackbar","formik","useFormik","initialValues","old_password","new_password1","new_password2","onSubmit","values","formikBag","then","result","meta","requestStatus","variant","setErrors","toString","setSubmitting","validationSchema","Yup","required","className","handleSubmit","TextField","label","autoComplete","errors","helperText","value","onChange","handleChange","onBlur","handleBlur","disabled","isSubmitting","PasswordResetRequest","userEmail","useSelector","open","setOpen","alert","handleClose","Link","component","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","defaultValue","fullWidth","DialogActions","userDetailStatus","flex","width","light","buttonForm","buttonWrapper","flexWrap","position","buttonProgress","top","left","marginLeft","zIndex","isAuthenticated","history","useHistory","replace","password","min","fluid","Typography","href","noValidate","CircularProgress","size","password1","password2","setformSubmitting","max","touched","wrapperMain","innerForm","border","dark","marginBottom","Decks","innerDecks","gridTemplateColumns","gap","innerListForm","innerCards","deckList","formContainer","marginRight","MainBodyLayout","search","input","body","searchBody","ListGroup","deckForm","InputFormLayout","inputContainer","buttonContainer","options","backdrop","CustomBackdrop","Backdrop","forwardedRef","baseCardForm","gridTemplateRows","cardFormButtonsGroup","formButton","deleteButton","InputButtonGroup","setShowInput","showInput","title","content","handleReset","onFocus","e","multiline","placeholder","cardMain","cursor","overflow","maxHeight","breakpoints","down","up","maxWidth","cardSubject","borderBottom","fontWeight","whiteSpace","textOverflow","cardContent","overflowWrap","wordBreak","fontSize","cardExtras","justifySelf","EditCardDialogForm","showDialog","setShowDialog","rows","DeleteDialogSlide","handleDeleteClicked","cardProps","aria-label","Delete","Transition","aria-describedby","direction","cardsStatus","renderButtons","cardprops","data-index","Skeleton","height","animation","deleteIconOutlinedColorPrimary","clickableColorPrimary","paper","contrastText","active","openDelete","handleDeleteClick","keepMounted","setOpenDelete","delProps","Chip","onDelete","clsx","clickable","useCreateDeck","listObj","tabledDeck","useCardsCreator","item","emptyRoot","Icon","ArrowUpward","CardsListRender","totalCardsNum","totalCardsId","cardsArray","formCtl","allDecksList","newCardStyles","selectedDeck","allDeck","useParams","currentCardDeck","deckobj","formattedDeck","goBack","totalDeckNum","singleDeck","CustomDeckInput","resetForm","validateOnBlur","overflowY","overflowX","listHeader","AddDeckList","checked","setChecked","AddCardsArray","labelId","ListItem","role","undefined","button","currentIndex","newChecked","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","RemoveDeckList","deleteChecked","setDeleteChecked","RemoveCardsArray","ListButtons","removeList","handleUpdate","handleRemove","startIcon","DoneAll","Clear","selectedDeckId","allCardsArray","deckCardsArrayById","selectCardsByDeckId","setRemoveList","listProps","diff","List","subheader","ListSubheader","SwapHoriz","DeckChipsRenderList","decksStatus","deckArray","headerImg","useTheme","src","setSrc","darkTheme","alt","AccountNavButton","anchorEl","setAnchorEl","openLogout","setOpenLogout","bprops","handleMenuItemClick","event","path","target","getAttribute","handleLogoutCancel","aria-controls","aria-haspopup","currentTarget","AccountCircle","Boolean","MenuItem","searchAdapter","searchCards","fillSearchData","searchSlice","setAll","selectCardsSearchIds","selectCardsSearchTotal","selectSearchLoadingStatus","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","searchValue","Search","InputBase","IconToUse","icon","BookRoundedIcon","LibraryBooksRoundedIcon","RouterLink","to","ListItemLink","renderLink","itemProps","drawer","flexShrink","drawerOpen","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","drawerHeader","mixins","toolbar","drawerPaper","handleDrawerClose","showCollapse","setShowCollapse","Drawer","anchor","ChevronRight","ChevronLeft","Divider","BookRounded","LibraryBooksRounded","AddBoxRounded","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","currentMenu","setCurrentMenu","handleClick","textContent","ArrowDropDownRounded","FormControlLabel","control","Switch","darkMode","setDarkMode","typography","fontFamily","fontWeightLight","appBar","appBarShift","menuButton","hide","grow","flexGrow","navButton","shape","fade","white","sectionDesktop","sectionMobile","contentShift","easeOut","mainBody","drawerProps","AppBar","Toolbar","Menu","profileUsername","ProfileAvatarForm","ProfileAvatarImg","uploadBtn","ProfileAvatarBtnGrp","flexRow","flexColumn","ProfileAvatar","avatarLink","formData","FormData","append","accept","setFieldValue","files","htmlFor","style","PhotoCamera","ProfileCardStatDetail","cardsTotal","decksTotal","ProfileCardUpdateForm","userBday","InputLabelProps","shrink","uid","confirmStatus","setConfirmStatus","isAuth","setTimeout","SearchListRender","searchLoading","PrivateRoute","rest","persist","render","location","pathname","from","prefersDarkMode","useMediaQuery","prefTheme","createMuiTheme","join","ThemeProvider","exact","configureStore","reducer","authReducer","cardsReducer","deckReducer","userReducer","searchReducer","ReactDOM","CssBaseline","store","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","j","Object","keys","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"app.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import {useState, useEffect} from 'react'\r\n\r\nconst axios = require('axios');\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'backend/',\r\n    timeout: 5000,\r\n});\r\n\r\n//token handler for managing token auth, unexposed\r\nconst createTokenProvider = () => {\r\n\r\n    /* Implementation */\r\n    let token = JSON.parse(localStorage.getItem('REACT_TOKEN_AUTH'))\r\n\r\n    /* observer/subscriber list  */\r\n    let observers = [];\r\n\r\n    //fetch token\r\n    const getToken = async () => {\r\n        // if a valid token exists, return it\r\n        if (token) {\r\n            return token;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // return true if token != null\r\n    const isLoggedIn = () => {\r\n        return !!token;\r\n    };\r\n\r\n    // pushes a method from object subscribing\r\n    const subscribe = (observer) => {\r\n        observers.push(observer);\r\n    };\r\n    \r\n    // removes method from object unsubscribing\r\n    const unsubscribe = (observer) => {\r\n        observers = observers.filter(_observer => _observer !== observer);\r\n    };\r\n\r\n    // notifies members in observers, basically running the method\r\n    const notify = () => {\r\n        const isLogged = isLoggedIn();\r\n        observers.forEach(observer => observer(isLogged));\r\n    };\r\n\r\n    // sets token to local storage and instance token variable\r\n    const setToken = (_token=null) => {\r\n\r\n        if (_token) {\r\n            localStorage.setItem('REACT_TOKEN_AUTH', JSON.stringify(_token));\r\n        } else {\r\n            localStorage.removeItem('REACT_TOKEN_AUTH');\r\n        }\r\n        token = _token;\r\n        notify();\r\n    };\r\n\r\n    return {\r\n        getToken,\r\n        isLoggedIn,\r\n        setToken,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n};\r\n\r\n// handler exposed for auth/login/token verification \r\nconst createAuthProvider = () => {\r\n\r\n    /* Implementation */\r\n\r\n    // handler to set token\r\n    const login = (token) => {\r\n        tokenProvider.setToken(token);\r\n    };\r\n    \r\n    // handler to remove token\r\n    const logout = () => {\r\n        tokenProvider.setToken(null);\r\n    };\r\n\r\n    // react hook to check auth status\r\n    const useAuth = () => {\r\n\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n    \r\n        useEffect(() => {\r\n            const listener = (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            };\r\n    \r\n            tokenProvider.subscribe(listener);\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n        }, []);\r\n    \r\n        return isLogged;\r\n    };\r\n\r\n    // for making authenticated requests\r\n    const server = () => {\r\n\r\n        const prepareHeader = async () => {\r\n\r\n            const tokenObj = await tokenProvider.getToken()\r\n            let token = `Token ${tokenObj ? tokenObj['key'] : ''}`\r\n\r\n            axiosInstance.defaults.headers.common['Authorization'] = token\r\n            axiosInstance.defaults.headers.common['Accept'] = 'application/json'\r\n        }\r\n\r\n        const get = async (url, data) => {\r\n            await prepareHeader()\r\n            let response\r\n            if (data) {\r\n                response = await axiosInstance.get(url, {params: data})\r\n                return response\r\n            }\r\n            response = await axiosInstance.get(url)\r\n            return response\r\n        }\r\n\r\n        const post = async (url, data) => {\r\n            await prepareHeader()\r\n            let response = await axiosInstance.post(url, data)\r\n            return response\r\n        }\r\n        \r\n        const remove = async (url, data) => {\r\n            await prepareHeader()\r\n            let response = await axiosInstance.delete(url, data)\r\n            return response\r\n        }\r\n        \r\n        const edit = async (url, data) => {\r\n            await prepareHeader()\r\n            let response = await axiosInstance.put(url, data)\r\n            return response\r\n        }\r\n\r\n        const getCookie = (name) => {\r\n            let cookieValue = null;\r\n            if (document.cookie && document.cookie !== '') {\r\n                const cookies = document.cookie.split(';');\r\n                for (let i = 0; i < cookies.length; i++) {\r\n                    const cookie = cookies[i].trim();\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        }\r\n\r\n        return {get, post, remove, edit, getCookie}\r\n    }\r\n\r\n    const apiFecthResource = server()\r\n\r\n    return {\r\n        useAuth,\r\n        apiFecthResource,\r\n        login,\r\n        logout\r\n    }\r\n};\r\n\r\nconst tokenProvider = createTokenProvider()\r\n\r\nexport {tokenProvider};\r\nexport const {login, logout, useAuth, apiFecthResource} = createAuthProvider();","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide \r\n            ref={ref} \r\n            {...props}\r\n            timeout={{ enter: 150, exit: 300,}} />;\r\n});\r\n\r\nexport default SlideTransition","import React from 'react'\r\nimport { SnackbarProvider } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SlideTransition from './SlideTransition'\r\n\r\n\r\nconst notistackRef = React.createRef();\r\nconst onClickDismiss = key => () => { \r\n    notistackRef.current.closeSnackbar(key);\r\n}\r\n\r\nconst CustomSnackbarProvider = (props) => {\r\n\r\n    return(\r\n        <SnackbarProvider \r\n            dense\r\n            preventDuplicate\r\n            maxSnack={3} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            TransitionComponent={SlideTransition}\r\n            ref={notistackRef}\r\n            action={(key) => (\r\n            <IconButton onClick={onClickDismiss(key)}>\r\n                <CloseIcon/>\r\n            </IconButton>)}\r\n        >\r\n          {props.children}\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n\r\nexport default CustomSnackbarProvider;","import { createSlice, createAsyncThunk, } from '@reduxjs/toolkit'\r\nimport {apiFecthResource} from '../../api/api'\r\n\r\nconst axios = require('axios');\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/',\r\n    timeout: 4000,\r\n});\r\n\r\nconst initialState = {\r\n    data: {\r\n        status: 'stale',\r\n        email: null,\r\n        user_profile: {\r\n            profile_picture: null,\r\n            birth_date: null\r\n        }\r\n    },\r\n}\r\n\r\nexport const fetchUserData = createAsyncThunk('user/fetchUserData', async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.get('/users/get_user_detail/');\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\nexport const editProfileData = createAsyncThunk('user/editProfileData', async (passedArgs, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        const { user } = getState()\r\n        let response = await apiFecthResource.edit(`/profiles/${user.data.id}/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\nexport const updateUserPassword = createAsyncThunk('user/updateUserPassword', async (passedArgs, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(`/dj-rest-auth/password/change/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\nexport const resetUserPassword = createAsyncThunk('user/resetUserPassword', async (passedArgs, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(`/dj-rest-auth/password/reset/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\nexport const confirmPasswordReset = createAsyncThunk('user/confirmPasswordReset', async (passedArgs, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(`/dj-rest-auth/password/reset/confirm/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {;\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:['Link expired']})\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\nexport const confirmUserEmail = createAsyncThunk('user/confirmUserEmail', async (passedArgs, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        let response = await axiosInstance.post(`/dj-rest-auth/registration/verify-email/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {;\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:['Link expired']})\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchUserData.fulfilled]: (state, action) => {\r\n            state.data = {\r\n                status: 'loaded',\r\n                ...action.payload\r\n            }\r\n        },\r\n        [fetchUserData.rejected]: (state, action) => {\r\n            state.data.status = 'stale'\r\n        },\r\n        [editProfileData.fulfilled]: (state, action) => {\r\n            state.data.user_profile = action.payload\r\n            state.status = 'loaded'\r\n        },\r\n        [editProfileData.rejected]: (state, action) => {\r\n            state.data.status = 'stale'\r\n        },\r\n    }\r\n})\r\n\r\nexport const selectEmailConfirmationStatus = state => state.user.emailConfirmation;\r\nexport const selectUserDetailStatus = state => state.user.data.status;\r\nexport const selectUserEmail = state => state.user.data.email;\r\nexport const selectUserUsername = state => state.user.data.username;\r\nexport const selectUserProfilePic = state => state.user.data.user_profile.profile_picture;\r\nexport const selectUserBdate = state => state.user.data.user_profile.birth_date;\r\n\r\nexport default userSlice.reducer","import { createSlice, createAsyncThunk,\r\n        createEntityAdapter, createSelector\r\n    } from '@reduxjs/toolkit'\r\nimport {apiFecthResource} from '../../api/api'\r\nimport {removeCardFromDecks, updateCardInDeck} from '../decks/deckSlice'\r\n\r\nconst cardsAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n})\r\n\r\nconst initialState = cardsAdapter.getInitialState({\r\n    loading: 'idle',\r\n    status: 'stale',\r\n    error: {\r\n        isErrored: false,\r\n        message: '',\r\n    }\r\n})\r\n\r\nexport const fetchCards = createAsyncThunk('cards/fetchCards', async (params, {dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n\r\n        let url = `notes/`\r\n        response = await apiFecthResource.get(url);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({message: 'Invalid Request was made'})\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({message: 'No Response recieved from server'})\r\n        }\r\n    }\r\n})\r\n\r\nexport const addNewCard = createAsyncThunk('cards/addNewCard', async (params, {getState, dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post('notes/', params)\r\n        dispatch(updateCardInDeck({newCard: response.data, type: 'create'}))\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nexport const removeCard = createAsyncThunk('cards/removeCard', async (params, {getState, dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `notes/${params}/`\r\n        response = await apiFecthResource.remove(url)\r\n        const {cards} = getState()\r\n        let deletedCard = cards.entities[params]\r\n        dispatch(removeCardFromDecks({delCard: deletedCard}))\r\n        return params\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nexport const editCard = createAsyncThunk('cards/editCard', async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    let response;\r\n    const {id, requestBody} = params;\r\n    try {\r\n        let url = `notes/${id}/`\r\n        response = await apiFecthResource.edit(url, requestBody)\r\n        const {cards} = getState()\r\n        let prevCard = cards.entities[id]\r\n        dispatch(updateCardInDeck({prevCard, newCard: response.data, type: 'update'}))\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nexport const searchCards = createAsyncThunk('cards/searchCards', async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `search/`\r\n        response = await apiFecthResource.get(url, params)\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nconst cardsSlice = createSlice({\r\n    name: 'cards',\r\n    initialState,\r\n    reducers: {\r\n        clearCards(state, action) {\r\n            cardsAdapter.removeAll(state)\r\n            state.status = 'stale'\r\n        },\r\n        setStale(state, action) {\r\n            state.status = 'stale'\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchCards.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [fetchCards.fulfilled]: (state, action) => {\r\n            cardsAdapter.upsertMany(state, action.payload)\r\n            state.loading = 'loaded'\r\n            state.status = 'updated'\r\n        },\r\n        [addNewCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.addOne(state, action.payload)\r\n        },\r\n        [editCard.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload['id'],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n            cardsAdapter.updateOne(state, updObj)\r\n        },\r\n        [removeCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.removeOne(state, action.payload)\r\n        },\r\n        [fetchCards.rejected]: (state, action) => {\r\n            state.loading = 'failed'\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllCards,\r\n    selectById: selectCardById,\r\n    selectIds: selectCardsIds,\r\n    selectTotal: selectCardsTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = cardsAdapter.getSelectors(state => state.cards);\r\n\r\nexport const {clearCards, setStale} = cardsSlice.actions;\r\n\r\nexport const selectCardsStatus = (state) => state.cards.status;\r\n\r\nexport const selectCardsLoadingStatus = createSelector(\r\n    [selectAllCards],\r\n    (cards) => cards.loading\r\n)\r\nexport const selectDecksByCardId = createSelector(\r\n    [selectAllCards, (state, cardId) => cardId],\r\n    (cards, cardId) => cards[cardId].notebook\r\n)\r\n\r\nexport default cardsSlice.reducer","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst InputFormLayout = (props) => {\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row fluid=\"true\">\r\n                <Col>\r\n                    {props.input}\r\n                </Col>\r\n                <Col xs=\"auto\" xl=\"auto\" lg=\"auto\">\r\n                    {props.options}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst getArrayDifference = (arrayA, arrayB) => {\r\n    let _difference = new Set(arrayA)\r\n    for (let elem of arrayB) {\r\n        _difference.delete(elem)\r\n    }\r\n    return [..._difference]\r\n}\r\n\r\nconst getArrayIntersection = (arrayA, arrayB) => {\r\n    let _intersection = []\r\n    for (let elem of arrayB) {\r\n        if (arrayA.includes(elem)) {\r\n            _intersection.push(elem)\r\n        }\r\n    }\r\n    return _intersection\r\n}\r\n\r\nexport { InputFormLayout, \r\n    getArrayDifference, getArrayIntersection\r\n};","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport {setStale, fetchCards} from '../cards/cardsSlice'\r\nimport {apiFecthResource} from '../../api/api'\r\nimport {getArrayDifference} from '../utils/utilities'\r\n\r\nconst decksAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (deck) => deck.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n})\r\n\r\nconst initialState = decksAdapter.getInitialState({\r\n    loading: 'idle',\r\n    status: 'stale',\r\n    activeDeck: null,\r\n    error: {\r\n        isErrored: false,\r\n        message: '',\r\n    }\r\n})\r\n\r\nexport const fetchDecks = createAsyncThunk('decks/fetchDecks', async (params, {dispatch, rejectWithValue, getState }) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `notebooks/`\r\n        response = await apiFecthResource.get(url);\r\n        return response.data\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({message: 'Invalid Request was made'})\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({message: 'No Response recieved from server'})\r\n        }\r\n    }\r\n})\r\n\r\nexport const addNewDeck = createAsyncThunk('decks/addNewDeck', async (params, {dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post('notebooks/', params)\r\n        return response.data\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nexport const removeDeckById = createAsyncThunk('decks/removeDeckById', async (params, {getState, dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `notebooks/${params}`\r\n        response = await apiFecthResource.remove(url)\r\n        dispatch(removeDeck(params))\r\n        return params\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nexport const updateDeckCards = createAsyncThunk('decks/updateDeckCards', async (params, {dispatch, rejectWithValue, getState}) => {\r\n\r\n    let response;\r\n    try {\r\n        const {deckId, cards} = params;\r\n        const {decks} = getState();\r\n        let deckName = decks.entities[deckId].name\r\n        let data = {name: deckName, notebook_notes: cards}\r\n        response = await apiFecthResource.edit(`notebooks/${deckId}/`, data)\r\n        dispatch(setStale())\r\n        dispatch(fetchCards())\r\n        return response.data\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nconst decksSlice = createSlice({\r\n    name: 'decks',\r\n    initialState,\r\n    reducers: {\r\n        clearDecks(state, action) {\r\n            decksAdapter.removeAll(state)\r\n            state.status = 'stale'\r\n        },\r\n        removeDeck(state, action) {\r\n            let delDeckId = action.payload;\r\n            let delIndex = state.ids.findIndex((deckId) => deckId === delDeckId)\r\n\r\n            if (state.activeDeck === action.payload) {\r\n                if (delIndex > 0 && state.ids.length > 1 ) {\r\n                    state.activeDeck = state.ids[delIndex - 1]\r\n                } \r\n                else if (delIndex === 0 && state.ids.length > 1 ) {state.activeDeck = state.ids[delIndex + 1]}\r\n                else {state.activeDeck = null}\r\n            }\r\n            decksAdapter.removeOne(state, action.payload)\r\n        },\r\n        updateActiveDeck(state, action) {\r\n            state.activeDeck = action.payload\r\n        },\r\n        updateCardInDeck(state, action) {\r\n            let prevCard = action.payload['prevCard'] ? action.payload['prevCard'] : [];\r\n            let newCard = action.payload['newCard'] ? action.payload['newCard'] : [];\r\n            let actionType = action.payload['type']\r\n\r\n            if (actionType === 'update') {\r\n                let prevDeckArray = prevCard.notebook.slice();\r\n                let deckDiff = getArrayDifference(prevDeckArray, newCard.notebook);\r\n                deckDiff.forEach(deckId => {\r\n                let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== prevCard.id)\r\n                    state.entities[deckId].notebook_notes = newArr\r\n                })\r\n            }\r\n            \r\n            newCard.notebook.forEach(deckId => {\r\n                if (state.entities[deckId].notebook_notes.includes(newCard.id)) return\r\n                state.entities[deckId].notebook_notes.push(newCard.id)\r\n            })\r\n        },\r\n        removeCardFromDecks(state, action) {\r\n            let deletedCard = action.payload['delCard'];\r\n            const deletedCardId = deletedCard['id'];\r\n            const deletedCardDecks = deletedCard.notebook.slice();\r\n\r\n            deletedCardDecks.forEach(deckId => {\r\n                let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== deletedCardId)\r\n                state.entities[deckId].notebook_notes = newArr\r\n            })\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchDecks.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [fetchDecks.fulfilled]: (state, action) => {\r\n            decksAdapter.upsertMany(state, action.payload)\r\n            state.loading = 'loaded'\r\n            state.status = 'updated'\r\n        },\r\n        [fetchDecks.rejected]: (state, action) => {\r\n            state.loading = 'failed'\r\n        },\r\n        [addNewDeck.fulfilled]: (state, action) => {\r\n            decksAdapter.addOne(state, action.payload)\r\n        },\r\n        [updateDeckCards.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload['id'],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n            decksAdapter.updateOne(state, updObj)\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    selectAll: selectAllDecks,\r\n    selectById: selectDeckById,\r\n    selectIds: selectDecksIds,\r\n    selectTotal: selectDeckTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = decksAdapter.getSelectors(state => state.decks);\r\nexport const selectDecksStatus = (state) => state.decks.status;\r\nexport const selectActiveDeck = (state) => state.decks.activeDeck;\r\nexport const selectCardsByDeckId = (state, id) => {\r\n    if (id === null || id === undefined) return []\r\n    let arr = selectDeckById(state, id).notebook_notes\r\n    return arr\r\n}\r\n\r\nexport const {updateActiveDeck, removeCardFromDecks, updateCardInDeck, removeDeck, clearDecks} = decksSlice.actions;\r\n\r\nexport default decksSlice.reducer;","import { createSlice, createAsyncThunk, } from '@reduxjs/toolkit'\r\nimport {login, logout, apiFecthResource} from '../../api/api'\r\nimport {fetchUserData} from './userSlice'\r\nimport {clearDecks} from '../decks/deckSlice'\r\nimport {clearCards} from '../cards/cardsSlice'\r\n\r\nconst axios = require('axios');\r\n\r\nconst initialState = {\r\n    token: null,\r\n    authenticated: false,\r\n    loading: 'idle',\r\n}\r\n\r\nexport const userLogin = createAsyncThunk('auth/userLogin', async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const loginValues = passedArgs\r\n    try {\r\n        let response = await axios.post('/backend/dj-rest-auth/login/', loginValues);\r\n        dispatch(setAuthToken(response.data))\r\n        login(response.data)\r\n        dispatch(fetchUserData())\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:'Unable to reach server'})\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nexport const userLogout = createAsyncThunk('auth/userLogout', async (passedArgs, { dispatch, rejectWithValue }) => {\r\n    try {\r\n        const routerHistory = passedArgs\r\n        let response = await apiFecthResource.post('dj-rest-auth/logout/');\r\n        logout()\r\n        dispatch(clearAuthToken())\r\n        dispatch(clearCards())\r\n        dispatch(clearDecks())\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({error: err.response.data})\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({error: 'Server Not reachable' })\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nexport const userSignup = createAsyncThunk('auth/userSignup', async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const requestBody = passedArgs\r\n    try {\r\n        let response = await unAuthServer.post('dj-rest-auth/registration/', requestBody);\r\n        dispatch(setAuthToken(response.data))\r\n        login(response.data)\r\n        dispatch(fetchUserData())\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:['Unable to reach server']})\r\n        }\r\n    }\r\n    \r\n})\r\n\r\nconst authenticationSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setAuthToken(state, action) {\r\n            state.token = action.payload['key'];\r\n            state.authenticated = true;\r\n        },\r\n        clearAuthToken(state, action) {\r\n            state.token = null;\r\n            state.authenticated = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [userLogin.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [userLogin.fullfilled]: (state, action) => {\r\n            state.loading = 'loaded'\r\n        },\r\n        [userSignup.fulfilled]: (state, action) => {\r\n            state.loading = 'loaded'\r\n        },\r\n    }\r\n})\r\n\r\n\r\nexport const authTokenSelector = (state) => state.auth.token\r\nexport const authStatusSelector = (state) => state.auth.authenticated\r\n\r\nexport const {clearAuthToken, setAuthToken} = authenticationSlice.actions\r\n\r\nexport default authenticationSlice.reducer","import React from 'react'\r\nimport {useFormik } from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSnackbar } from 'notistack';\r\nimport {TextField, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Link } from '@material-ui/core';\r\nimport {\r\n    updateUserPassword, resetUserPassword,\r\n    selectUserDetailStatus, fetchUserData,\r\n    selectUserEmail\r\n} from './userSlice'\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n      display: 'none',\r\n    },\r\n    root: {\r\n        display: 'grid',\r\n        justifyItems: 'center',\r\n        alignContent: 'flex-start',\r\n        boxShadow: `0px 1px 4px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: '8px',\r\n        margin: 'auto',\r\n        padding: '.4em .5em',\r\n        minHeight: 'inherit',\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileCardMini: {\r\n        minWidth: '80px',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: 'center',\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: '8px',\r\n        margin: '0.5em 0.4em',\r\n        padding: '0.8em 0.2em',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    profileCard: {\r\n        minWidth: '70%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: 'center',\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: '8px',\r\n        margin: '0.5em 0.4em',\r\n        padding: '0.8em 0.2em',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    cancelButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\nconst AccountMangementPage = (props) => {\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus)\r\n    const dispatch = useDispatch()\r\n    \r\n    React.useEffect(() => {\r\n        if (userDetailStatus === 'stale') {\r\n            dispatch(fetchUserData())\r\n        }\r\n    }, [userDetailStatus, dispatch])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <PasswordChangeForm />\r\n            <PasswordResetRequest/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PasswordChangeForm = (props) => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    // material styles\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            old_password: '',\r\n            new_password1: '',\r\n            new_password2: ''\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(updateUserPassword(values))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Password Updated Successfully', { \r\n                        variant: 'success',\r\n                    });\r\n                } else {\r\n                    const {\r\n                        old_password, new_password1,\r\n                        new_password2, non_field_errors\r\n                    } = result.payload;\r\n                    formikBag.setErrors({\r\n                        old_password: old_password ? old_password.toString(): '',\r\n                        new_password1: new_password1 ? new_password1.toString(): '',\r\n                        new_password2: new_password2 ? new_password2.toString(): '',\r\n                        non_field_errors: non_field_errors ? non_field_errors.toString(): '',\r\n                    })\r\n                    enqueueSnackbar('Error Updating Password', {\r\n                        variant: 'error',\r\n                    });\r\n                }\r\n                formikBag.setSubmitting(false)\r\n            })\r\n        },\r\n        validationSchema: Yup.object({\r\n            old_password: Yup.string().required('Required'),\r\n            new_password1: Yup.string().required('Required'),\r\n            new_password2: Yup.string().required('Required'),\r\n        })\r\n    })\r\n\r\n    return(\r\n        <>\r\n        <form className={classes.profileCard} onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n            id=\"filled-old_password-input\"\r\n            name=\"old_password\"\r\n            label=\"Old Password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            color=\"secondary\"\r\n            error={!!formik.errors.old_password}\r\n            helperText={formik.errors.old_password}\r\n            value={formik.values.old_password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n            id=\"filled-new_password1-input\"\r\n            name=\"new_password1\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            autoComplete=\"new-password\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            color=\"secondary\"\r\n            error={!!formik.errors.new_password1}\r\n            helperText={formik.errors.new_password1}\r\n            value={formik.values.new_password1}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n            id=\"filled-new_password2-input\"\r\n            name=\"new_password2\"\r\n            label=\"New Password Again\"\r\n            type=\"password\"\r\n            autoComplete=\"new-password\"\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            color=\"secondary\"\r\n            error={!!formik.errors.new_password2}\r\n            helperText={formik.errors.new_password2}\r\n            value={formik.values.new_password2}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <Button variant=\"contained\" \r\n            onClick={formik.handleSubmit} \r\n            margin=\"dense\" \r\n            className={classes.topMargin}\r\n            disabled={formik.isSubmitting}\r\n            >\r\n                Update Password\r\n            </Button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nconst PasswordResetRequest = (props) => {\r\n    // redux \r\n    const dispatch = useDispatch()\r\n    const userEmail = useSelector(selectUserEmail)\r\n    // react\r\n    const [open, setOpen] = React.useState(false);\r\n    // material styles\r\n    const classes = useStyles();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userEmail ? userEmail : ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            dispatch(resetUserPassword(values))\r\n        }\r\n    })\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Link\r\n            component=\"button\"\r\n            variant='subtitle2'\r\n            onClick={handleClickOpen}\r\n            className={classes.topMargin}\r\n            color=\"inherit\"\r\n        >\r\n            Forgot Password? Click here to request a password reset\r\n        </Link>\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-password-reset\">\r\n            <DialogTitle id=\"form-dialog-password-reset\">Password Reset</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText>\r\n                Enter your email address and we will forward you a password reset link\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                color=\"secondary\"\r\n                name=\"email\"\r\n                margin=\"dense\"\r\n                id=\"emailForm\"\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                defaultValue={formik.values.email}\r\n                fullWidth\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose} className={classes.cancelButton}>\r\n                Cancel\r\n            </Button>\r\n            <Button onClick={formik.handleSubmit} color=\"default\">\r\n                Request Reset\r\n            </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AccountMangementPage;\r\nexport {PasswordResetRequest, PasswordChangeForm}","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Button, TextField, Typography, Link } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {userLogin} from './authenticationSlice'\r\nimport {PasswordResetRequest} from './AccountMangementPage'\r\nimport {useFormik } from 'formik';\r\nimport {Container} from 'react-bootstrap';\r\nimport { useSnackbar } from 'notistack';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useAuth} from '../../api/api'\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flex: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '80%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonForm: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '24px',\r\n        left: '32px',\r\n        marginTop: -8,\r\n        marginLeft: -8,\r\n        zIndex: 1\r\n    },\r\n}));\r\n\r\nconst LoginForm = (props) => {\r\n    //  auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // router\r\n    const history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // useeffect\r\n    React.useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.replace('/cards')\r\n        }\r\n    },[isAuthenticated])\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues:{username: '', password: ''},\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userLogin(values))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'rejected') {\r\n                    const {\r\n                        username, password,\r\n                        non_field_errors\r\n                    } = result.payload;\r\n                    \r\n                    formikBag.setErrors({\r\n                        username: username ? username.toString() : 'Invalid Credentials',\r\n                        password: password ? password.toString() : 'Invalid Credentials',\r\n                    })\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() :'Authenticaton Error', { \r\n                        variant: 'error',\r\n                    });\r\n                    formikBag.setSubmitting(false)\r\n                }\r\n            })\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n            .min(4, 'Must be more than 4 characters')\r\n            .required('Required'),\r\n        })\r\n    })\r\n    return (\r\n        <>\r\n        <Container className={classes.flex} fluid>\r\n            <Typography variant=\"h3\" className={classes.buttonForm}> Welcome to Carded </Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.buttonForm}> Please Login to continue or click <Link href=\"/signup\" color=\"inherit\">here</Link> to register an account </Typography>\r\n            <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    id=\"id-username\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete=\"username\"\r\n                    error={!!formik.errors.username}\r\n                    helperText={!!formik.errors.username && formik.errors.username}\r\n                    fullWidth\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    autoComplete=\"current-password\"\r\n                    error={!!formik.errors.password}\r\n                    /* value={formik.values.password} */\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <div className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        type=\"submit\"\r\n                        disabled={formik.isSubmitting}\r\n                        className={classes.buttonForm}\r\n                        margin='dense'\r\n                        >\r\n                        Login\r\n                    </Button>\r\n                    <Typography variant=\"body1\" className={classes.buttonForm}> or </Typography>\r\n                    {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n            </form>\r\n            <PasswordResetRequest/>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nconst GoogleAuthButton = (props) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <GoogleLogin\r\n        clientId={'316539219448-qtvdqd6iban1fbqajma9nbjdq5f75g70.apps.googleusercontent.com'}\r\n        onSuccess={(response) => console.log(response)}\r\n        onFailure={(err, detail) => console.log(err, detail)}\r\n        render={renderProps => (\r\n            <Button variant=\"contained\" className={classes.buttonForm} onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</Button>\r\n        )}\r\n        cookiePolicy={'http://localhost:3000'}\r\n        responseType={'code'}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Button, TextField, Typography } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {useDispatch} from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Container} from 'react-bootstrap';\r\nimport {userSignup} from './authenticationSlice'\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flex: {\r\n      display: 'flex',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '80%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonForm: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nconst SignupForm = (props) => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: { username: '', password1: '', password2: '', email: '' },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userSignup(values))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Account Created Successfully', { \r\n                        variant: 'success',\r\n                    });\r\n                    setformSubmitting(false)\r\n                } else {\r\n                    setformSubmitting(false)\r\n                    const {\r\n                        username, password1,\r\n                        password2, email, non_field_errors\r\n                    } = result.payload;\r\n                    formikBag.setErrors({\r\n                        username: username ? username.toString(): '',\r\n                        password1: password1 ? password1.toString(): '',\r\n                        password2: password2 ? password2.toString(): '',\r\n                        email: email ? email.toString(): '',\r\n                        non_field_errors: non_field_errors ? non_field_errors.toString(): '',\r\n                    })\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() : 'Error, Try again', {\r\n                        variant: 'error',\r\n                    });\r\n                }\r\n                formikBag.setSubmitting(false)\r\n            })\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n              .max(18, 'Must be 18 characters or less')\r\n              .min(4, 'Must be more than 4 characters')\r\n              .required('Required'),\r\n            password1: Yup.string()\r\n              .required('Required'),\r\n            password2: Yup.string()\r\n              .required('Required'),\r\n            email: Yup.string().email('Invalid email address').required('Required'),\r\n        })\r\n    })\r\n \r\n    return (\r\n        <>\r\n        <Container className={classes.flex} fluid>\r\n            <Typography variant=\"h3\" className={classes.buttonForm}> Register for a carded account </Typography>\r\n            <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    id=\"id-username\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'username'}\r\n                    error={!!formik.errors.username && !!formik.touched.username}\r\n                    helperText={!!formik.errors.username && !!formik.touched.username && formik.errors.username}\r\n                    fullWidth\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"id-email\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'email'}\r\n                    error={!!formik.errors.email && !!formik.touched.email}\r\n                    helperText={!!formik.errors.email && !!formik.touched.email && formik.errors.email}\r\n                    fullWidth\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password1\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password1\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'new-password'}\r\n                    error={!!formik.errors.password1 && !!formik.touched.password1}\r\n                    helperText={!!formik.errors.password1 && !!formik.touched.password1 && formik.errors.password1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password2\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password2\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'new-password'}\r\n                    error={!!formik.errors.password2 && !!formik.touched.password2}\r\n                    helperText={!!formik.errors.password2 && !!formik.touched.password2 && formik.errors.password2}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <div className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        type=\"submit\"\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={formik.isSubmitting}\r\n                        className={classes.buttonForm}\r\n                        >\r\n                        Sign up\r\n                    </Button>\r\n                    {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n            </form>\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\n/* <Formik\r\n        initialValues = {{ username: '', password1: '', password2: '', email: '' }}\r\n        onSubmit={\r\n            async (values) => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                dispatch(userSignup(values))\r\n            }\r\n        }\r\n        validationSchema={\r\n            Yup.object({\r\n                username: Yup.string()\r\n                  .max(15, 'Must be 15 characters or less')\r\n                  .min(5, 'Must be more than 5 characters')\r\n                  .required('Required'),\r\n                password1: Yup.string()\r\n                  .max(20, 'Must be 20 characters or less')\r\n                  .required('Required'),\r\n                password2: Yup.string()\r\n                  .max(20, 'Must be 20 characters or less')\r\n                  .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n            })\r\n        }\r\n        >\r\n            {(formik) => (\r\n            <>\r\n            <Container fluid>\r\n                <FormikForm className=\"baseForm\" noValidate>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                        type=\"Email\"\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.email && (!formik.errors.email || !signupErrors.email)}\r\n                        isInvalid={!!formik.errors.email || !!signupErrors.email}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.email && formik.errors.email ? 'invalid' : 'valid'}>\r\n                            {formik.errors.email}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.email && \r\n                            <Form.Control.Feedback type={'invalid'}>\r\n                            {signupErrors.email}\r\n                            </Form.Control.Feedback>\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.username && (!formik.errors.username || !signupErrors.username)}\r\n                        isInvalid={!!formik.errors.username || !!signupErrors.username}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.username && formik.errors.username ? 'invalid' : 'valid'}>\r\n                            {formik.errors.username}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.username && \r\n                            <Form.Control.Feedback type={'invalid'}>\r\n                            {signupErrors.username}\r\n                            </Form.Control.Feedback>\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password1\"\r\n                        value={formik.values.password1}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.password1 && (!formik.errors.password1 || !signupErrors.password1)}\r\n                        isInvalid={!!formik.errors.password1 || !!signupErrors.password1}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.password1 && formik.errors.password1 ? 'invalid' : 'valid'}>\r\n                            {formik.errors.password1}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.password1 && \r\n                            signupErrors.password1.map((errormsg, index) => {\r\n                                return (\r\n                                    <Form.Control.Feedback key={index} type={'invalid'}>\r\n                                        {errormsg}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password Again:</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        value={formik.values.password2}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.password2 && !formik.errors.password2}\r\n                        isInvalid={!!formik.errors.password2}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.password2 && formik.errors.password2 ? 'invalid' : 'valid'}>\r\n                            {formik.errors.password2}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        SignUp\r\n                    </Button>\r\n                </FormikForm>\r\n            </Container>\r\n            </>\r\n            )}\r\n        </Formik> */\r\n\r\nexport default SignupForm;","import React from 'react';\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {ListGroup} from 'react-bootstrap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: '0.4em 1em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        borderRadius: '.4em'\r\n    },\r\n    innerForm: {\r\n        padding: '0.4em 0.4em',\r\n        border: `0.5px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: '.5em',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    Decks: {\r\n        padding: '0.4em 0.4em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n    },\r\n    innerDecks: {\r\n        padding: theme.spacing(0.4),\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr auto',\r\n        alignItems: 'flex-start',\r\n        gap: '1em'\r\n    },\r\n    innerListForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.secondary.light}`,\r\n        borderRadius: '.8em'\r\n    },\r\n    innerCards: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    deckList: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n        width: '100%',\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr auto',\r\n        alignItems: 'flex-start',\r\n        gap: '1em'\r\n    },\r\n}));\r\n\r\nconst MainBodyLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n    // decks\r\n    const deck = props.deck;\r\n    // cards\r\n    const cards = props.cards;\r\n    // search\r\n    const search = props.search;\r\n\r\n    return(\r\n        <div className={classes.wrapperMain}>\r\n            <div className={classes.innerForm}>\r\n                {props.input}\r\n            </div>\r\n            {cards && \r\n            <div className={classes.innerCards}>\r\n                {props.body}\r\n            </div>\r\n            }\r\n            {search && \r\n            <div className={classes.innerCards}>\r\n                {props.searchBody}\r\n            </div>\r\n            }\r\n            { deck &&\r\n            <div className={classes.Decks}>\r\n                <ListGroup horizontal className={classes.deckList}>\r\n                    {props.deckList}\r\n                </ListGroup>\r\n                <div className={classes.innerDecks}>\r\n                    <div className={classes.innerCards}>\r\n                        {props.decks}\r\n                    </div>\r\n                    <div className={classes.innerListForm}>\r\n                        {props.deckForm}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputFormLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.formContainer}>\r\n            <div className={classes.inputContainer}>\r\n                {props.input}\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n                {props.options}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {InputFormLayout, MainBodyLayout}","import React from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst CustomBackdrop = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Backdrop open={true} color=\"primary\" className={classes.backdrop}>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\n/* export default CustomBackdrop; */\r\nexport default React.forwardRef((props, ref) => <CustomBackdrop {...props} forwardedRef={ref} />);","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useFormik } from 'formik';\r\nimport {TextField, Button,} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport {addNewCard} from './cardsSlice'\r\nimport {InputFormLayout} from '../ui/uiFormat'\r\nimport { makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    baseCardForm: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(1),\r\n        display: 'grid',\r\n        gridTemplateRows: 'auto',\r\n        gap: '1em'\r\n    },\r\n    cardFormButtonsGroup: {\r\n        display: 'flex'\r\n    },\r\n    formButton: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    deleteButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CustomCardInput = () => {\r\n    \r\n    // react \r\n    const [showInput, setShowInput] = useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n        },\r\n        onSubmit: async (values) => {\r\n            const {title, content} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                title,\r\n                content,\r\n            };\r\n            dispatch(addNewCard(requestBody))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    formik.handleReset()\r\n                    setShowInput(false)\r\n                    enqueueSnackbar('Card Created', { \r\n                        variant: 'success',\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar('Error creating card', { \r\n                        variant: 'error',\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    })\r\n    // material classes\r\n    const classes = useStyles()\r\n    // handle focuseEvent\r\n    const handleFocus = (e) => {\r\n        setShowInput(true)\r\n    }\r\n    const handleClose = (e) => {\r\n        setShowInput(false)\r\n    }\r\n\r\n    return(\r\n        <InputFormLayout\r\n        input={\r\n            <form className={classes.baseCardForm} autoComplete=\"off\" noValidate onSubmit={formik.handleSubmit}>\r\n                {showInput && \r\n                    <TextField \r\n                    id=\"title-basic\" \r\n                    name=\"title\" \r\n                    label=\"Title\" \r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onChange={formik.handleChange} \r\n                    margin=\"dense\"/>\r\n                }\r\n                    <TextField id=\"content-basic\"\r\n                    name=\"content\" \r\n                    label=\"New Card\" \r\n                    variant=\"outlined\" \r\n                    color=\"secondary\"\r\n                    onChange={formik.handleChange} \r\n                    onFocus={handleFocus}\r\n                    value={formik.values.content}\r\n                    multiline \r\n                    fullWidth\r\n                    placeholder=\"Start typing to add a new card\"\r\n                    />\r\n                {showInput && \r\n                <div className={classes.cardFormButtonsGroup}>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={formik.handleSubmit} className={classes.formButton}> Save Card</Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose} className={classes.deleteButton}> Cancel</Button>\r\n                </div>\r\n                }\r\n            </form>\r\n        }\r\n\r\n        options={\r\n            <InputButtonGroup formik={formik} input={{showInput, setShowInput}}/>\r\n        }\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {input} = props;\r\n\r\n    return (\r\n        <Button onClick={() => input.setShowInput((state) => !state)}\r\n        variant=\"outlined\"\r\n        color=\"secondary\">{input.showInput ? 'Close' : 'Expand'}</Button>\r\n    )\r\n}\r\n\r\nexport default CustomCardInput;","import React, {useState} from 'react';\r\nimport {useFormik } from 'formik';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\nimport {\r\n    removeCard, selectCardById, editCard,\r\n    selectCardsStatus\r\n} from './cardsSlice'\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {Button, IconButton, Dialog, DialogActions, DialogTitle, DialogContent, TextField, makeStyles} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n/* boxShadow: '-1px 1px 5px 1px rgb(142 142 142 / 75%)', */\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    cardMain: {\r\n        display: 'grid',\r\n        position: 'relative',\r\n        gridTemplateRows: 'auto 1fr auto',\r\n        cursor: 'pointer',\r\n        padding: '0.2em',\r\n        borderRadius: '.4em',\r\n        overflow: 'hidden',\r\n        boxShadow: `0px 0px 1px 0px ${theme.palette.text.primary}`,\r\n        minHeight: '220px',\r\n        minWidth: '210px',\r\n        maxHeight: '305px',\r\n        margin: '0.3em 0.5em',\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: '190px',\r\n            width: 'calc((100vw / 2) - 50px)'\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            maxWidth: 'calc((95vw / 3) - 15px)'\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: 'calc((95vw / 4) - 15px)'\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxWidth: 'calc((95vw / 5) - 15px)'\r\n        },\r\n        [theme.breakpoints.up('xl')]: {\r\n            maxWidth: 'calc((95vw / 6) - 15px)'\r\n        },\r\n    },\r\n    cardSubject: {\r\n        padding: '.3em',\r\n        borderBottom: `1px solid ${theme.palette.secondary.dark}`,\r\n        fontWeight: '600',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    cardContent: {\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        overflowWrap: 'break-word',\r\n        whiteSpace: 'normal',\r\n        wordBreak: 'break-all',\r\n        padding: '.3em',\r\n        display: 'inline-flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        fontSize: '1rem'\r\n    },\r\n    cardExtras: {\r\n        padding: '.2em',\r\n        display: 'flex',\r\n        justifySelf: 'stretch',\r\n        overflow: 'hidden',\r\n        justifyContent: 'space-around'\r\n    },\r\n\r\n}))\r\n\r\nconst CardBody = (props) => {\r\n\r\n    const id = props.id;\r\n    // react\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const dispatch = useDispatch();\r\n    const card = useSelector(state => selectCardById(state, id))\r\n    // router-dom\r\n    let history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const renderButtons = props.renderButtons ? props.renderButtons : true;\r\n\r\n    const handleDeleteClicked = () => {\r\n        dispatch(removeCard(id))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Card Deleted', { \r\n                    variant: 'success',\r\n                });\r\n            } else {\r\n                enqueueSnackbar('Error removing item', { \r\n                    variant: 'error',\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleCardBodyClick = () => {\r\n        setShowDialog(true)\r\n    }\r\n\r\n    const handleEditClicked = () => {\r\n        history.push(`/card/edit/${id}`);\r\n    }\r\n\r\n    const cardprops = {\r\n        id,\r\n        handleDeleteClicked,\r\n        showDialog,\r\n        setShowDialog,\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {cardsStatus === 'updated' &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <div className={classes.cardSubject}>\r\n                    {card.title}\r\n                </div>\r\n                <div className={classes.cardContent} data-index={id} onClick={() => handleCardBodyClick()}>\r\n                    {card.content}\r\n                </div>\r\n                { renderButtons &&\r\n                    <div className={classes.cardExtras}>\r\n                        <Button color=\"default\" size=\"small\" href=\"\" data-index={id} onClick={() => handleEditClicked()}>\r\n                            Edit\r\n                        </Button>\r\n                        <DeleteDialogSlide cardProps={cardprops}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {showDialog && <EditCardDialogForm state={cardprops}/>}\r\n        </>\r\n        }\r\n        {cardsStatus === \"stale\" &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <Skeleton variant=\"rect\" height={220} animation=\"wave\"/>\r\n            </div>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nconst EditCardDialogForm = (props) => {\r\n\r\n    // state\r\n    const {id, showDialog, setShowDialog} = props.state;\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let card  = useSelector(state => selectCardById(state, id))\r\n\r\n    // formik, using hook to make form layout easier\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: card['title'],\r\n            content: card['content'],\r\n        },\r\n        onSubmit: (values) => {\r\n            // Do stuff here...\r\n            const {title, content} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                id,\r\n                title,\r\n                content,\r\n            };\r\n            dispatch(editCard({id, requestBody}))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Card Updated', { \r\n                        variant: 'success',\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar('Error updating item', { \r\n                        variant: 'error',\r\n                    });\r\n                }\r\n            })\r\n            setShowDialog(false)\r\n        }\r\n    })\r\n\r\n    // handle dialog\r\n    const handleClose = () => setShowDialog(false)\r\n\r\n    return (\r\n        <>\r\n        <Dialog open={showDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-card\">{formik.values.title}</DialogTitle>\r\n            <DialogContent>\r\n            <TextField\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                id=\"titleDialog\"\r\n                label=\"Title\"\r\n                type=\"text\"\r\n                fullWidth\r\n                name='title'\r\n                onChange={formik.handleChange}\r\n                value={formik.values.title}\r\n            />\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                id=\"contentDialog\"\r\n                label=\"Content\"\r\n                name='content'\r\n                multiline\r\n                rows={7}\r\n                fullWidth\r\n                onChange={formik.handleChange}\r\n                value={formik.values.content}\r\n            />\r\n            </DialogContent>\r\n            <DialogActions>\r\n            <Button onClick={handleClose}>\r\n                Cancel\r\n            </Button>\r\n            <Button color=\"default\" onClick={formik.handleSubmit}>\r\n                Update\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n        </>\r\n    );\r\n}\r\n  \r\nconst DeleteDialogSlide = (props) => {\r\n    //react \r\n    const [open, setOpen] = React.useState(false);\r\n    // material\r\n    const classes = useStyles();\r\n    //destructure\r\n    const {handleDeleteClicked} =props.cardProps;\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n      setOpen(false);\r\n      handleDeleteClicked()\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <IconButton \r\n        aria-label=\"delete\"\r\n        onClick={handleClickOpen}\r\n        size=\"small\"\r\n        >\r\n            <DeleteIcon fontSize=\"small\" />\r\n        </IconButton>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Transition}\r\n          aria-labelledby=\"alert-dialog-slide-prompt\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-prompt\">{\"Delete this Item?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default CardBody;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Dialog, DialogActions, DialogTitle } from '@material-ui/core';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport clsx from 'clsx';\r\nimport {selectDeckById, updateActiveDeck, removeDeckById, selectActiveDeck} from './deckSlice'\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteIconOutlinedColorPrimary: {\r\n        color: theme.palette.warning.light,\r\n        '&:hover': {\r\n            color:'#e61e1eb3'\r\n        }\r\n    },\r\n    clickableColorPrimary: {\r\n        background: theme.palette.background.paper,\r\n    },\r\n    root: {\r\n        margin: '0.3em 0.2em',\r\n        boxShadow: '-2px 1px 2px 0px rgb(50 50 50 / 65%)',\r\n        color: theme.palette.text.primary,\r\n        '&$active': {\r\n            background: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n            boxShadow: '0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)',\r\n            '&:hover': {\r\n                background: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n    },\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    active: {}\r\n}));\r\n  \r\nconst DeckItem = (props) => {\r\n\r\n    const id = props.id;\r\n    //react \r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const deck = useSelector(state => selectDeckById(state, id))\r\n    const activeDeck = useSelector(selectActiveDeck)\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDelete(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpenDelete(false);\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        // implement dispatch state with curr deck id\r\n        dispatch(removeDeckById(id))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Deck Deleted', { \r\n                    variant: 'success',\r\n                });\r\n            } else {\r\n                enqueueSnackbar('Error removing item', { \r\n                    variant: 'error',\r\n                });\r\n            }\r\n        })\r\n    }\r\n    const handleDeckClick = () => {\r\n        // implement update state with curr deck id\r\n        dispatch(updateActiveDeck(id))\r\n    }\r\n\r\n    const delProps = {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Chip \r\n            label={deck.name} \r\n            onDelete={handleClickOpen} \r\n            onClick={() => handleDeckClick(deck.id)} \r\n            color=\"primary\" \r\n            variant=\"outlined\"\r\n            classes={{\r\n                root: classes.root,\r\n                deleteIconOutlinedColorPrimary: classes.deleteIconOutlinedColorPrimary,\r\n            }}\r\n            className={clsx({\r\n                [classes.active]: activeDeck === id,\r\n            })}\r\n            clickable\r\n        />\r\n        <DeleteDialogSlide {...delProps}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst DeleteDialogSlide = (props) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n    \r\n    const {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    } = props;\r\n\r\n    \r\n    const handleConfirm = () => {\r\n        handleClose();\r\n        handleDeleteClick()\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Dialog\r\n          open={openDelete}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete this Item?\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </>\r\n    );\r\n}\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default DeckItem;","import React from 'react';\r\nimport CardBody from '../cards/CardBody'\r\nimport DeckItem from '../decks/DeckItem'\r\n\r\nconst useCreateDeck = (listObj) => {\r\n\r\n    let tabledDeck = [];\r\n    if (listObj.length >= 0) {\r\n        tabledDeck = listObj.map((deck) => {\r\n            return {value: deck['id'], label: deck['name'] }\r\n        })\r\n        return tabledDeck\r\n    } else {\r\n        return tabledDeck\r\n    }\r\n}\r\n\r\nconst useCardsCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null\r\n    if (listObj.length === 0 ) return []\r\n    let cards = listObj.map((item) => {\r\n        return <CardBody key={item} id={item}/>\r\n    })\r\n\r\n    return cards;\r\n\r\n}\r\n\r\nconst useDecksCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null\r\n    if (listObj.length === 0 ) return null\r\n\r\n    let cards = listObj.map((item) => {\r\n        return <DeckItem key={item} id={item}/>\r\n    })\r\n\r\n    return cards;\r\n}\r\n\r\nexport {useCreateDeck, useCardsCreator, useDecksCreator}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    emptyRoot: {\r\n        display: 'grid',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    Icon: {\r\n        justifySelf: 'center',\r\n    },\r\n}));\r\n\r\n\r\nconst EmptyListRender = (props) => {\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.emptyRoot}>\r\n            <ArrowUpwardIcon fontSize=\"large\" className={classes.Icon}/>\r\n            <Typography variant={'h4'}> {props.children} </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyListRender;","import React from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport {selectCardsTotal, selectCardsIds, selectCardsStatus, fetchCards} from './cardsSlice'\r\nimport {MainBodyLayout} from '../ui/uiFormat'\r\nimport CustomBackdrop from '../ui/CustomBackdrop'\r\nimport CustomCardInput from './CardInputBox'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\nimport EmptyListRender from '../ui/EmptyListRender'\r\n\r\n\r\nconst CardList = (props) => {\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === 'stale') {\r\n            dispatch(fetchCards())\r\n        }\r\n    }, [cardsStatus, dispatch])\r\n\r\n    return (\r\n        <>\r\n        <MainBodyLayout\r\n            input={<CustomCardInput/>}\r\n            body={<CardsListRender/>}\r\n            cards\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nconst CardsListRender = (props) => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsTotal)\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const totalCardsId = useSelector(selectCardsIds)\r\n    const cardsArray = useCardsCreator(totalCardsId)\r\n\r\n    if (cardsArray === null && cardsStatus === 'stale') {\r\n        return (\r\n            <CustomBackdrop/>\r\n        )\r\n    } else if (cardsStatus === 'updated' && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Cards, Create a Card</EmptyListRender>\r\n        )\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst newCardStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: '0.4em 1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center',\r\n        borderRadius: '.4em'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '90%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    formCtl: {\r\n\r\n    }\r\n}));\r\n\r\nexport default newCardStyles;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Button, TextField, InputBase } from '@material-ui/core';\r\nimport newCardStyles from './newCardStyles'\r\nimport { useFormik } from \"formik\";\r\nimport { useSnackbar } from 'notistack';\r\nimport {addNewCard} from './cardsSlice'\r\nimport {selectAllDecks} from '../decks/deckSlice'\r\nimport MyCustomSelect from '../ui/MyCustomSelect'\r\nimport {useCreateDeck} from '../hooks/customHooks'\r\n\r\nconst AddCardForm = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    // material\r\n    const classes = newCardStyles();\r\n    // custom hook\r\n    const tabledDeck = useCreateDeck(allDecksList)\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n            selectedDeck: [],\r\n            allDeck: tabledDeck\r\n        },\r\n        onSubmit:(values) => {\r\n            // Do stuff here...\r\n            const {title, content, selectedDeck} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                title,\r\n                content,\r\n                notebook: selectedDeck,\r\n            };\r\n            dispatch(addNewCard(requestBody))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Card Created', { \r\n                        variant: 'success',\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar('Error creating card', { \r\n                        variant: 'error',\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <div className={classes.wrapperMain}>\r\n                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin={'dense'}\r\n                        name=\"title\"\r\n                        id=\"cardTitle\"\r\n                        label=\"Title\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        multiline\r\n                        fullWidth\r\n                        margin={'dense'}\r\n                        rows={3}\r\n                        name=\"content\"\r\n                        id=\"cardContent\"\r\n                        label=\"Content\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.content}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    {/* <InputBase \r\n                        name='selectedDeck'\r\n                        data={formik.values.allDeck}\r\n                        inputComponent={MyCustomSelect}\r\n                    /> */}\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                        New Card\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddCardForm;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Button, TextField, InputBase } from '@material-ui/core';\r\nimport newCardStyles from './newCardStyles'\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport { useFormik  } from \"formik\";\r\nimport { useSnackbar } from 'notistack';\r\nimport {editCard, selectCardById,} from './cardsSlice'\r\nimport {selectAllDecks} from '../decks/deckSlice'\r\nimport MyCustomSelect from '../ui/MyCustomSelect'\r\nimport {useCreateDeck} from '../hooks/customHooks'\r\n\r\nconst EditCardForm = (props) => {\r\n\r\n    // react-router\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let card  = useSelector(state => selectCardById(state, id))\r\n    const allDecksList = useSelector(selectAllDecks)\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = newCardStyles();\r\n\r\n    // custom hook\r\n    const tabledDeck = useCreateDeck(allDecksList)\r\n\r\n    let currentCardDeck = [];\r\n\r\n    card.notebook.forEach(deckId => {\r\n        let deck = allDecksList.find((deckobj) => deckId === deckobj.id)\r\n        const {id: value, name: label} = deck\r\n        currentCardDeck.push({value, label})\r\n    })\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: card['title'],\r\n            content: card['content'],\r\n            selectedDeck: currentCardDeck,\r\n            allDeck: tabledDeck,\r\n            formattedDeck:[]\r\n        },\r\n        onSubmit:(values) => {\r\n            // Do stuff here...\r\n            const {title, content, formattedDeck} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                id,\r\n                title,\r\n                content,\r\n                notebook: formattedDeck,\r\n            };\r\n            dispatch(editCard({id, requestBody}))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Card Updated', { \r\n                        variant: 'success',\r\n                    });\r\n                    history.goBack()\r\n                } else {\r\n                    enqueueSnackbar('Error Updating', { \r\n                        variant: 'error',\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    return(\r\n        <>\r\n            <div className={classes.wrapperMain}>\r\n                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin={'dense'}\r\n                        name=\"title\"\r\n                        id=\"cardTitle\"\r\n                        label=\"Title\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        multiline\r\n                        fullWidth\r\n                        margin={'dense'}\r\n                        rows={4}\r\n                        name=\"content\"\r\n                        id=\"cardContent\"\r\n                        label=\"Content\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.content}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    {/* <InputBase \r\n                        name='selectedDeck'\r\n                        data={formik.values.allDeck}\r\n                        inputComponent={MyCustomSelect}\r\n                    /> */}\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                        Update Card\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditCardForm;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Typography } from '@material-ui/core';\r\nimport {selectDeckById, selectActiveDeck, selectDeckTotal} from './deckSlice'\r\nimport {selectCardsStatus, fetchCards} from '../cards/cardsSlice'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\n\r\nconst DeckCardSection = (props) => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const activeDeck = useSelector(selectActiveDeck)\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const totalDeckNum = useSelector(selectDeckTotal)\r\n    const singleDeck = useSelector((state) => selectDeckById(state, activeDeck))\r\n    const cardsArray = useCardsCreator(singleDeck ? singleDeck.notebook_notes : null)\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            dispatch(fetchCards())\r\n        }\r\n    }, [cardsStatus])\r\n\r\n    if (activeDeck === null && totalDeckNum > 0 ) {\r\n        return (\r\n            <Typography variant=\"body1\">Select a Deck</Typography>\r\n        )\r\n    } else if (activeDeck === null && totalDeckNum === 0) {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {cardsArray && cardsArray.length > 0 &&\r\n            [cardsArray]\r\n        }\r\n        {cardsArray && cardsArray.length === 0 &&\r\n            <Typography variant=\"body1\">Empty Deck, Add some cards</Typography>\r\n        }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DeckCardSection","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport {TextField, Button} from '@material-ui/core';\r\nimport {useDispatch, } from 'react-redux'\r\nimport {addNewDeck} from './deckSlice'\r\nimport {InputFormLayout} from '../ui/uiFormat'\r\nimport * as Yup from 'yup';\r\n\r\nconst CustomDeckInput = () => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {deckName: \"\" },\r\n        onSubmit: async (values, actions) => {\r\n            // Do stuff here...\r\n            const {deckName} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                name: deckName\r\n            };\r\n            dispatch(addNewDeck(requestBody))\r\n            actions.resetForm()\r\n        },\r\n        validationSchema: Yup.object({\r\n            deckName: Yup.string()\r\n                .required('Required'),\r\n        }),\r\n        validateOnBlur: false\r\n    })\r\n\r\n    return (\r\n        <>\r\n        <InputFormLayout\r\n        input={\r\n            <form className=\"baseForm\" onSubmit={formik.handleSubmit} required>\r\n                <TextField \r\n                label=\"Create Deck\" \r\n                variant=\"outlined\" \r\n                name=\"deckName\" \r\n                placeholder=\"Start typing to create a new deck\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={formik.values.deckName}\r\n                size=\"small\"\r\n                error={ formik.errors.deckName ? true : false}\r\n                helperText={formik.errors.deckName}\r\n                fullWidth/>\r\n            </form>\r\n        }\r\n\r\n        options={\r\n            <InputButtonGroup formik={formik}/>\r\n        }\r\n        />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {formik} = props;\r\n\r\n    return (\r\n        <Button onClick={formik.handleSubmit} variant=\"outlined\" color=\"secondary\">Save Deck</Button>\r\n    )\r\n}\r\n\r\nexport {CustomDeckInput}","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport { useSnackbar } from 'notistack';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport {selectAllCards} from '../cards/cardsSlice'\r\nimport {updateDeckCards, selectActiveDeck, selectCardsByDeckId} from './deckSlice'\r\nimport {getArrayDifference} from '../utils/utilities'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '210px',\r\n        maxHeight: `58vh`,\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    listHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    buttonForm: {\r\n        display: 'flex',\r\n        alignContent: 'center',\r\n        justifyContent: 'space-evenly',\r\n        flexWrap: 'nowrap',\r\n    },\r\n}));\r\n\r\nconst DeckListForm = (props) => {\r\n    // selected deck\r\n    const selectedDeckId = useSelector(selectActiveDeck);\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const allCardsArray = useSelector(selectAllCards);\r\n    const deckCardsArrayById = useSelector((state) => selectCardsByDeckId(state, selectedDeckId));\r\n    let AddCardsArray = selectedDeckId ? allCardsArray.filter(card => !deckCardsArrayById.includes(card['id'])) : [];\r\n    let RemoveCardsArray = selectedDeckId ? allCardsArray.filter(card => deckCardsArrayById.includes(card['id'])) : [];\r\n    // react \r\n    const [checked, setChecked] = React.useState([]);\r\n    const [deleteChecked, setDeleteChecked] = React.useState([]);\r\n    const [removeList, setRemoveList] = React.useState(true);\r\n    // material\r\n    const classes = useStyles();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleUpdate = () => {\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: checked.concat(deckCardsArrayById)\r\n        }))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Deck Updated', { \r\n                    variant: 'success',\r\n                });\r\n            } else {\r\n                enqueueSnackbar('Error Updating Deck', { \r\n                    variant: 'error',\r\n                });\r\n            }\r\n        })\r\n        setChecked([]);\r\n    }\r\n    \r\n    const handleRemove = () => {\r\n        let diff = getArrayDifference(deckCardsArrayById, deleteChecked)\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: diff\r\n        }))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Deck Updated', { \r\n                    variant: 'success',\r\n                });\r\n            } else {\r\n                enqueueSnackbar('Error Updating Deck', { \r\n                    variant: 'error',\r\n                });\r\n            }\r\n        })\r\n        setDeleteChecked([]);\r\n    }\r\n\r\n    const listProps = {\r\n        checked,\r\n        setChecked,\r\n        deleteChecked,\r\n        setDeleteChecked,\r\n        handleUpdate,\r\n        handleRemove,\r\n        AddCardsArray,\r\n        RemoveCardsArray,\r\n        removeList\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {   selectedDeckId && \r\n            <>\r\n            <List \r\n            className={classes.root}\r\n            subheader={\r\n                <ListSubheader className={classes.listHeader} component=\"div\" id=\"nested-list-subheader\">\r\n                    {removeList ? 'Remove Cards' : 'Add Cards'}\r\n                    <IconButton onClick={() => setRemoveList(state => !state)}>\r\n                        <SwapHorizIcon/>\r\n                    </IconButton>\r\n                </ListSubheader>\r\n            }\r\n            >   \r\n                {removeList && <RemoveDeckList {...listProps}/>}\r\n                {!removeList && <AddDeckList {...listProps}/>}\r\n            </List>\r\n            <ListButtons {...listProps}/>\r\n            </>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst AddDeckList = (props) =>  {\r\n\r\n    const {checked, setChecked, AddCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {AddCardsArray ? AddCardsArray.map((card) => {\r\n            const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n            return (\r\n            <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                <ListItemIcon>\r\n                <Checkbox\r\n                    edge=\"start\"\r\n                    checked={checked.indexOf(card.id) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${card.title}`} />\r\n            </ListItem>\r\n            );\r\n        }) : null }\r\n        </>\r\n    );\r\n}\r\n\r\nconst RemoveDeckList = (props) =>  {\r\n\r\n    const {deleteChecked, setDeleteChecked, RemoveCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = deleteChecked.indexOf(value);\r\n        const newChecked = [...deleteChecked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setDeleteChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {RemoveCardsArray ? RemoveCardsArray.map((card) => {\r\n            const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n            return (\r\n            <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                <ListItemIcon>\r\n                <Checkbox\r\n                    edge=\"start\"\r\n                    checked={deleteChecked.indexOf(card.id) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${card.title}`} />\r\n            </ListItem>\r\n            );\r\n        }) : null }\r\n        </>\r\n    );\r\n}\r\n\r\nconst ListButtons = (props) => {\r\n\r\n    const {\r\n        removeList, handleUpdate,\r\n        handleRemove, setDeleteChecked,\r\n        setChecked\r\n    } = props;\r\n\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClear = () => {\r\n        if (removeList) {\r\n            setDeleteChecked([])\r\n        } else {\r\n            setChecked([])\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={classes.buttonForm}>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<DoneAllIcon />}\r\n                size=\"small\"\r\n                onClick={removeList ? handleRemove : handleUpdate }\r\n            >\r\n                {removeList ? 'remove' : 'update' }\r\n            </Button>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<ClearIcon />}\r\n                size=\"small\"\r\n                onClick={handleClear}\r\n            >\r\n                clear\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeckListForm","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {MainBodyLayout} from '../ui/uiFormat'\r\nimport {useDecksCreator} from '../hooks/customHooks'\r\nimport {selectDecksIds, selectDecksStatus, fetchDecks, selectDeckTotal} from './deckSlice'\r\nimport DeckCardSection from './DeckCardSection'\r\nimport {CustomDeckInput} from './DeckInputBox'\r\nimport DeckListForm from './DeckListForm'\r\nimport CustomBackdrop from '../ui/CustomBackdrop'\r\nimport EmptyListRender from '../ui/EmptyListRender'\r\n\r\n\r\nconst DeckList = (props) => {\r\n\r\n    // redux\r\n    const decksStatus = useSelector(selectDecksStatus)\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        if (decksStatus === 'stale') {\r\n            dispatch(fetchDecks())\r\n        }\r\n    }, [decksStatus, dispatch])\r\n\r\n    return (\r\n        <>\r\n        <MainBodyLayout\r\n            deck\r\n            input={<CustomDeckInput/>}\r\n            deckList={<DeckChipsRenderList/>}\r\n            decks={<DeckCardSection/>}\r\n            deckForm={<DeckListForm />}\r\n        />\r\n        </>\r\n    )\r\n};\r\n\r\nconst DeckChipsRenderList = (props) => {\r\n\r\n    // redux\r\n    const decks = useSelector(selectDecksIds);\r\n    const decksStatus = useSelector(selectDecksStatus)\r\n    const totalDeckNum = useSelector(selectDeckTotal)\r\n    // create deck list \r\n    const deckArray = useDecksCreator(decks)\r\n\r\n    if (deckArray === null && decksStatus === 'stale') {\r\n        return (\r\n            <CustomBackdrop/>\r\n        )\r\n    } else if (decksStatus === 'updated' && totalDeckNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Decks, Create a Deck</EmptyListRender>\r\n        )\r\n    }\r\n\r\n    return(\r\n        [deckArray]\r\n    )\r\n\r\n}\r\n\r\nexport default DeckList;","import React from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerImg: {\r\n        display: 'none',\r\n        height: '34px',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        }\r\n    }\r\n}));\r\n\r\nconst LogoComponent = (props) => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // react\r\n    const [src, setSrc] = React.useState(theme.palette.type)\r\n    const darkTheme = theme.palette.type\r\n\r\n    React.useEffect(() => {\r\n        if (darkTheme === 'dark') {\r\n            setSrc('dark')\r\n        } else {\r\n            setSrc('light')\r\n        }\r\n    }, [darkTheme])\r\n\r\n    return(\r\n        <img\r\n            key={'image-icon'}\r\n            className={classes.headerImg}\r\n            alt={'title'}\r\n            src={src === 'dark' ? '/static/frontend/assets/images/CARDEDWHITE.png' : '/static/frontend/assets/images/CARDEDBLACK.png'}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LogoComponent","import React from 'react';\r\nimport { useHistory} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {clearCards} from '../cards/cardsSlice'\r\nimport {Dialog, DialogActions, DialogTitle} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SlideTransition from '../ui/SlideTransition'\r\nimport {userLogout} from '../users/authenticationSlice'\r\n\r\nconst AccountNavButton = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory()\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // logout dialog\r\n    const [openLogout, setOpenLogout] = React.useState(false);\r\n    //\r\n    const { forwardedRef, ...bprops } = props;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute('href')\r\n        handleClose()\r\n        history.push(path)\r\n    }\r\n\r\n    const handleLogoutClick = () => {\r\n        handleClose()\r\n        setOpenLogout(true)\r\n    }\r\n    \r\n    const handleLogoutCancel = () => {\r\n        setOpenLogout(false)\r\n    }\r\n\r\n    const handleLogoutConfirm = () => {\r\n        dispatch(userLogout(history))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Button aria-controls=\"account-menu\" \r\n            aria-haspopup=\"true\" \r\n            onClick={handleClick} \r\n            startIcon={<AccountCircleIcon/>} \r\n            className={props.className}\r\n            variant=\"contained\"\r\n            size={'small'}\r\n            color=\"secondary\"\r\n            ref={forwardedRef}\r\n            {...bprops}\r\n        >\r\n            Account\r\n        </Button>\r\n        <Menu\r\n            id=\"account-menu\"\r\n            variant=\"menu\"\r\n            TransitionComponent={SlideTransition}\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n        >\r\n            <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/profile'}>Profile</MenuItem>\r\n            <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/account'}>My account</MenuItem>\r\n            <MenuItem onClick={handleLogoutClick}>Logout</MenuItem>\r\n        </Menu>\r\n        <Dialog open={openLogout} onClose={handleLogoutCancel} aria-labelledby=\"alert-dialog-title\">\r\n            <DialogTitle>{'Confirm Logout?'}</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={handleLogoutCancel} color=\"default\" variant='outlined'>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleLogoutConfirm} color=\"secondary\" variant='outlined' autoFocus>\r\n                    Logout\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <AccountNavButton {...props} forwardedRef={ref} />);","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport {apiFecthResource} from '../../api/api'\r\n\r\nconst searchAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n})\r\n\r\nconst initialState = searchAdapter.getInitialState({\r\n    loading: 'idle',\r\n    status: 'stale',\r\n    error: {\r\n        isErrored: false,\r\n        message: '',\r\n    }\r\n})\r\n\r\nexport const searchCards = createAsyncThunk('search/searchCards', async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `search/`\r\n        response = await apiFecthResource.get(url, params)\r\n        dispatch(fillSearchData(response.data))\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nconst searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        fillSearchData(state, action) {\r\n            searchAdapter.setAll(state, action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [searchCards.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [searchCards.fulfilled]: (state, action) => {\r\n            state.loading = 'loaded'\r\n            state.status = 'updated'\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    selectAll: selectAllCardSearch,\r\n    selectIds: selectCardsSearchIds,\r\n    selectTotal: selectCardsSearchTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = searchAdapter.getSelectors(state => state.search);\r\nexport const selectSearchLoadingStatus = state => state.search.loading;\r\nexport const {fillSearchData} = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer\r\n","import React from 'react';\r\nimport {useFormik } from 'formik';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport {searchCards} from '../search/searchSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchIcon: {\r\n        padding: theme.spacing(0.8, 1.6),\r\n        /* height: '100%', */\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    inputRoot: {\r\n        border: `1px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: '.5em',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SearchForm = (props) => {\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // react router\r\n    const history = useHistory();\r\n    // formik\r\n    const formik  = useFormik({\r\n      initialValues: {\r\n        searchValue: ''\r\n      },\r\n      onSubmit: async(values) => {\r\n        dispatch(searchCards(values))\r\n        history.push('/search')\r\n      }\r\n    })\r\n\r\n    return(\r\n        <div className={props.className}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon color=\"secondary\"/>\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              type=\"search\"\r\n              name=\"searchValue\"\r\n              onSubmit={formik.handleSubmit}\r\n              value={formik.values.searchValue}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\nconst NavButton = (props) => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    // icon mangement\r\n    let IconToUse;\r\n\r\n    switch (props.icon) {\r\n        case 'card':\r\n            IconToUse = BookRoundedIcon\r\n            break;\r\n        case 'deck':\r\n            IconToUse = LibraryBooksRoundedIcon\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <Button\r\n            component={RouterLink}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size={'small'}\r\n            classes={{\r\n                root: classes.root\r\n            }}\r\n            startIcon={<IconToUse/>}\r\n            to={props.to}\r\n        >\r\n            {props.primary}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","import React from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n    List, Divider, IconButton, Collapse,\r\n    ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst ListItemLink = (props) => {\r\n    const { icon, primary, to } = props;\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <li>\r\n        <ListItem button component={renderLink}>\r\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n          <ListItemText primary={primary} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n}));\r\n\r\nconst SideDrawer = (props) => {\r\n\r\n    const {open, handleDrawerClose, isAuthenticated} = props;\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // collapsible menu\r\n    const [showCollapse, setShowCollapse] = React.useState(true);\r\n\r\n    const handleCollapseClick = () => {\r\n        setShowCollapse(!showCollapse);\r\n    };\r\n\r\n    return(\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { !isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        primary={'Login'}\r\n                        to={'/login'}\r\n                        key={'login'}\r\n                    />\r\n                    <ListItemLink\r\n                        primary={'Register'}\r\n                        to={'/signup'}\r\n                        key={'signup'}\r\n                    />\r\n                </>\r\n                }\r\n                { isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        icon={<BookRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Cards'}\r\n                        to={'/cards'}\r\n                        key={'Cards'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<LibraryBooksRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Decks'}\r\n                        to={'/deck'}\r\n                        key={'Decks'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<AddBoxRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Create Card'}\r\n                        to={'/card/new'}\r\n                        key={'Create Card'}\r\n                    />\r\n                    <ListItem button onClick={handleCollapseClick}>\r\n                        <ListItemIcon>\r\n                            <AccountCircleIcon color=\"secondary\"/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Account\" />\r\n                        {showCollapse ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={showCollapse} timeout=\"auto\" unmountOnExit>\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Profile'}\r\n                            to={'/profile'}\r\n                            key={'Profile'}\r\n                            disablePadding\r\n                        />\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Password'}\r\n                            to={'/account'}\r\n                            key={'Account Management'}\r\n                            disablePadding\r\n                        />\r\n\r\n                    </Collapse>\r\n                </>\r\n                }\r\n            </List>\r\n            <Divider />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport { useHistory} from 'react-router-dom'\r\nimport SlideTransition from '../ui/SlideTransition'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\n\r\nconst MobileHeaderDropdown = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory()\r\n    // auth \r\n    const {isAuthenticated} = props;\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // current  menu\r\n    const [currentMenu, setCurrentMenu] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute('href')\r\n        handleClose()\r\n        history.push(path)\r\n        setCurrentMenu(event.target.textContent)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {currentMenu ? currentMenu : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/cards'}>Cards</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/deck'}>Decks</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/profile'}>Profile</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/account'}>My account</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        { !isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {currentMenu ? currentMenu : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/login'}>Login</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/signup'}>Register</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MobileHeaderDropdown","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nconst DarkModeSwitch = (props) => {\r\n    /* const {darkMode, setDarkMode} = {...props} */\r\n    const theme = useTheme();\r\n\r\n    return(\r\n        <FormControlLabel\r\n        label=\"Dark Mode\"\r\n        control={\r\n            <Switch\r\n                checked={theme.darkMode.darkMode}\r\n                onChange={() => theme.darkMode.setDarkMode(state => !state)}\r\n                name=\"darkMode\"\r\n                inputProps={{ 'aria-label': 'darkmode checkbox' }}\r\n            />\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default DarkModeSwitch;","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LogoComponent from './LogoComponent'\r\nimport {useAuth} from '../../api/api'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchCards} from '../cards/cardsSlice'\r\nimport {fetchDecks} from '../decks/deckSlice'\r\nimport AccountNavButton from './AccountNavButton'\r\nimport SearchForm from './SearchForm'\r\nimport NavButton from './NavButton'\r\nimport SideDrawer from './SideDrawer'\r\nimport MobileHeaderDropdown from './MobileHeaderDropdown'\r\nimport DarkModeSwitch from './DarkModeSwitch'\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n        fontSize: theme.typography.fontSize,\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 24,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n    headerImg: {\r\n        display: 'none',\r\n        height: '34px',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    navButton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(2),\r\n          width: 'auto',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'none',\r\n        },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        }\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    wrapperMain: {\r\n        minHeight: `calc(97vh - ${theme.mixins.toolbar.minHeight}px)`,\r\n        position: 'relative;',\r\n        padding: '.5em .5em;',\r\n    }\r\n}));\r\n\r\nconst HeaderBar = (props) => {\r\n\r\n    // main body\r\n    const {mainBody} = props;\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // auth \r\n    const isAuthenticated = useAuth();\r\n    // material classes\r\n    const classes = useStyles();\r\n    // drawer open\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTestClick = () => {\r\n        dispatch(fetchCards())\r\n        dispatch(fetchDecks())\r\n    }\r\n\r\n    const drawerProps = {\r\n        open,\r\n        handleDrawerClose,\r\n        isAuthenticated\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar variant=\"dense\">\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: open,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <LogoComponent/>\r\n                { isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={'card'} to={'/cards'} primary={'Cards'}/>\r\n                        <NavButton icon={'deck'} to={'/deck'} primary={'Decks'}/>\r\n                        <SearchForm className={classes.search}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionMobile}>\r\n                        <SearchForm className={classes.search}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <DarkModeSwitch/>\r\n                        <AccountNavButton className={classes.navButton}/>\r\n                    </div>\r\n                </>\r\n                }\r\n                { !isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={'card'} to={'/login'} primary={'Login'}/>\r\n                        <NavButton icon={'deck'} to={'/signup'} primary={'Register'}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                </>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n        <SideDrawer {...drawerProps}/>\r\n        <main className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}>\r\n            <div className={classes.toolbar} />\r\n            <div className={classes.wrapperMain}>\r\n                {mainBody}\r\n            </div>\r\n        </main>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default HeaderBar;\r\n","import React from 'react'\r\nimport {useFormik } from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, Typography } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport {editProfileData, fetchUserData,\r\n        selectUserDetailStatus, selectUserBdate,\r\n        selectUserProfilePic, selectUserUsername\r\n} from './userSlice'\r\nimport {selectCardsTotal} from '../cards/cardsSlice'\r\nimport {selectDeckTotal} from '../decks/deckSlice'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n      display: 'none',\r\n    },\r\n    root: {\r\n        display: 'grid',\r\n        justifyItems: 'center',\r\n        alignContent: 'flex-start',\r\n        boxShadow: `0px 1px 2px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: '8px',\r\n        margin: 'auto',\r\n        padding: '.4em .5em',\r\n        minHeight: 'inherit',\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileUsername: {\r\n        minWidth: '80px',\r\n        alignItems: 'center',\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 95%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: '8px',\r\n        margin: '0.5em 0.4em',\r\n        padding: '0.8em 0.2em',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    profileCardMini: {\r\n        minWidth: '80px',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: 'center',\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: '8px',\r\n        margin: '0.5em 0.4em',\r\n        padding: '0.8em 0.2em',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    profileCard: {\r\n        minWidth: '40%',\r\n        boxShadow: `0px 0px 3px 0px ${theme.palette.text.primary}`,\r\n        alignItems: 'center',\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: '8px',\r\n        margin: '0.5em 0.4em',\r\n        padding: '0.8em 0.2em',\r\n        textAlign: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    ProfileAvatarForm: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    ProfileAvatarImg: {\r\n        maxWidth: '250px',\r\n        maxHeight: '200px'\r\n    },\r\n    uploadBtn: {\r\n        padding: '4px'\r\n    },\r\n    ProfileAvatarBtnGrp: {\r\n        display: 'flex',\r\n        margin: theme.spacing(1)\r\n    },\r\n    flexRow: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        margin: '1em 0.4em'\r\n    },\r\n    flexColumn: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        margin: '1em 0.4em'\r\n    }\r\n}));\r\n\r\nconst ProfilePage = (props) => {\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus)\r\n    const username = useSelector(selectUserUsername)\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        if (userDetailStatus === 'stale') {\r\n            dispatch(fetchUserData())\r\n        }\r\n    }, [userDetailStatus, dispatch])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className={classes.profileUsername} variant=\"h6\"> Hello {username ? username : \"User\"} </Typography>\r\n            <ProfileAvatar/>\r\n            <ProfileCardStatDetail/>\r\n            <ProfileCardUpdateForm/>s\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileAvatar = (props) => {\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const avatarLink = useSelector(selectUserProfilePic)\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            profile_picture: null,\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            const formData = new FormData()\r\n            formData.append('profile_picture', values['profile_picture'])\r\n            dispatch(editProfileData(formData))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Updated Successfully', { \r\n                        variant: 'success',\r\n                    });\r\n                    \r\n                } else {\r\n                    const {\r\n                        profile_picture,\r\n                        non_field_errors\r\n                    } = result.payload;\r\n\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${profile_picture.toString()}`, { \r\n                        variant: 'error',\r\n                    });\r\n                }\r\n                formikBag.setSubmitting(false)\r\n            })\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <div className={classes.flexColumn}>\r\n            <form className={classes.ProfileAvatarForm}>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-u\"\r\n                    type=\"file\"\r\n                    name=\"profile_picture\"\r\n                    className={classes.input_file}\r\n                    onChange={(event) => {\r\n                        formik.setFieldValue(\"profile_picture\", event.currentTarget.files[0]);\r\n                    }}\r\n                />\r\n                <img alt=\"go brrr\" src={avatarLink ? avatarLink : \"/assets/images/lOGOBIG.png\"} className={classes.ProfileAvatarImg} />\r\n                <div className={classes.ProfileAvatarBtnGrp}>\r\n                    <label htmlFor=\"contained-button-u\" style={{marginBottom: 0}}>\r\n                        <IconButton color=\"default\" aria-label=\"upload picture\" component=\"span\" className={classes.uploadBtn} size=\"small\">\r\n                            <PhotoCamera size=\"small\" />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    color=\"default\" \r\n                    size=\"small\" \r\n                    onClick={formik.handleSubmit}\r\n                    disabled={formik.isSubmitting}\r\n                    >\r\n                        Update Avatar\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileCardStatDetail = (props) => {\r\n\r\n    const classes = useStyles();\r\n    // redux\r\n    const cardsTotal = useSelector(selectCardsTotal);\r\n    const decksTotal = useSelector(selectDeckTotal);\r\n\r\n    return (\r\n        <div className={classes.flexRow}>\r\n            <div className={classes.profileCardMini}> Cards <span> {cardsTotal} </span></div>\r\n            <div className={classes.profileCardMini}> Decks <span> {decksTotal} </span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileCardUpdateForm = (props) => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const userBday = useSelector(selectUserBdate)\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            birth_date: userBday ? userBday : null\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            /* alert(JSON.stringify(values, null, 2)); */\r\n            const formData = new FormData()\r\n            formData.append('birth_date', values['birth_date'])\r\n            dispatch(editProfileData(formData))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Updated Successfully', { \r\n                        variant: 'success',\r\n                    });\r\n                } else {\r\n                    const {\r\n                        birth_date,\r\n                        non_field_errors\r\n                    } = result.payload;\r\n\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${birth_date.toString()}`, { \r\n                        variant: 'error',\r\n                    });\r\n                    \r\n                }\r\n                formikBag.setSubmitting(false)\r\n            })\r\n        }\r\n    })\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form noValidate className={classes.profileCard}>\r\n            <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                name=\"birth_date\"\r\n                color=\"secondary\"\r\n                margin=\"dense\"\r\n                defaultValue={formik.values.birth_date}\r\n                InputLabelProps={{\r\n                shrink: true,\r\n                }}\r\n                onChange={formik.handleChange}\r\n            />\r\n            <Button variant=\"contained\" color=\"default\" onClick={formik.handleSubmit} disabled={formik.isSubmitting}>\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport { useFormik  } from \"formik\";\r\nimport {TextField, Button, Typography } from '@material-ui/core';\r\nimport {confirmPasswordReset} from './userSlice'\r\n\r\nconst ConfirmPasswordResetForm = (props) => {\r\n\r\n    // react-router\r\n    const { uid, token  } = useParams();\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch()\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            uid,\r\n            token,\r\n            new_password1: '',\r\n            new_password2: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            dispatch(confirmPasswordReset(values))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={'profile-main'}>\r\n            <form className={'profile-form'}>\r\n            <TextField\r\n            id=\"filled-new_password1-input\"\r\n            name=\"new_password1\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            value={formik.values.new_password1}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n            id=\"filled-new_password2-input\"\r\n            name=\"new_password2\"\r\n            label=\"New Password Again\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            value={formik.values.new_password2}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                Update Password\r\n            </Button>\r\n            <Typography variant=\"subtitle1\">\r\n                Forgot Password? Click here to request a pssword reset\r\n            </Typography>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmPasswordResetForm;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport { Backdrop } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport {confirmUserEmail} from './userSlice'\r\nimport {authStatusSelector} from './authenticationSlice'\r\n\r\nconst ConfirmUserEmail = (props) => {\r\n\r\n    // react \r\n    const [confirmStatus, setConfirmStatus ] = React.useState('load');\r\n    // react-router\r\n    const { key  } = useParams();\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(authStatusSelector)\r\n    // notification\r\n    const { enqueueSnackbar, } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        dispatch(confirmUserEmail({key}))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Email Verified!', {variant:'success'})\r\n                setConfirmStatus('success')\r\n            } else {\r\n                enqueueSnackbar('Please check link', {variant:'error'})\r\n                setConfirmStatus('failed')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (isAuth && confirmStatus === 'success') {\r\n            setTimeout(() => {\r\n                history.push('/cards')\r\n            }, 2000);\r\n        } else {\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 2000);\r\n        }\r\n    }, [confirmStatus, isAuth, history])\r\n\r\n    if (confirmStatus ===  'load') {\r\n        return(\r\n            <Backdrop open={true}/>\r\n        )\r\n    } else if (confirmStatus ===  'success') {\r\n        return(\r\n            <div className={'inner-main'}>\r\n                <div className={'profile-main'}>\r\n                    <p> Email Verified!</p>\r\n                    <p> Redirecting...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (confirmStatus ===  'failed') {\r\n        return(\r\n            <div className={'inner-main'}>\r\n                <div className={'profile-main'}>\r\n                    <p> Error, verifying link. please request verification link again</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default ConfirmUserEmail;","import React from 'react';\r\nimport { useSelector} from 'react-redux'\r\nimport {selectCardsSearchTotal, selectCardsSearchIds, selectSearchLoadingStatus} from './searchSlice'\r\nimport {MainBodyLayout} from '../ui/uiFormat'\r\nimport CustomBackdrop from '../ui/CustomBackdrop'\r\nimport CustomCardInput from '../cards/CardInputBox'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\nimport EmptyListRender from '../ui/EmptyListRender'\r\n\r\nconst SearchPage = (props) => {\r\n\r\n    return (\r\n        <>\r\n        <MainBodyLayout\r\n            input={<CustomCardInput/>}\r\n            searchBody={<SearchListRender/>}\r\n            search\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nconst SearchListRender = (props) => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsSearchTotal)\r\n    const searchLoading = useSelector(selectSearchLoadingStatus)\r\n    const totalCardsId = useSelector(selectCardsSearchIds)\r\n    const cardsArray = useCardsCreator(totalCardsId)\r\n\r\n    if (searchLoading !== 'loaded') {\r\n        return (\r\n            <CustomBackdrop/>\r\n        )\r\n    } else if (cardsArray.length === 0 && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty..</EmptyListRender>\r\n        )\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    )\r\n}\r\n\r\nexport default SearchPage","import React from 'react';\r\nimport {Typography, } from '@material-ui/core';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nconst NoMatchFound = (props) => {\r\n\r\n    return(\r\n        <Container>\r\n            <Typography>Error, Page does not exist</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoMatchFound","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, useHistory,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport { ThemeProvider  } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useSnackbar } from 'notistack';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport CustomSnackbarProvider from './components/ui/SnackBarAlert'\r\nimport LoginForm from './components/users/LoginForm'\r\nimport SignupForm from './components/users/SignupForm'\r\nimport CardList from './components/cards/CardList'\r\nimport AddCardForm from './components/cards/AddCardForm'\r\nimport EditCardForm from './components/cards/EditCardForm'\r\nimport DeckList from './components/decks/DeckList'\r\nimport HeaderBar from './components/header/HeaderBar.js'\r\nimport ProfilePage from './components/users/ProfilePage'\r\nimport AccountMangementPage from './components/users/AccountMangementPage'\r\nimport ConfirmPasswordResetForm from './components/users/ConfirmPasswordResetForm'\r\nimport ConfirmUserEmail from './components/users/ConfirmUserEmail'\r\nimport SearchPage from './components/search/SearchPage'\r\nimport NoMatchFound from './components/ui/CustomNoMatchFound'\r\nimport {useAuth} from './api/api'\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    // auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // router\r\n    const history = useHistory()\r\n    // React\r\n    React.useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            enqueueSnackbar('Logged Out', {variant: 'warning', persist: false,})\r\n        }\r\n    }, [isAuthenticated, enqueueSnackbar])\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            isAuthenticated ? (children) : (\r\n                <Redirect\r\n                to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: location }\r\n                }}\r\n                />\r\n            )\r\n        }\r\n      />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n\r\n    let isAuthenticated = useAuth();\r\n    let prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n    let [darkMode, setDarkMode] = React.useState(false)\r\n    const prefTheme = React.useMemo(\r\n        () =>\r\n          createMuiTheme({\r\n            palette: {\r\n              type: darkMode ? 'dark' : 'light',\r\n              primary: {\r\n                light: '#ffffff',\r\n                main: '#f5f5f5',\r\n                dark: '#c2c2c2',\r\n                contrastText: '#fff',\r\n              },\r\n              secondary: {\r\n                light: '#ffc4ff',\r\n                main: '#ce93d8',\r\n                dark: '#9c64a6',\r\n                contrastText: '#000',\r\n              },\r\n              warning: {\r\n                main: '#b40000'\r\n              }\r\n            },\r\n            typography: {\r\n              fontFamily: [\r\n                'Open Sans',\r\n                'sans-serif',\r\n                \"Segoe UI\",\r\n              ].join(','),\r\n              fontSize: 14,\r\n            },\r\n            darkMode: {\r\n                darkMode,\r\n                setDarkMode\r\n            }\r\n          }),\r\n        [darkMode],\r\n    );\r\n\r\n    React.useEffect(() => {\r\n        setDarkMode(prefersDarkMode)\r\n    }, [prefersDarkMode])\r\n\r\n    return (\r\n        <ThemeProvider theme={prefTheme}>\r\n            <CustomSnackbarProvider>\r\n                <Router>\r\n                    <HeaderBar\r\n                    mainBody={\r\n                        <Switch>\r\n                            <Route path=\"/login\" render={() => <LoginForm/>}/>\r\n                            <Route path=\"/signup\" render={() => <SignupForm/>}/>\r\n                            <PrivateRoute path=\"/cards\" children={<CardList/>}/>\r\n                            <PrivateRoute path=\"/card/new\" children={<AddCardForm/>}/>\r\n                            <PrivateRoute path=\"/card/edit/:id\" children={<EditCardForm/>}/>\r\n                            <PrivateRoute path=\"/deck\" children={<DeckList/>}/>\r\n                            <PrivateRoute path=\"/profile\" children={<ProfilePage/>}/>\r\n                            <PrivateRoute path=\"/account\" children={<AccountMangementPage/>}/>\r\n                            <PrivateRoute path=\"/search\" children={<SearchPage/>}/>\r\n                            <Route path=\"/password-reset/confirm/:uid/:token\" render={() => <ConfirmPasswordResetForm/>}/>\r\n                            <Route path=\"/accounts/confirm-email/:key\" render={() => <ConfirmUserEmail/>}/>\r\n                            <Route exact path=\"/\">\r\n                                {\r\n                                    isAuthenticated ? <Redirect to=\"/cards\"/> : <Redirect to=\"/login\"/>\r\n                                }\r\n                            </Route>\r\n                            <Route path=\"*\" render={() => <NoMatchFound/>}/>\r\n                        </Switch>\r\n                    }\r\n                    />\r\n                </Router>\r\n            </CustomSnackbarProvider>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport authReducer from '../components/users/authenticationSlice'\r\nimport userReducer from '../components/users/userSlice'\r\nimport cardsReducer from '../components/cards/cardsSlice'\r\nimport deckReducer from '../components/decks/deckSlice'\r\nimport searchReducer from '../components/search/searchSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        cards: cardsReducer,\r\n        decks: deckReducer,\r\n        user: userReducer,\r\n        search: searchReducer,\r\n    }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n/* import './scss/main.scss'; */\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline/>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcarded_react\"] = self[\"webpackChunkcarded_react\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [201,460,913,698,278,14,794,555,617,105,70,593,145,968,162,344,979,382], function() { return __webpack_require__(51884); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/runtime/chunk loaded","webpack:///./frontend/src/api/api.js","webpack:///./frontend/src/components/ui/SlideTransition.js","webpack:///./frontend/src/components/ui/SnackBarAlert.js","webpack:///./frontend/src/components/users/userSlice.js","webpack:///./frontend/src/components/cards/cardsSlice.js","webpack:///./frontend/src/components/utils/utilities.js","webpack:///./frontend/src/components/decks/deckSlice.js","webpack:///./frontend/src/components/users/authenticationSlice.js","webpack:///./frontend/src/components/users/AccountMangementPage.js","webpack:///./frontend/src/components/users/LoginForm.js","webpack:///./frontend/src/components/users/SignupForm.js","webpack:///./frontend/src/components/ui/uiFormat.js","webpack:///./frontend/src/components/ui/CustomBackdrop.js","webpack:///./frontend/src/components/cards/CardInputBox.js","webpack:///./frontend/src/components/cards/CardBody.js","webpack:///./frontend/src/components/decks/DeckItem.js","webpack:///./frontend/src/components/hooks/customHooks.js","webpack:///./frontend/src/components/ui/EmptyListRender.js","webpack:///./frontend/src/components/cards/CardList.js","webpack:///./frontend/src/components/cards/newCardStyles.js","webpack:///./frontend/src/components/cards/CustomDeckSelect.js","webpack:///./frontend/src/components/cards/AddCardForm.js","webpack:///./frontend/src/components/ui/CustomNoMatchFound.js","webpack:///./frontend/src/components/cards/EditCardForm.js","webpack:///./frontend/src/components/decks/DeckCardSection.js","webpack:///./frontend/src/components/decks/DeckInputBox.js","webpack:///./frontend/src/components/decks/DeckListForm.js","webpack:///./frontend/src/components/decks/DeckList.js","webpack:///./frontend/src/components/header/LogoComponent.js","webpack:///./frontend/src/components/header/AccountNavButton.js","webpack:///./frontend/src/components/header/LogoutDialog.js","webpack:///./frontend/src/components/header/LogoutButton.js","webpack:///./frontend/src/components/search/searchSlice.js","webpack:///./frontend/src/components/header/SearchForm.js","webpack:///./frontend/src/components/header/NavButton.js","webpack:///./frontend/src/components/header/SideDrawer.js","webpack:///./frontend/src/components/header/MobileHeaderDropdown.js","webpack:///./frontend/src/components/header/DarkModeSwitch.js","webpack:///./frontend/src/components/header/HeaderBar.js","webpack:///./frontend/src/components/users/ProfilePage.js","webpack:///./frontend/src/components/users/ConfirmPasswordResetForm.js","webpack:///./frontend/src/components/users/ConfirmUserEmail.js","webpack:///./frontend/src/components/search/SearchPage.js","webpack:///./frontend/src/App.js","webpack:///./frontend/src/app/store.js","webpack:///./frontend/src/index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"names":["deferred","token","observers","isLoggedIn","notify","prepareHeader","React","props","ref","Slide","timeout","enter","exit","notistackRef","onClickDismiss","key","current","closeSnackbar","dense","preventDuplicate","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","SlideTransition","action","IconButton","onClick","Close","children","axiosInstance","require","create","baseURL","tokenProvider","JSON","parse","localStorage","getItem","isLogged","forEach","observer","getToken","setToken","_token","setItem","removeItem","subscribe","push","unsubscribe","_observer","useAuth","useState","setIsLogged","useEffect","listener","newIsLogged","apiFecthResource","tokenObj","defaults","headers","common","get","url","data","params","response","post","remove","delete","edit","put","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","substring","decodeURIComponent","login","logout","fetchUserData","createAsyncThunk","passedArgs","rejectWithValue","request","non_field_errors","editProfileData","getState","user","id","updateUserPassword","resetUserPassword","confirmPasswordReset","confirmUserEmail","userSlice","createSlice","initialState","status","email","user_profile","profile_picture","birth_date","reducers","extraReducers","fulfilled","state","payload","rejected","selectUserDetailStatus","selectUserEmail","selectUserUsername","username","selectUserProfilePic","selectUserBdate","cardsAdapter","createEntityAdapter","selectId","card","sortComparer","a","b","created","localeCompare","getInitialState","loading","error","isErrored","message","fetchCards","addNewCard","dispatch","updateCardInDeck","newCard","type","removeCard","cards","deletedCard","entities","removeCardFromDecks","delCard","editCard","requestBody","prevCard","console","log","cardsSlice","clearCards","removeAll","setStale","pending","upsertMany","addOne","updObj","changes","updateOne","removeOne","getSelectors","selectAllCards","selectAll","selectCardById","selectById","selectCardsIds","selectIds","selectCardsTotal","selectTotal","actions","selectCardsStatus","createSelector","cardId","notebook","getArrayDifference","arrayA","arrayB","_difference","elem","decksAdapter","deck","activeDeck","fetchDecks","addNewDeck","removeDeckById","removeDeck","updateDeckCards","deckId","decks","deckName","notebook_notes","decksSlice","clearDecks","delDeckId","delIndex","ids","updateActiveDeck","prevDeckArray","newArr","prevId","deletedCardId","selectAllDecks","selectDeckById","selectDecksIds","selectDeckTotal","selectDecksStatus","selectActiveDeck","axios","userLogin","loginValues","setAuthToken","userLogout","clearAuthToken","userSignup","authenticationSlice","authenticated","fullfilled","authStatusSelector","auth","useStyles","makeStyles","theme","input_file","display","root","justifyItems","alignContent","boxShadow","palette","text","primary","borderRadius","margin","padding","minHeight","backgroundColor","background","default","color","profileCardMini","minWidth","alignItems","secondary","main","textAlign","flexDirection","profileCard","justifyContent","topMargin","marginTop","spacing","cancelButton","warning","borderColor","PasswordChangeForm","useDispatch","classes","enqueueSnackbar","useSnackbar","formik","useFormik","initialValues","old_password","new_password1","new_password2","onSubmit","values","formikBag","then","result","meta","requestStatus","variant","setErrors","toString","setSubmitting","validationSchema","Yup","required","className","handleSubmit","TextField","label","autoComplete","errors","helperText","value","onChange","handleChange","onBlur","handleBlur","disabled","isSubmitting","PasswordResetRequest","userEmail","useSelector","open","setOpen","handleClose","Link","component","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","defaultValue","fullWidth","DialogActions","userDetailStatus","flex","width","light","buttonForm","buttonWrapper","flexWrap","position","buttonProgress","top","left","marginLeft","zIndex","isAuthenticated","history","useHistory","replace","password","min","fluid","Typography","href","noValidate","CircularProgress","size","password1","password2","setformSubmitting","max","touched","wrapperMain","innerForm","border","dark","marginBottom","Decks","innerDecks","gridTemplateColumns","gap","breakpoints","between","gridTemplateRows","innerListForm","maxHeight","innerCards","deckList","formContainer","marginRight","MainBodyLayout","deckForm","search","selectedDeckId","input","body","searchBody","ListGroup","InputFormLayout","inputContainer","buttonContainer","options","backdrop","CustomBackdrop","Backdrop","forwardedRef","baseCardForm","cardFormButtonsGroup","formButton","deleteButton","InputButtonGroup","setShowInput","showInput","title","content","handleReset","onFocus","multiline","placeholder","dirty","cardMain","cursor","overflow","maxWidth","up","cardSubject","borderBottom","fontWeight","whiteSpace","textOverflow","cardContent","overflowWrap","wordBreak","fontSize","cardExtras","justifySelf","EditCardDialogForm","showDialog","setShowDialog","rows","DeleteDialogSlide","handleDeleteClicked","cardProps","aria-label","Delete","Transition","aria-describedby","direction","cardsStatus","renderButtons","cardprops","data-index","Skeleton","height","animation","deleteIconOutlinedColorPrimary","clickableColorPrimary","paper","contrastText","active","openDelete","handleDeleteClick","keepMounted","setOpenDelete","delProps","Chip","onDelete","clsx","clickable","useCardsCreator","listObj","item","emptyRoot","Icon","ArrowUpward","CardsListRender","totalCardsNum","totalCardsId","cardsArray","formCtl","defaultArr","allDecksList","deckStatus","arr","setFieldValue","Autocomplete","multiple","freeSolo","filterSelectedOptions","getOptionLabel","option","getOptionSelected","renderTags","getTagProps","index","renderInput","event","optionArray","reason","newCardStyles","selectedDeck","EditCardForm","useParams","currentCardDeck","deckobj","goBack","pageState","setPageState","decksStatus","totalDeckNum","singleDeck","CustomDeckInput","resetForm","validateOnBlur","mainTheme","overflowY","overflowX","listHeader","AddDeckList","checked","setChecked","AddCardsArray","labelId","ListItem","role","undefined","button","currentIndex","newChecked","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","RemoveDeckList","deleteChecked","setDeleteChecked","RemoveCardsArray","ListButtons","removeList","handleUpdate","handleRemove","startIcon","DoneAll","Clear","allCardsArray","deckCardsArrayById","selectCardsByDeckId","setRemoveList","listProps","diff","List","subheader","ListSubheader","SwapHoriz","DeckChipsRenderList","deckArray","headerImg","useTheme","src","setSrc","darkTheme","alt","AccountNavButton","anchorEl","setAnchorEl","openLogout","setOpenLogout","bprops","handleMenuItemClick","path","target","getAttribute","logDialogProps","handleLogoutConfirm","handleLogoutCancel","aria-controls","aria-haspopup","currentTarget","AccountCircle","Boolean","MenuItem","e","LogoutDialog","LogoutButton","ExitToApp","searchAdapter","searchCards","fillSearchData","searchSlice","setAll","selectCardsSearchIds","selectCardsSearchTotal","selectSearchLoadingStatus","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","searchValue","Search","InputBase","IconToUse","icon","BookRoundedIcon","LibraryBooksRoundedIcon","RouterLink","to","ListItemLink","renderLink","itemProps","drawer","flexShrink","drawerOpen","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","drawerHeader","mixins","toolbar","drawerPaper","handleDrawerClose","showCollapse","setShowCollapse","Drawer","anchor","ChevronRight","ChevronLeft","Divider","BookRounded","LibraryBooksRounded","AddBoxRounded","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","pathname","useLocation","handleClick","ArrowDropDownRounded","FormControlLabel","control","Switch","darkMode","setDarkMode","typography","fontFamily","fontWeightLight","appBar","appBarShift","menuButton","hide","grow","flexGrow","navButton","shape","fade","white","sectionDesktop","sectionMobile","contentShift","easeOut","mainBody","drawerProps","AppBar","Toolbar","Menu","profileUsername","ProfileAvatarForm","ProfileAvatarImg","uploadBtn","ProfileAvatarBtnGrp","flexRow","flexColumn","ProfileAvatar","avatarLink","formData","FormData","append","accept","files","Avatar","htmlFor","style","PhotoCamera","ProfileCardStatDetail","cardsTotal","decksTotal","ProfileCardUpdateForm","userBday","InputLabelProps","shrink","uid","alert","confirmStatus","setConfirmStatus","isAuth","setTimeout","SearchListRender","searchLoading","PrivateRoute","rest","persist","render","location","from","prefersDarkMode","useMediaQuery","createMuiTheme","join","xs","sm","md","lg","xl","phones","responsiveFontSizes","factor","ThemeProvider","exact","configureStore","reducer","authReducer","cardsReducer","deckReducer","userReducer","searchReducer","ReactDOM","CssBaseline","store","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","j","Object","keys","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","nmd","paths","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"6BAAIA,E,6BCcIC,EAGAC,EAaEC,EAeAC,EA+DIC,E,sKClGd,EAPwBC,cAAiB,SAAoBC,EAAOC,GAChE,OAAO,gBAACC,EAAA,GAAD,QACCD,IAAKA,GACDD,EAFL,CAGCG,QAAS,CAAEC,MAAO,IAAKC,KAAM,WCAnCC,EAAeP,cACfQ,EAAiB,SAAAC,GAAG,OAAI,WAC1BF,EAAaG,QAAQC,cAAcF,KA0BvC,EAvB+B,SAACR,GAE5B,OACI,gBAAC,KAAD,CACIW,OAAK,EACLC,kBAAgB,EAChBC,SAAU,EACVC,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,oBAAqBC,EACrBjB,IAAKK,EACLa,OAAQ,SAACX,GAAD,OACR,gBAACY,EAAA,EAAD,CAAYC,QAASd,EAAeC,IAChC,gBAACc,EAAA,EAAD,SAGLtB,EAAMuB,W,oOFzBXC,EAHQC,EAAQ,MAGMC,OAAO,CAC/BC,QAAS,YACTxB,QAAS,MAuKPyB,GAhKElC,EAAQmC,KAAKC,MAAMC,aAAaC,QAAQ,qBAGxCrC,EAAY,GAaVC,EAAa,WACf,QAASF,GAcPG,EAAS,WACX,IAAMoC,EAAWrC,IACjBD,EAAUuC,SAAQ,SAAAC,GAAQ,OAAIA,EAASF,OAepC,CACHG,SA3CU,mCAAG,kFAET1C,EAFS,yCAGFA,GAHE,gCAMN,MANM,2CAAH,qDA4CVE,aACAyC,SAda,WAAiB,IAAhBC,EAAgB,uDAAT,KAEjBA,EACAP,aAAaQ,QAAQ,mBAAoB,IAAeD,IAExDP,aAAaS,WAAW,oBAE5B9C,EAAQ4C,EACRzC,KAOA4C,UA/Bc,SAACN,GACfxC,EAAU+C,KAAKP,IA+BfQ,YA3BgB,SAACR,GACjBxC,EAAY,IAAAA,GAAS,KAATA,GAAiB,SAAAiD,GAAS,OAAIA,IAAcT,QAwIzD,EAXI,CACHU,QAhFY,WAEZ,OAAgCC,cAASlB,EAAchC,cAAvD,eAAOqC,EAAP,KAAiBc,EAAjB,KAaA,OAXAC,gBAAU,WACN,IAAMC,EAAW,SAACC,GACdH,EAAYG,IAIhB,OADAtB,EAAca,UAAUQ,GACjB,WACHrB,EAAce,YAAYM,MAE/B,IAEIhB,GAkEPkB,kBA5DMrD,EAAa,mCAAG,sGAEK8B,EAAcQ,WAFnB,OAEZgB,EAFY,OAGd1D,EAHc,gBAGG0D,EAAWA,EAAQ,IAAU,IAClD5B,EAAc6B,SAASC,QAAQC,OAA/B,cAAyD7D,EACzD8B,EAAc6B,SAASC,QAAQC,OAA/B,OAAkD,mBALhC,2CAAH,qDAqDZ,CAACC,IA7CC,mCAAG,WAAOC,EAAKC,GAAZ,uFACF5D,IADE,WAGJ4D,EAHI,gCAIalC,EAAcgC,IAAIC,EAAK,CAACE,OAAQD,IAJ7C,cAIJE,EAJI,yBAKGA,GALH,uBAOSpC,EAAcgC,IAAIC,GAP3B,cAORG,EAPQ,yBAQDA,GARC,4CAAH,wDA6CIC,KAlCH,mCAAG,WAAOJ,EAAKC,GAAZ,uFACH5D,IADG,uBAEY0B,EAAcqC,KAAKJ,EAAKC,GAFpC,cAELE,EAFK,yBAGFA,GAHE,2CAAH,wDAkCSE,OA5BP,mCAAG,WAAOL,EAAKC,GAAZ,uFACL5D,IADK,uBAEU0B,EAAcuC,OAAON,EAAKC,GAFpC,cAEPE,EAFO,yBAGJA,GAHI,2CAAH,wDA4BeI,KAtBjB,mCAAG,WAAOP,EAAKC,GAAZ,uFACH5D,IADG,uBAEY0B,EAAcyC,IAAIR,EAAKC,GAFnC,cAELE,EAFK,yBAGFA,GAHE,2CAAH,wDAsBuBM,UAhBf,SAACC,GACf,IAAIC,EAAc,KAClB,GAAIC,SAASC,QAA8B,KAApBD,SAASC,OAE5B,IADA,IAAMC,EAAUF,SAASC,OAAOE,MAAM,KAC7BC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,OAC/BH,EAAS,MAAAC,EAAQE,IAAR,QAEf,GAAIH,EAAOK,UAAU,EAAGR,EAAKO,OAAS,KAAQP,EAAO,IAAM,CACvDC,EAAcQ,mBAAmBN,EAAOK,UAAUR,EAAKO,OAAS,IAChE,OAIZ,OAAON,KAWXS,MA5FU,SAACnF,GACXkC,EAAcS,SAAS3C,IA4FvBoF,OAxFW,WACXlD,EAAcS,SAAS,QA8FjBwC,EAAP,EAAOA,MAAOC,GAAd,EAAcA,OAAQjC,GAAtB,EAAsBA,QAASM,GAA/B,EAA+BA,iB,8OG9KtC,I,GAGM3B,GAHQC,EAAQ,MAGMC,OAAO,CAC/BC,QAAS,yBACTxB,QAAS,MAcA4E,IAAgBC,QAAiB,qBAAD,mCAAuB,WAAOC,EAAP,mFAAqBC,EAArB,EAAqBA,gBAArB,kBAGvC/B,GAAiBK,IAAI,2BAHkB,cAGxDI,EAHwD,yBAIrDA,EAASF,MAJ4C,oCAOxD,KAAIE,SAPoD,0CASjDsB,EAAgB,KAAItB,SAASF,OAToB,YAWjD,KAAIyB,QAX6C,0CAajDD,EAAgB,CAACE,iBAAiB,CAAC,6BAbc,yDAAvB,yDAkBhCC,IAAkBL,QAAiB,uBAAD,mCAAyB,WAAOC,EAAP,yFAAqBC,EAArB,EAAqBA,gBAAiBI,EAAtC,EAAsCA,SAAtC,WAG/CA,IAATC,EAHwD,EAGxDA,KAHwD,SAI3CpC,GAAiBa,KAAjB,oBAAmCuB,EAAK7B,KAAK8B,GAA7C,KAAoDP,GAJT,cAI5DrB,EAJ4D,yBAKzDA,EAASF,MALgD,oCAQ5D,KAAIE,SARwD,0CAUrDsB,EAAgB,KAAItB,SAASF,OAVwB,YAYrD,KAAIyB,QAZiD,0CAcrDD,EAAgB,CAACE,iBAAiB,CAAC,6BAdkB,yDAAzB,yDAmBlCK,IAAqBT,QAAiB,0BAAD,mCAA4B,WAAOC,EAAP,mFAAqBC,EAArB,EAAqBA,gBAArB,kBAGjD/B,GAAiBU,KAAK,iCAAkCoB,GAHP,cAGlErB,EAHkE,yBAI/DA,EAASF,MAJsD,oCAOlE,KAAIE,SAP8D,0CAS3DsB,EAAgB,KAAItB,SAASF,OAT8B,YAW3D,KAAIyB,QAXuD,0CAa3DD,EAAgB,CAACE,iBAAiB,CAAC,6BAbwB,yDAA5B,yDAkBrCM,IAAoBV,QAAiB,yBAAD,mCAA2B,WAAOC,EAAP,mFAAoBC,EAApB,EAAoBA,gBAApB,kBAG/C/B,GAAiBU,KAAK,gCAAiCoB,GAHR,cAGhErB,EAHgE,yBAI7DA,EAASF,MAJoD,oCAOhE,KAAIE,SAP4D,0CASzDsB,EAAgB,KAAItB,SAASF,OAT4B,YAWzD,KAAIyB,QAXqD,0CAazDD,EAAgB,CAACE,iBAAiB,CAAC,6BAbsB,yDAA3B,yDAkBpCO,IAAuBX,QAAiB,4BAAD,mCAA8B,WAAOC,EAAP,mFAAqBC,EAArB,EAAqBA,gBAArB,kBAGrD/B,GAAiBU,KAAK,wCAAyCoB,GAHV,cAGtErB,EAHsE,yBAInEA,EAASF,MAJ0D,oCAOtE,KAAIE,SAPkE,0CAS/DsB,EAAgB,CAACE,iBAAiB,CAAC,mBAT4B,YAW/D,KAAID,QAX2D,0CAa/DD,EAAgB,CAACE,iBAAiB,CAAC,6BAb4B,yDAA9B,yDAkBvCQ,IAAmBZ,QAAiB,wBAAD,mCAA0B,WAAOC,EAAP,mFAAqBC,EAArB,EAAqBA,gBAArB,kBAG7C1D,GAAcqC,KAAK,2CAA4CoB,GAHlB,cAG9DrB,EAH8D,yBAI3DA,EAASF,MAJkD,oCAO9D,KAAIE,SAP0D,0CASvDsB,EAAgB,CAACE,iBAAiB,CAAC,mBAToB,YAWvD,KAAID,QAXmD,0CAavDD,EAAgB,CAACE,iBAAiB,CAAC,6BAboB,yDAA1B,yDAmB1CS,IAAYC,QAAY,CAC1B3B,KAAK,OACL4B,aA3HiB,CACjBrC,KAAM,CACFsC,OAAQ,QACRC,MAAO,KACPC,aAAc,CACVC,gBAAiB,KACjBC,WAAY,QAsHpBC,SAAU,GACVC,eAAa,eACRvB,GAAcwB,WAAY,SAACC,EAAOrF,GAC/BqF,EAAM9C,K,oRAAN,EACIsC,OAAQ,UACL7E,EAAOsF,aAJT,SAOR1B,GAAc2B,UAAW,SAACF,GACvBA,EAAM9C,KAAKsC,OAAS,YARf,SAURX,GAAgBkB,WAAY,SAACC,EAAOrF,GACjCqF,EAAM9C,KAAKwC,aAAe/E,EAAOsF,QACjCD,EAAMR,OAAS,aAZV,SAcRX,GAAgBqB,UAAW,SAACF,GACzBA,EAAM9C,KAAKsC,OAAS,WAff,KAqBJW,GAAyB,SAAAH,GAAK,OAAIA,EAAMjB,KAAK7B,KAAKsC,QAClDY,GAAkB,SAAAJ,GAAK,OAAIA,EAAMjB,KAAK7B,KAAKuC,OAC3CY,GAAqB,SAAAL,GAAK,OAAIA,EAAMjB,KAAK7B,KAAKoD,UAC9CC,GAAuB,SAAAP,GAAK,OAAIA,EAAMjB,KAAK7B,KAAKwC,aAAaC,iBAC7Da,GAAkB,SAAAR,GAAK,OAAIA,EAAMjB,KAAK7B,KAAKwC,aAAaE,YAErE,GAAeP,GAAf,Q,yfC7JA,IAAMoB,IAAeC,QAAoB,CAErCC,SAAU,SAACC,GAAD,OAAUA,EAAK5B,IAEzB6B,aAAc,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,QAAQC,cAAcF,EAAEC,YAGhDzB,GAAekB,GAAaS,gBAAgB,CAC9CC,QAAS,OACT3B,OAAQ,QACR4B,MAAO,CACHC,WAAW,EACXC,QAAS,MAIJC,IAAa/C,QAAiB,mBAAD,mCAAqB,WAAOrB,EAAP,mFAAiBuB,EAAjB,EAAiBA,gBAAjB,kBAMtC/B,GAAiBK,IADxB,UAL6C,cAMvDI,EANuD,yBAOhDA,EAASF,MAPuC,oCAUnD,KAAIE,SAV+C,0CAY5CsB,EAAgB,CAACE,iBAAkB,8BAZS,YAc5C,KAAID,QAdwC,0CAgB5CD,EAAgB,CAACE,iBAAiB,4BAhBU,yDAArB,yDAqB7B4C,IAAahD,QAAiB,mBAAD,mCAAqB,WAAOrB,EAAP,qFAAiBsE,EAAjB,EAAiBA,SAAU/C,EAA3B,EAA2BA,gBAA3B,kBAItC/B,GAAiBU,KAAK,SAAUF,GAJM,cAIvDC,EAJuD,OAKvDqE,EAASC,GAAiB,CAACC,QAASvE,EAASF,KAAM0E,KAAM,YALF,kBAMhDxE,EAASF,MANuC,oCASnD,KAAIE,SAT+C,0CAW5CsB,EAAgB,KAAItB,SAASF,OAXe,YAa5C,KAAIyB,QAbwC,0CAe5CD,EAAgB,CAACE,iBAAiB,4BAfU,yDAArB,yDAoB7BiD,IAAarD,QAAiB,mBAAD,mCAAqB,WAAOrB,EAAP,6FAAgB2B,EAAhB,EAAgBA,SAAU2C,EAA1B,EAA0BA,SAAU/C,EAApC,EAAoCA,gBAApC,SAGnDzB,EAHmD,gBAGpCE,EAHoC,cAIjDR,GAAiBW,OAAOL,GAJyB,gBAKvC6B,IAATgD,EALgD,EAKhDA,MACHC,EAAcD,EAAME,SAAS7E,GACjCsE,EAASQ,GAAoB,CAACC,QAASH,KAPgB,kBAQhD5E,GARgD,sCAWnD,KAAIC,SAX+C,0CAa5CsB,EAAgB,KAAItB,SAASF,OAbe,YAe5C,KAAIyB,QAfwC,0CAiB5CD,EAAgB,CAACE,iBAAiB,4BAjBU,0DAArB,yDAsB7BuD,IAAW3D,QAAiB,iBAAD,mCAAmB,WAAOrB,EAAP,mGAAgBsE,EAAhB,EAAgBA,SAAU3C,EAA1B,EAA0BA,SAAUJ,EAApC,EAAoCA,gBAApC,SAI5CM,EAAmB7B,EAAnB6B,GAAIoD,EAAejF,EAAfiF,YACPnF,EAL+C,gBAKhC+B,EALgC,cAM9BrC,GAAiBa,KAAKP,EAAKmF,GANG,cAM/ChF,EAN+C,SAOnC0B,IAATgD,EAP4C,EAO5CA,MACHO,EAAWP,EAAME,SAAShD,GAC9ByC,EAASC,GAAiB,CAACW,WAAUV,QAASvE,EAASF,KAAM0E,KAAM,YAThB,kBAU5CxE,EAASF,MAVmC,sCAa/C,KAAIE,SAb2C,wBAe/CkF,QAAQC,IAAI,KAAInF,UAf+B,kBAgBxCsB,EAAgB,KAAItB,SAASF,OAhBW,YAkBxC,KAAIyB,QAlBoC,0CAoBxCD,EAAgB,CAACE,iBAAiB,4BApBM,0DAAnB,yDA8ClC4D,KArBqBhE,QAAiB,oBAAD,mCAAsB,WAAOrB,EAAP,mFAAiBuB,EAAjB,EAAiBA,gBAAjB,kBAKxC/B,GAAiBK,IADxB,UACiCG,GALc,cAKzDC,EALyD,yBAMlDA,EAASF,MANyC,oCASrD,KAAIE,SATiD,0CAY9CsB,EAAgB,KAAItB,SAASF,OAZiB,QAc9C,KAAIyB,SAEXD,EAAgB,CAACE,iBAAiB,2BAhBmB,yDAAtB,0DAqBxBU,QAAY,CAC3B3B,KAAM,QACN4B,gBACAM,SAAU,CACN4C,WADM,SACKzC,GACPS,GAAaiC,UAAU1C,GACvBA,EAAMR,OAAS,SAEnBmD,SALM,SAKG3C,GACLA,EAAMR,OAAS,UAGvBM,eAAa,iBACRyB,GAAWqB,SAAU,SAAC5C,GACnBA,EAAMmB,QAAU,cAFX,UAIRI,GAAWxB,WAAY,SAACC,EAAOrF,GAC5B8F,GAAaoC,WAAW7C,EAAOrF,EAAOsF,SACtCD,EAAMmB,QAAU,SAChBnB,EAAMR,OAAS,cAPV,UASRgC,GAAWzB,WAAY,SAACC,EAAOrF,GAC5B8F,GAAaqC,OAAO9C,EAAOrF,EAAOsF,aAV7B,UAYRkC,GAASpC,WAAY,SAACC,EAAOrF,GAC1B,IAAMoI,EAAS,CACX/D,GAAIrE,EAAOsF,QAAP,GACJ+C,QAAS,MACFrI,EAAOsF,UAGlBQ,GAAawC,UAAUjD,EAAO+C,OAnBzB,UAqBRlB,GAAW9B,WAAY,SAACC,EAAOrF,GAC5B8F,GAAayC,UAAUlD,EAAOrF,EAAOsF,aAtBhC,UAwBRsB,GAAWrB,UAAW,SAACF,GACpBA,EAAMmB,QAAU,YAzBX,OA8BV,GAMHV,GAAa0C,cAAa,SAAAnD,GAAK,OAAIA,EAAM8B,SAL9BsB,GADR,GACHC,UACYC,GAFT,GAEHC,WACWC,GAHR,GAGHC,UACaC,GAJV,GAIHC,YAIG,GAA+BnB,GAAWoB,QAAnCnB,GAAP,GAAOA,WAAYE,GAAnB,GAAmBA,SAEbkB,GAAoB,SAAC7D,GAAD,OAAWA,EAAM8B,MAAMtC,QAWxD,KATwCsE,SACpC,CAACV,KACD,SAACtB,GAAD,OAAWA,EAAMX,YAEc2C,SAC/B,CAACV,GAAgB,SAACpD,EAAO+D,GAAR,OAAmBA,KACpC,SAACjC,EAAOiC,GAAR,OAAmBjC,EAAMiC,GAAQC,YAGtBxB,GAAf,S,mNC/LA,I,GAiBMyB,GAAqB,SAACC,EAAQC,GAChC,IAD2C,EACvCC,EAAc,IAAI,KAAJ,CAAQF,GADiB,E,84BAAA,CAE1BC,GAF0B,IAE3C,2BAAyB,KAAhBE,EAAgB,QACrBD,EAAY7G,OAAO8G,IAHoB,8BAK3C,eAAWD,I,yaClBf,I,GAAME,IAAe5D,QAAoB,CAErCC,SAAU,SAAC4D,GAAD,OAAUA,EAAKvF,IAEzB6B,aAAc,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,QAAQC,cAAcF,EAAEC,YAGhDzB,GAAe+E,GAAapD,gBAAgB,CAC9CC,QAAS,OACT3B,OAAQ,QACRgF,WAAY,KACZpD,MAAO,CACHC,WAAW,EACXC,QAAS,MAIJmD,IAAajG,QAAiB,mBAAD,mCAAqB,WAAOrB,EAAP,mFAAiBuB,EAAjB,EAAiBA,gBAAjB,kBAKtC/B,GAAiBK,IADxB,cAJ6C,cAKvDI,EALuD,yBAMhDA,EAASF,MANuC,oCASnD,KAAIE,SAT+C,0CAW5CsB,EAAgB,CAAC4C,QAAS,8BAXkB,YAa5C,KAAI3C,QAbwC,0CAe5CD,EAAgB,CAAC4C,QAAS,sCAfkB,yDAArB,yDAoB7BoD,IAAalG,QAAiB,mBAAD,mCAAqB,WAAOrB,EAAP,mFAAgBuB,EAAhB,EAAgBA,gBAAhB,kBAItC/B,GAAiBU,KAAK,aAAcF,GAJE,cAIvDC,EAJuD,yBAKhDA,EAASF,MALuC,oCAQnD,KAAIE,SAR+C,0CAU5CsB,EAAgB,KAAItB,SAASF,OAVe,YAY5C,KAAIyB,QAZwC,0CAc5CD,EAAgB,CAACE,iBAAiB,4BAdU,yDAArB,yDAmB7B+F,IAAiBnG,QAAiB,uBAAD,mCAAyB,WAAOrB,EAAP,qFAAiBsE,EAAjB,EAAiBA,SAAU/C,EAA3B,EAA2BA,gBAA3B,SAG3DzB,EAH2D,oBAGxCE,EAHwC,cAIzDR,GAAiBW,OAAOL,GAJiC,cAK/DwE,EAASmD,GAAWzH,IAL2C,kBAMxDA,GANwD,oCAS3D,KAAIC,SATuD,wBAW3DkF,QAAQC,IAAI,KAAInF,UAX2C,kBAYpDsB,EAAgB,KAAItB,SAASF,OAZuB,YAcpD,KAAIyB,QAdgD,0CAgBpDD,EAAgB,CAACE,iBAAiB,4BAhBkB,yDAAzB,yDAqBjCiG,IAAkBrG,QAAiB,wBAAD,mCAA0B,WAAOrB,EAAP,mGAAgBsE,EAAhB,EAAgBA,SAAU/C,EAA1B,EAA0BA,gBAAiBI,EAA3C,EAA2CA,SAA3C,SAI1DgG,EAAiB3H,EAAjB2H,OAAQhD,EAAS3E,EAAT2E,MAJkD,EAKjDhD,IAATiG,EAL0D,EAK1DA,MACHC,EAAWD,EAAM/C,SAAS8C,GAAQnH,KAClCT,EAAO,CAACS,KAAMqH,EAAUC,eAAgBnD,GAPqB,SAQhDnF,GAAiBa,KAAjB,oBAAmCsH,EAAnC,KAA8C5H,GARE,cAQjEE,EARiE,OASjEqE,EAASkB,MACTlB,EAASF,MAVwD,kBAW1DnE,EAASF,MAXiD,sCAc7D,KAAIE,SAdyD,0CAgBtDsB,EAAgB,KAAItB,SAASF,OAhByB,YAkBtD,KAAIyB,QAlBkD,0CAoBtDD,EAAgB,CAACE,iBAAiB,4BApBoB,0DAA1B,yDAyBzCsG,IAAa5F,QAAY,CAC3B3B,KAAM,QACN4B,gBACAM,SAAU,CACNsF,WADM,SACKnF,GACPsE,GAAa5B,UAAU1C,GACvBA,EAAMR,OAAS,SAEnBoF,WALM,SAKK5E,EAAOrF,GAAQ,MAClByK,EAAYzK,EAAOsF,QACnBoF,EAAW,OAAArF,EAAMsF,KAAN,QAAoB,SAACR,GAAD,OAAYA,IAAWM,KAEtDpF,EAAMwE,aAAe7J,EAAOsF,UACxBoF,EAAW,GAAKrF,EAAMsF,IAAIpH,OAAS,EACnC8B,EAAMwE,WAAaxE,EAAMsF,IAAID,EAAW,GAEtB,IAAbA,GAAkBrF,EAAMsF,IAAIpH,OAAS,EAAK8B,EAAMwE,WAAaxE,EAAMsF,IAAID,EAAW,GACrFrF,EAAMwE,WAAa,MAE7BF,GAAapB,UAAUlD,EAAOrF,EAAOsF,UAEzCsF,iBAlBM,SAkBWvF,EAAOrF,GACpBqF,EAAMwE,WAAa7J,EAAOsF,SAE9ByB,iBArBM,SAqBW1B,EAAOrF,GACpB,IAAI0H,EAAW1H,EAAOsF,QAAP,SAA6BtF,EAAOsF,QAAP,SAA6B,GACrE0B,EAAUhH,EAAOsF,QAAP,QAA4BtF,EAAOsF,QAAP,QAA4B,GAGtE,GAAmB,WAFFtF,EAAOsF,QAAP,KAEY,OACrBuF,EAAgB,OAAAnD,EAAS2B,UAAT,QACLC,GAAmBuB,EAAe7D,EAAQqC,UAChDtI,SAAQ,SAAAoJ,GAAU,MACnBW,EAAS,MAAAzF,EAAMgC,SAAS8C,GAAQG,gBAAvB,QAA6C,SAAAS,GAAM,OAAIA,IAAWrD,EAASrD,MACxFgB,EAAMgC,SAAS8C,GAAQG,eAAiBQ,KAIhD9D,EAAQqC,SAAStI,SAAQ,SAAAoJ,GAAU,MAC3B,OAAA9E,EAAMgC,SAAS8C,GAAQG,gBAAvB,OAA+CtD,EAAQ3C,KAC3DgB,EAAMgC,SAAS8C,GAAQG,eAAe/I,KAAKyF,EAAQ3C,QAG3DiD,oBAxCM,SAwCcjC,EAAOrF,GAAQ,MAC3BoH,EAAcpH,EAAOsF,QAAP,QACZ0F,EAAgB5D,EAAW,GACR,OAAAA,EAAYiC,UAAZ,QAERtI,SAAQ,SAAAoJ,GAAU,MAC3BW,EAAS,MAAAzF,EAAMgC,SAAS8C,GAAQG,gBAAvB,QAA6C,SAAAS,GAAM,OAAIA,IAAWC,KAC/E3F,EAAMgC,SAAS8C,GAAQG,eAAiBQ,OAIpD3F,eAAa,iBACR2E,GAAW7B,SAAU,SAAC5C,GACnBA,EAAMmB,QAAU,cAFX,UAIRsD,GAAW1E,WAAY,SAACC,EAAOrF,GAC5B2J,GAAazB,WAAW7C,EAAOrF,EAAOsF,SACtCD,EAAMmB,QAAU,SAChBnB,EAAMR,OAAS,cAPV,UASRiF,GAAWvE,UAAW,SAACF,GACpBA,EAAMmB,QAAU,aAVX,UAYRuD,GAAW3E,WAAY,SAACC,EAAOrF,GAC5B2J,GAAaxB,OAAO9C,EAAOrF,EAAOsF,aAb7B,UAeR4E,GAAgB9E,WAAY,SAACC,EAAOrF,GACjC,IAAMoI,EAAS,CACX/D,GAAIrE,EAAOsF,QAAP,GACJ+C,QAAS,MACFrI,EAAOsF,UAGlBqE,GAAarB,UAAUjD,EAAO+C,MAtBzB,MA2BV,GAMHuB,GAAanB,cAAa,SAAAnD,GAAK,OAAIA,EAAM+E,SAL9Ba,GADR,GACHvC,UACYwC,GAFT,GAEHtC,WACWuC,GAHR,GAGHrC,UACasC,GAJV,GAIHpC,YAGSqC,GAAoB,SAAChG,GAAD,OAAWA,EAAM+E,MAAMvF,QAC3CyG,GAAmB,SAACjG,GAAD,OAAWA,EAAM+E,MAAMP,YAOhD,GAA0FU,GAAWtB,QAA9F2B,GAAP,GAAOA,iBAAkBtD,GAAzB,GAAyBA,oBAAqBP,GAA9C,GAA8CA,iBAAkBkD,GAAhE,GAAgEA,WAAYO,GAA5E,GAA4EA,WAEnF,GAAeD,GAAf,QCzMMgB,GAAQjL,EAAQ,MAQTkL,IAAY3H,QAAiB,iBAAD,mCAAmB,WAAOC,EAAP,uFAAoBgD,EAApB,EAAoBA,SAAU/C,EAA9B,EAA8BA,gBAEhF0H,EAAc3H,EAFoC,kBAI/ByH,GAAM7I,KAAK,+BAAgC+I,GAJZ,cAIhDhJ,EAJgD,OAKpDqE,EAAS4E,GAAajJ,EAASF,OAC/BmB,EAAMjB,EAASF,MACfuE,EAASlD,MAP2C,kBAQ7CnB,EAASF,MARoC,sCAWhD,KAAIE,SAX4C,0CAazCsB,EAAgB,KAAItB,SAASF,OAbY,YAezC,KAAIyB,QAfqC,0CAiBzCD,EAAgB,CAACE,iBAAiB,4BAjBO,0DAAnB,yDAuB5B0H,IAAa9H,QAAiB,kBAAD,mCAAoB,WAAOC,EAAP,iFAAqBgD,EAArB,EAAqBA,SAArB,SACpD9E,GAAiBU,KAAK,wBAD8B,OAE1DiB,KACAmD,EAAS8E,MACT9E,EAASgB,MACThB,EAAS0D,MALiD,2CAApB,yDAQ7BqB,IAAahI,QAAiB,kBAAD,mCAAoB,WAAOC,EAAP,uFAAoBgD,EAApB,EAAoBA,SAAU/C,EAA9B,EAA8BA,gBAElF0D,EAAc3D,EAFsC,kBAIjCyH,GAAM7I,KAAK,6BAA8B+E,GAJR,cAIlDhF,EAJkD,OAKtDqE,EAAS4E,GAAajJ,EAASF,OAC/BmB,EAAMjB,EAASF,MACfuE,EAASlD,MAP6C,kBAQ/CnB,EAASF,MARsC,sCAWlD,KAAIE,SAX8C,0CAa3CsB,EAAgB,KAAItB,SAASF,OAbc,YAe3C,KAAIyB,QAfuC,0CAiB3CD,EAAgB,CAACE,iBAAiB,CAAC,6BAjBQ,0DAApB,yDAuBpC6H,IAAsBnH,QAAY,CACpC3B,KAAM,OACN4B,aA9DiB,CACjBrG,MAAO,KACPwN,eAAe,EACfvF,QAAS,QA4DTtB,SAAU,CACNwG,aADM,SACOrG,EAAOrF,GAChBqF,EAAM9G,MAAQyB,EAAOsF,QAAP,IACdD,EAAM0G,eAAgB,GAE1BH,eALM,SAKSvG,GACXA,EAAM9G,MAAQ,KACd8G,EAAM0G,eAAgB,IAG9B5G,eAAa,iBACRqG,GAAUvD,SAAU,SAAC5C,GAClBA,EAAMmB,QAAU,cAFX,UAIRgF,GAAUQ,YAAa,SAAC3G,GACrBA,EAAMmB,QAAU,aALX,UAORqF,GAAWzG,WAAY,SAACC,GACrBA,EAAMmB,QAAU,YARX,MAeJyF,GAAqB,SAAC5G,GAAD,OAAWA,EAAM6G,KAAKH,eAEjD,GAAuCD,GAAoB7C,QAApD2C,GAAP,GAAOA,eAAgBF,GAAvB,GAAuBA,aAE9B,GAAeI,GAAf,Q,mFCvFMK,IAAYC,QAAW,SAACC,GAAD,cAAY,CACrCC,WAAY,CACRC,QAAS,QAEbC,KAAM,CACFD,QAAS,OACTE,aAAc,SACdC,aAAc,aACdC,UAAW,mBAAF,OAAqBN,EAAMO,QAAQC,KAAKC,SACjDC,aAAc,MACdC,OAAQ,OACRC,QAAS,YACTC,UAAW,UACXC,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1CC,MAAOjB,EAAMO,QAAQC,KAAKC,SAE9BS,gBAAiB,CACbC,SAAU,OACVb,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDW,WAAY,SACZL,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUC,KAHpB,YAIVZ,aAAc,MACdC,OAAQ,cACRC,QAAS,cACTW,UAAW,SACXrB,QAAS,OACTsB,cAAe,UAEnBC,YAAa,CACTN,SAAU,MACVb,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDW,WAAY,SACZL,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUC,KAHpB,YAIVZ,aAAc,MACdC,OAAQ,cACRC,QAAS,cACTW,UAAW,SACXrB,QAAS,OACTsB,cAAe,SACfE,eAAgB,gBAEpBC,UAAW,CACPC,UAAW5B,EAAM6B,QAAQ,IAE7BC,aAAc,CACVnB,OAAQX,EAAM6B,QAAQ,GACtBZ,MAAOjB,EAAMO,QAAQwB,QAAQT,KAC7BU,YAAahC,EAAMO,QAAQwB,QAAQT,UA0BrCW,GAAqB,WAGvB,IAAMxH,GAAWyH,UAEXC,EAAUrC,KAERsC,GAAoBC,UAApBD,gBAGFE,GAASC,SAAU,CACrBC,cAAe,CACXC,aAAc,GACdC,cAAe,GACfC,cAAe,IAEnBC,SAAU,SAACC,EAAQC,GACfrI,EAASxC,GAAmB4K,IACvBE,MAAK,SAACC,GACH,GAAkC,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,gCAAiC,CAC7Ce,QAAS,gBAEV,CACH,MAGIH,EAAO/J,QAFPwJ,EADJ,EACIA,aAAcC,EADlB,EACkBA,cACdC,EAFJ,EAEIA,cAAe/K,EAFnB,EAEmBA,iBAEnBkL,EAAUM,UAAU,CAChBX,aAAcA,EAAeA,EAAaY,WAAY,GACtDX,cAAeA,EAAgBA,EAAcW,WAAY,GACzDV,cAAeA,EAAgBA,EAAcU,WAAY,GACzDzL,iBAAkBA,EAAmBA,EAAiByL,WAAY,KAEtEjB,EAAgB,0BAA2B,CACvCe,QAAS,UAGjBL,EAAUQ,eAAc,OAGpCC,iBAAkBC,MAAW,CACzBf,aAAce,QAAaC,SAAS,YACpCf,cAAec,QAAaC,SAAS,YACrCd,cAAea,QAAaC,SAAS,gBAI7C,OACI,gCACI,wBAAMC,UAAWvB,EAAQV,YAAamB,SAAUN,EAAOqB,cACnD,gBAACC,EAAA,EAAD,CACI5L,GAAG,4BACHrB,KAAK,eACLkN,MAAM,eACNjJ,KAAK,WACLkJ,aAAa,mBACbX,QAAQ,WACRxC,OAAO,QACPM,MAAM,YACN7G,QAASkI,EAAOyB,OAAOtB,aACvBuB,WAAY1B,EAAOyB,OAAOtB,aAC1BwB,MAAO,IAAA3B,GAAcG,aACrByB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACI5L,GAAG,6BACHrB,KAAK,gBACLkN,MAAM,eACNjJ,KAAK,WACLkJ,aAAa,eACbX,QAAQ,WACRxC,OAAO,QACPM,MAAM,YACN7G,QAASkI,EAAOyB,OAAOrB,cACvBsB,WAAY1B,EAAOyB,OAAOrB,cAC1BuB,MAAO,IAAA3B,GAAcI,cACrBwB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACI5L,GAAG,6BACHrB,KAAK,gBACLkN,MAAM,qBACNjJ,KAAK,WACLkJ,aAAa,eACbX,QAAQ,WACRxC,OAAO,QACPM,MAAM,YACN7G,QAASkI,EAAOyB,OAAOpB,cACvBqB,WAAY1B,EAAOyB,OAAOpB,cAC1BsB,MAAO,IAAA3B,GAAcK,cACrBuB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAAC,IAAD,CAAQlB,QAAQ,YACZtP,QAASyO,EAAOqB,aAChBhD,OAAO,QACP+C,UAAWvB,EAAQR,UACnB2C,SAAUhC,EAAOiC,cAJrB,sBAaVC,GAAuB,WAEzB,IAAM/J,GAAWyH,UACXuC,GAAYC,QAAYtL,IAE9B,EAAwB7G,YAAe,GAAvC,eAAOoS,EAAP,KAAaC,EAAb,KAEQxC,GAAoBC,UAApBD,gBAEFD,EAAUrC,KAEVwC,GAASC,SAAU,CACrBC,cAAe,CACX/J,MAAOgM,GAAwB,IAEnC7B,SAAU,SAACC,EAAQC,GACfrI,EAASvC,GAAkB2K,IACtBE,MAAK,SAACC,GACH,GAAkC,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,6BAA8B,CAC1Ce,QAAS,YAEbyB,GAAQ,OACL,CACH,MAEI5B,EAAO/J,QADPR,EADJ,EACIA,MAAOb,EADX,EACWA,iBAEXkL,EAAUM,UAAU,CAChB3K,MAAOA,EAAQA,EAAM4K,WAAY,GACjCzL,iBAAkBA,EAAmBA,EAAiByL,WAAY,KAEtEjB,EAAgB,SAAD,OAAUxK,EAAiByL,YAAc,CACpDF,QAAS,UAGjBL,EAAUQ,eAAc,SASlCuB,EAAc,WAChBD,GAAQ,IAGZ,OACI,gCACI,gBAACE,EAAA,EAAD,CACIC,UAAU,SACV5B,QAAQ,YACRtP,QAbY,WACpB+Q,GAAQ,IAaAlB,UAAWvB,EAAQR,UACnBV,MAAM,WALV,2DASA,gBAAC+D,GAAA,EAAD,CAAQL,KAAMA,EAAMM,QAASJ,EAAaK,kBAAgB,8BACtD,gBAACC,GAAA,EAAD,CAAanN,GAAG,8BAAhB,kBACA,gBAACoN,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,+EAGA,gBAACzB,EAAA,EAAD,CACI0B,WAAS,EACTrE,MAAM,YACNtK,KAAK,QACLgK,OAAO,QACP3I,GAAG,YACH6L,MAAM,gBACNjJ,KAAK,QACLsJ,SAAU5B,EAAO6B,aACjBoB,aAAc,IAAAjD,GAAc7J,MAC5B+M,WAAS,KAGjB,gBAACC,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASgR,EAAanB,UAAWvB,EAAQL,cAAjD,UAGA,gBAAC,IAAD,CAAQjO,QAASyO,EAAOqB,aAAc1C,MAAM,WAA5C,qBASpB,GA9N6B,WAGzB,IAAMkB,EAAUrC,KAEV4F,GAAmBhB,QAAYvL,IAC/BsB,GAAWyH,UAQjB,OANA3P,aAAgB,WACa,UAArBmT,GACAjL,EAASlD,QAEd,CAACmO,EAAkBjL,IAGlB,uBAAKiJ,UAAWvB,EAAQhC,MACpB,gBAAC8B,GAAD,MACA,gBAACuC,GAAD,Q,YCxEN1E,I,UAAYC,QAAW,SAACC,GAAD,YAAY,CACrC2F,KAAM,CACJzF,QAAS,OACTsB,cAAe,SACfE,eAAgB,SAChBN,WAAY,UAEdjB,KAAM,CACFD,QAAS,OACTsB,cAAe,SACfoE,MAAO,MACPtF,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDM,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUwE,MAHpB,YAIVnF,aAAc,MACdE,QAASZ,EAAM6B,QAAQ,IAE3BiE,WAAY,CACRnF,OAAQX,EAAM6B,QAAQ,IAE1BkE,cAAe,CACX7F,QAAS,OACT8F,SAAU,OACV5E,WAAY,SACZT,OAAQX,EAAM6B,QAAQ,GACtBoE,SAAU,YAEdC,eAAgB,CACZjF,MAAOjB,EAAMO,QAAQc,UAAUC,KAC/B2E,SAAU,WACVE,IAAK,OACLC,KAAM,OACNxE,WAAY,EACZyE,YAAa,EACbC,OAAQ,QA6HhB,GAzHkB,SAAC9T,GAEf,IAAI+T,EAAkBlR,KAEd+M,GAAoBC,UAApBD,gBAEF3H,GAAWyH,UAEXsE,GAAUC,UAEVtE,EAAUrC,KAEhBvN,aAAgB,WACRgU,GACAC,EAAQE,QAAQ,YAEtB,CAACH,IAEH,IAAMjE,GAASC,SAAU,CACrBC,cAAc,CAAClJ,SAAU,GAAIqN,SAAU,IACvC/D,SAAU,SAACC,EAAQC,GACfrI,EAAS0E,GAAU0D,IAClBE,MAAK,SAACC,GACH,GAAkC,aAA9BA,EAAOC,KAAKC,cAA8B,CAC1C,MAGIF,EAAO/J,QAFPK,EADJ,EACIA,SAAUqN,EADd,EACcA,SACV/O,EAFJ,EAEIA,iBAGJkL,EAAUM,UAAU,CAChB9J,SAAUA,EAAWA,EAAS+J,WAAa,sBAC3CsD,SAAUA,EAAWA,EAAStD,WAAa,wBAE/CjB,EAAgBxK,EAAmBA,EAAiByL,WAAY,sBAAuB,CACnFF,QAAS,UAEbL,EAAUQ,eAAc,QAIpCC,iBAAkBC,MAAW,CACzBlK,SAAUkK,QACToD,IAAI,EAAG,kCACPnD,SAAS,gBAGlB,OACI,gCACA,gBAAC,KAAD,CAAWC,UAAWvB,EAAQwD,KAAMkB,OAAK,GACrC,gBAACC,EAAA,EAAD,CAAY3D,QAAQ,KAAKO,UAAWvB,EAAQ2D,YAA5C,uBACA,gBAACgB,EAAA,EAAD,CAAY3D,QAAQ,YAAYO,UAAWvB,EAAQ2D,YAAnD,sCAAkG,gBAAChB,EAAA,EAAD,CAAMiC,KAAK,UAAU9F,MAAM,WAA3B,QAAlG,4BACA,wBAAM+F,YAAU,EAACtD,UAAWvB,EAAQhC,KAAMyC,SAAUN,EAAOqB,cACvD,gBAACC,EAAA,EAAD,CACIjN,KAAK,WACLkN,MAAM,WACN7L,GAAG,cACH2I,OAAO,QACPM,MAAM,YACN6C,aAAa,WACb1J,QAASkI,EAAOyB,OAAOzK,SACvB0K,aAAc1B,EAAOyB,OAAOzK,UAAYgJ,EAAOyB,OAAOzK,SACtDkM,WAAS,EACTvB,MAAO,IAAA3B,GAAchJ,SACrB4K,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIjN,KAAK,WACLkN,MAAM,WACNjJ,KAAK,WACL5C,GAAG,cACH2I,OAAO,QACPM,MAAM,YACNuE,WAAS,EACT1B,aAAa,mBACb1J,QAASkI,EAAOyB,OAAO4C,SAEvBzC,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,uBAAKX,UAAWvB,EAAQ4D,eACpB,gBAAC,IAAD,CACI5C,QAAQ,YACRlC,MAAM,UACNrG,KAAK,SACL0J,SAAUhC,EAAOiC,aACjBb,UAAWvB,EAAQ2D,WACnBnF,OAAO,SANX,SAUA,gBAACmG,EAAA,EAAD,CAAY3D,QAAQ,QAAQO,UAAWvB,EAAQ2D,YAA/C,QACCxD,EAAOiC,cAAgB,gBAAC0C,EAAA,EAAD,CAAkBC,KAAM,GAAIxD,UAAWvB,EAAQ+D,mBAG/E,gBAAC1B,GAAD,SC3IN1E,IAAYC,QAAW,SAACC,GAAD,YAAY,CACrC2F,KAAM,CACJzF,QAAS,OACTG,aAAc,SACde,WAAY,SACZI,cAAe,SACfE,eAAgB,UAElBvB,KAAM,CACFD,QAAS,OACTsB,cAAe,SACfoE,MAAO,MACPtF,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDM,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUwE,MAHpB,YAIVnF,aAAc,MACdE,QAASZ,EAAM6B,QAAQ,IAE3BiE,WAAY,CACRnF,OAAQX,EAAM6B,QAAQ,IAE1BkE,cAAe,CACXpF,OAAQX,EAAM6B,QAAQ,GACtBoE,SAAU,YAEdC,eAAgB,CACZjF,MAAOjB,EAAMO,QAAQc,UAAUC,KAC/B2E,SAAU,WACVE,IAAK,MACLC,KAAM,MACNxE,WAAY,GACZyE,YAAa,QAqPrB,GAjPmB,SAAC7T,GAEhB,IAAMiI,GAAWyH,UAEXC,EAAUrC,KAERsC,GAAoBC,UAApBD,gBAEFE,GAASC,SAAU,CACrBC,cAAe,CAAElJ,SAAU,GAAI6N,UAAW,GAAIC,UAAW,GAAI3O,MAAO,IACpEmK,SAAU,SAACC,EAAQC,GACfrI,EAAS+E,GAAWqD,IACnBE,MAAK,SAACC,GACH,GAAkC,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,+BAAgC,CAC5Ce,QAAS,YAEbkE,mBAAkB,OACf,CACHA,mBAAkB,GAClB,MAGIrE,EAAO/J,QAFPK,EADJ,EACIA,SAAU6N,EADd,EACcA,UACVC,EAFJ,EAEIA,UAAW3O,EAFf,EAEeA,MAAOb,EAFtB,EAEsBA,iBAEtBkL,EAAUM,UAAU,CAChB9J,SAAUA,EAAWA,EAAS+J,WAAY,GAC1C8D,UAAWA,EAAYA,EAAU9D,WAAY,GAC7C+D,UAAWA,EAAYA,EAAU/D,WAAY,GAC7C5K,MAAOA,EAAQA,EAAM4K,WAAY,GACjCzL,iBAAkBA,EAAmBA,EAAiByL,WAAY,KAEtEjB,EAAgBxK,EAAmBA,EAAiByL,WAAa,mBAAoB,CACjFF,QAAS,UAGjBL,EAAUQ,eAAc,OAGhCC,iBAAkBC,MAAW,CACzBlK,SAAUkK,QACP8D,IAAI,GAAI,iCACRV,IAAI,EAAG,kCACPnD,SAAS,YACZ0D,UAAW3D,QACRC,SAAS,YACZ2D,UAAW5D,QACRC,SAAS,YACZhL,MAAO+K,QAAa/K,MAAM,yBAAyBgL,SAAS,gBAIpE,OACI,gCACA,gBAAC,KAAD,CAAWC,UAAWvB,EAAQwD,KAAMkB,OAAK,GACrC,gBAACC,EAAA,EAAD,CAAY3D,QAAQ,KAAKO,UAAWvB,EAAQ2D,YAA5C,mCACA,wBAAMkB,YAAU,EAACtD,UAAWvB,EAAQhC,KAAMyC,SAAUN,EAAOqB,cACvD,gBAACC,EAAA,EAAD,CACIjN,KAAK,WACLkN,MAAM,WACN7L,GAAG,cACH2I,OAAO,QACPM,MAAM,YACN6C,aAAc,WACd1J,QAASkI,EAAOyB,OAAOzK,YAAcgJ,EAAOiF,QAAQjO,SACpD0K,aAAc1B,EAAOyB,OAAOzK,YAAcgJ,EAAOiF,QAAQjO,UAAYgJ,EAAOyB,OAAOzK,SACnFkM,WAAS,EACTvB,MAAO,IAAA3B,GAAchJ,SACrB4K,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIjN,KAAK,QACLkN,MAAM,QACN7L,GAAG,WACH2I,OAAO,QACPM,MAAM,YACN6C,aAAc,QACd1J,QAASkI,EAAOyB,OAAOtL,SAAW6J,EAAOiF,QAAQ9O,MACjDuL,aAAc1B,EAAOyB,OAAOtL,SAAW6J,EAAOiF,QAAQ9O,OAAS6J,EAAOyB,OAAOtL,MAC7E+M,WAAS,EACTvB,MAAO,IAAA3B,GAAc7J,MACrByL,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIjN,KAAK,YACLkN,MAAM,WACNjJ,KAAK,WACL5C,GAAG,eACH2I,OAAO,QACPM,MAAM,YACN6C,aAAc,eACd1J,QAASkI,EAAOyB,OAAOoD,aAAe7E,EAAOiF,QAAQJ,UACrDnD,aAAc1B,EAAOyB,OAAOoD,aAAe7E,EAAOiF,QAAQJ,WAAa7E,EAAOyB,OAAOoD,UACrFjD,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIjN,KAAK,YACLkN,MAAM,mBACNjJ,KAAK,WACL5C,GAAG,eACH2I,OAAO,QACPM,MAAM,YACN6C,aAAc,eACd1J,QAASkI,EAAOyB,OAAOqD,aAAe9E,EAAOiF,QAAQH,UACrDpD,aAAc1B,EAAOyB,OAAOqD,aAAe9E,EAAOiF,QAAQH,WAAa9E,EAAOyB,OAAOqD,UACrFlD,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,uBAAKX,UAAWvB,EAAQ4D,eACpB,gBAAC,IAAD,CACI5C,QAAQ,YACRlC,MAAM,UACNrG,KAAK,SACL/G,QAASyO,EAAOqB,aAChBW,SAAUhC,EAAOiC,aACjBb,UAAWvB,EAAQ2D,YANvB,WAUCxD,EAAOiC,cAAgB,gBAAC0C,EAAA,EAAD,CAAkBC,KAAM,GAAIxD,UAAWvB,EAAQ+D,sB,YCnKrFpG,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCwH,YAAa,CACT5G,QAAS,YACTV,QAAS,OACTsB,cAAe,SACfwE,SAAU,SACVtF,aAAc,QAElB+G,UAAW,CACP7G,QAAS,cACT8G,OAAQ,eAAF,OAAiB1H,EAAMO,QAAQc,UAAUsG,MAC/CjH,aAAc,OACdkH,aAAc5H,EAAM6B,QAAQ,IAEhCgG,MAAO,CACH3H,QAAS,OACTsB,cAAe,SACfwE,SAAU,UAEd8B,YAAY,QACR5H,QAAS,OACT6H,oBAAqB,WACrB3G,WAAY,aACZ4G,IAAK,OACJhI,EAAMiI,YAAYC,QAAQ,MAAO,OAAS,CACvCH,oBAAqB,OACrBI,iBAAkB,SAG1BC,eAAe,QACXlI,QAAS,OACTsB,cAAe,SACfwE,SAAU,SACVlF,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1C0G,OAAQ,aAAF,OAAe1H,EAAMO,QAAQc,UAAUwE,OAC7CnF,aAAc,QACbV,EAAMiI,YAAYC,QAAQ,MAAO,OAAS,CACvCG,UAAW,UAGnBC,WAAY,CACRpI,QAAS,OACT8F,SAAU,QAEduC,SAAU,CACNrI,QAAS,OACT8F,SAAU,OACV4B,aAAc5H,EAAM6B,QAAQ,IAEhC2G,cAAe,CACX5C,MAAO,OACP6C,YAAa,OACbpC,WAAY,OACZnG,QAAS,OACT6H,oBAAqB,WACrB3G,WAAY,aACZ4G,IAAK,WAIPU,GAAiB,SAAClW,GAEpB,IAAM2P,EAAUrC,KAEVvC,EAAO/K,EAAM+K,KAEboL,EAAWnW,EAAMmW,SAEjB7N,EAAQtI,EAAMsI,MAEd8N,EAASpW,EAAMoW,OAEfC,GAAiBnE,QAAYzF,IAEnC,OACI,uBAAKyE,UAAWvB,EAAQqF,aACpB,uBAAK9D,UAAWvB,EAAQsF,WACnBjV,EAAMsW,OAEVhO,GACD,uBAAK4I,UAAWvB,EAAQmG,YACnB9V,EAAMuW,MAGVH,GACD,uBAAKlF,UAAWvB,EAAQmG,YACnB9V,EAAMwW,YAGTzL,GACF,uBAAKmG,UAAWvB,EAAQ0F,OACpB,gBAACoB,GAAA,EAAD,CAAWzV,YAAU,EAACkQ,UAAWvB,EAAQoG,UACpC/V,EAAM+V,UAEX,uBAAK7E,UAAWvB,EAAQ2F,YACnBe,GACG,uBAAKnF,UAAWvB,EAAQiG,eACnBO,GAGT,uBAAKjF,UAAWvB,EAAQmG,YACnB9V,EAAMuL,WASzBmL,GAAkB,SAAC1W,GAErB,IAAM2P,EAAUrC,KAEhB,OACI,uBAAK4D,UAAWvB,EAAQqG,eACpB,uBAAK9E,UAAWvB,EAAQgH,gBACnB3W,EAAMsW,OAEX,uBAAKpF,UAAWvB,EAAQiH,iBACnB5W,EAAM6W,W,YCzHjBvJ,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCsJ,SAAU,CACRxI,gBAAiBd,EAAMO,QAAQE,QAAQa,UAIvCiI,GAAiB,SAAC/W,GAEpB,IAAM2P,EAAUrC,KAEhB,OACI,gBAAC0J,GAAA,EAAD,CAAU7E,MAAM,EAAM1D,MAAM,UAAUyC,UAAWvB,EAAQmH,UACrD,gBAACrC,EAAA,EAAD,CAAkBhG,MAAM,gBAMpC,GAAe1O,cAAiB,SAACC,EAAOC,GAAR,OAAgB,gBAAC8W,IAAD,UAAoB/W,EAApB,CAA2BiX,aAAchX,Q,yaCdzF,IAAMqN,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrC0J,aAAc,CACV9D,MAAO,OACPgC,aAAc5H,EAAM6B,QAAQ,GAC5B3B,QAAS,OACTiI,iBAAkB,OAClBH,IAAK,OAET2B,qBAAsB,CAClBzJ,QAAS,QAEb0J,WAAY,CACRjJ,OAAQX,EAAM6B,QAAQ,IAE1BgI,aAAc,CACVlJ,OAAQX,EAAM6B,QAAQ,GACtBZ,MAAOjB,EAAMO,QAAQwB,QAAQT,KAC7BU,YAAahC,EAAMO,QAAQwB,QAAQT,UAsGrCwI,GAAmB,SAACtX,GACtB,IAAOsW,EAAStW,EAATsW,MAEP,OACI,gBAAC,IAAD,CAAQjV,QAAS,kBAAMiV,EAAMiB,cAAa,SAAC/Q,GAAD,OAAYA,MAClDmK,QAAQ,WACRlC,MAAM,aAAa6H,EAAMkB,UAAY,QAAU,WAI3D,GA1GwB,WAGpB,IAWY,EAXZ,GAAkC1U,eAAS,GAA3C,eAAO0U,EAAP,KAAkBD,EAAlB,KAEMtP,GAAWyH,UAETE,GAAoBC,UAApBD,gBAEFE,GAASC,SAAU,CACrBC,cAAe,CACXyH,MAAO,GACPC,QAAS,IAEbtH,UAAQ,oBAAE,WAAOC,GAAP,uEAEe,KAAjBA,EAAOoH,cACApH,EAAOoH,MAEZ7O,EALA,MAMCyH,GAEPpI,EAASD,GAAWY,IACf2H,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,eACZZ,EAAO6H,cACPJ,GAAa,GACb3H,EAAgB,eAAgB,CAC5Be,QAAS,aAGbf,EAAgB,sBAAuB,CACnCe,QAAS,aAlBnB,2CAAF,+CAyBNhB,EAAUrC,KAShB,OACI,gBAAC,GAAD,CACIgJ,MACI,wBAAMpF,UAAWvB,EAAQuH,aAAc5F,aAAa,MAAMkD,YAAU,EAACpE,SAAUN,EAAOqB,cACjFqG,GACD,gBAACpG,EAAA,EAAD,CACI5L,GAAG,cACHrB,KAAK,QACLkN,MAAM,QACNV,QAAQ,WACRlC,MAAM,YACNiD,SAAU5B,EAAO6B,aACjBxD,OAAO,UAEX,gBAACiD,EAAA,EAAD,CAAW5L,GAAG,gBACVrB,KAAK,UACLkN,MAAM,WACNV,QAAQ,WACRlC,MAAM,YACNiD,SAAU5B,EAAO6B,aACjBiG,QA3BA,WAChBL,GAAa,IA2BG9F,MAAO,IAAA3B,GAAc4H,QACrBG,WAAS,EACT7E,WAAS,EACT8E,YAAY,mCAEfN,GACL,uBAAKtG,UAAWvB,EAAQwH,sBACpB,gBAAC,IAAD,CAAQxG,QAAQ,WACZlC,MAAM,YACNpN,QAASyO,EAAOqB,aAChBD,UAAWvB,EAAQyH,WACnBtF,UAAWhC,EAAOiI,OAJtB,cAMA,gBAAC,IAAD,CAAQpH,QAAQ,WAAWlC,MAAM,YAAYpN,QAtCzC,WAChBkW,GAAa,IAqCkErG,UAAWvB,EAAQ0H,cAAtF,aAMRR,QACI,gBAACS,GAAD,CAAkBxH,OAAQA,EAAQwG,MAAO,CAACkB,YAAWD,qB,8CC3G/DjK,IAAYC,QAAW,SAACC,GAAD,YAAY,CACrC6J,aAAc,CACV5I,MAAOjB,EAAMO,QAAQwB,QAAQT,MAEjCkJ,UAAQ,GACJtK,QAAS,OACT+F,SAAU,WACVkC,iBAAkB,gBAClBsC,OAAQ,UACR7J,QAAS,QACTF,aAAc,OACdgK,SAAU,SACVpK,UAAW,mBAAF,OAAqBN,EAAMO,QAAQC,KAAKC,SACjDmF,MAAO,OACPzE,SAAU,QACVwJ,SAAU,0BACV9J,UAAW,QACXwH,UAAW,QACX1H,OAAQ,gBAdJ,SAeHX,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1BD,SAAU,0BACVxJ,SAAU,WAjBV,SAmBHnB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1BD,SAAU,0BACVxJ,SAAU,WArBV,SAuBHnB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1BD,SAAU,0BACVxJ,SAAU,WAzBV,SA2BHnB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1BD,SAAU,0BACVxJ,SAAU,WA7BV,SA+BHnB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1BD,SAAU,0BACVxJ,SAAU,UAjCV,GAoCR0J,YAAa,CACTjK,QAAS,OACTkK,aAAc,aAAF,OAAe9K,EAAMO,QAAQc,UAAUsG,MACnDoD,WAAY,MACZC,WAAY,SACZN,SAAU,SACVO,aAAc,YAElBC,YAAa,CACTjF,SAAU,WACVyE,SAAU,SACVS,aAAc,aACdH,WAAY,SACZI,UAAW,YACXxK,QAAS,OACTV,QAAS,cACTsB,cAAe,SACfJ,WAAY,aACZiK,SAAU,QAEdC,WAAY,CACR1K,QAAS,OACTV,QAAS,OACTqL,YAAa,UACbb,SAAU,SACVhJ,eAAgB,oBAsFlB8J,GAAqB,SAAChZ,GAGxB,MAAwCA,EAAMwG,MAAvChB,EAAP,EAAOA,GAAIyT,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,cAEftJ,GAAoBC,UAApBD,gBAGF3H,GAAWyH,UACbtI,GAAQ8K,SAAY,SAAA1L,GAAK,OAAIsD,GAAetD,EAAOhB,MAGjDsK,GAASC,SAAU,CACrBC,cAAe,CACXyH,MAAOrQ,EAAI,MACXsQ,QAAStQ,EAAI,SAEjBgJ,SAAU,SAACC,GAEP,IAAOoH,EAAkBpH,EAAlBoH,MAAOC,EAAWrH,EAAXqH,QAOdzP,EAASU,GAAS,CAACnD,KAAIoD,YALH,CAChBpD,KACAiS,QACAC,cAGCnH,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,aAIzBuI,GAAc,MAKhB7G,EAAc,kBAAM6G,GAAc,IAExC,OACI,gCACI,gBAAC1G,GAAA,EAAD,CAAQL,KAAM8G,EAAYxG,QAASJ,EAAaK,kBAAgB,qBAC5D,gBAACC,GAAA,EAAD,CAAanN,GAAG,oBAAoB,IAAAsK,GAAc2H,OAClD,gBAAC7E,GAAA,EAAD,KACI,gBAACxB,EAAA,EAAD,CACIjD,OAAO,QACPwC,QAAQ,WACRlC,MAAM,YACNjJ,GAAG,cACH6L,MAAM,QACNjJ,KAAK,OACL4K,WAAS,EACT7O,KAAK,QACLuN,SAAU5B,EAAO6B,aACjBF,MAAO,IAAA3B,GAAc2H,QAEzB,gBAACrG,EAAA,EAAD,CACI0B,WAAS,EACT3E,OAAO,QACPwC,QAAQ,WACRlC,MAAM,YACNjJ,GAAG,gBACH6L,MAAM,UACNlN,KAAK,UACL0T,WAAS,EACTsB,KAAM,EACNnG,WAAS,EACTtB,SAAU5B,EAAO6B,aACjBF,MAAO,IAAA3B,GAAc4H,WAG7B,gBAACzE,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASgR,GAAjB,UAGA,gBAAC,IAAD,CAAQ5D,MAAM,UAAUpN,QAASyO,EAAOqB,cAAxC,cASdiI,GAAoB,SAACpZ,GAEvB,MAAwBD,YAAe,GAAvC,eAAOoS,EAAP,KAAaC,EAAb,KAEMzC,EAAUrC,KAET+L,EAAsBrZ,EAAMsZ,UAA5BD,oBAMDhH,EAAc,WAChBD,GAAQ,IAQZ,OACI,2BACI,gBAAChR,EAAA,EAAD,CACImY,aAAW,SACXlY,QAjBY,WACpB+Q,GAAQ,IAiBAsC,KAAK,SAEL,gBAAC8E,GAAA,EAAD,CAAYX,SAAS,WAEzB,gBAACrG,GAAA,EAAD,CACIL,KAAMA,EACNM,QAASJ,EACTpR,oBAAqBwY,GACrB/G,kBAAgB,4BAChBgH,mBAAiB,kCAEjB,gBAAC/G,GAAA,EAAD,CAAanN,GAAG,6BAA6B,qBAC7C,gBAACyN,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASgR,EAAa5D,MAAM,WAApC,UAGA,gBAAC,IAAD,CAAQpN,QA1BF,WAClB+Q,GAAQ,GACRiH,KAwB4CnI,UAAWvB,EAAQ0H,cAAnD,cASdoC,GAAa1Z,cAAiB,SAAoBC,EAAOC,GAC3D,OAAO,gBAACC,EAAA,GAAD,QAAOyZ,UAAU,KAAK1Z,IAAKA,GAASD,OAG/C,GAlOiB,SAACA,GAEd,IAAMwF,EAAKxF,EAAMwF,GAEjB,GAAoC1C,eAAS,GAA7C,eAAOmW,EAAP,KAAmBC,EAAnB,KAEMU,GAAc1H,QAAY7H,IAC1BpC,GAAWyH,UACXtI,GAAO8K,SAAY,SAAA1L,GAAK,OAAIsD,GAAetD,EAAOhB,MAEpDwO,GAAUC,UAERtE,EAAUrC,KAERsC,GAAoBC,UAApBD,gBACFiK,GAAgB7Z,EAAM6Z,eAAgB7Z,EAAM6Z,cAyB5CC,EAAY,CACdtU,KACA6T,oBAzBwB,WACxBpR,EAASI,GAAW7C,IACf+K,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,cAiBzBsI,aACAC,iBAGJ,OACI,gCACqB,YAAhBU,GACL,gCACI,uBAAK1I,UAAWvB,EAAQqI,UACpB,uBAAK9G,UAAWvB,EAAQ0I,aACnBjR,EAAKqQ,OAEV,uBAAKvG,UAAWvB,EAAQ+I,YAAaqB,aAAYvU,EAAInE,QAAS,WAtBtE6X,GAAc,KAuBD9R,EAAKsQ,SAERmC,GACE,uBAAK3I,UAAWvB,EAAQmJ,YACpB,gBAAC,IAAD,CAAQrK,MAAM,UAAUiG,KAAK,QAAQH,KAAK,GAAGwF,aAAYvU,EAAInE,QAAS,WAvBtF2S,EAAQtR,KAAR,qBAA2B8C,MAuBX,QAGA,gBAAC4T,GAAD,CAAmBE,UAAWQ,MAIzCb,GAAc,gBAACD,GAAD,CAAoBxS,MAAOsT,KAGzB,UAAhBF,GACL,gCACI,uBAAK1I,UAAWvB,EAAQqI,UACpB,gBAACgC,GAAA,EAAD,CAAUrJ,QAAQ,OAAOsJ,OAAQ,IAAKC,UAAU,a,wBCnJ1D5M,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrC2M,+BAAgC,CAC5B1L,MAAOjB,EAAMO,QAAQwB,QAAQ8D,MAC7B,UAAW,CACP5E,MAAM,cAGd2L,sBAAuB,CACnB7L,WAAYf,EAAMO,QAAQQ,WAAW8L,OAEzC1M,KAAM,CACFQ,OAAQ,cACRL,UAAW,uCACXW,MAAOjB,EAAMO,QAAQC,KAAKC,QAC1B,WAAY,CACRM,WAAYf,EAAMO,QAAQc,UAAUC,KACpCL,MAAOjB,EAAMO,QAAQc,UAAUyL,aAC/BxM,UAAW,wGACX,UAAW,CACPS,WAAYf,EAAMO,QAAQc,UAAUsG,QAIhDkC,aAAc,CACV5I,MAAOjB,EAAMO,QAAQwB,QAAQT,MAEjCyL,OAAQ,OAyENnB,GAAoB,SAACpZ,GAGvB,IAAM2P,EAAUrC,KAGZkN,EAGAxa,EAHAwa,WACAnI,EAEArS,EAFAqS,YACAoI,EACAza,EADAya,kBASJ,OACI,gCACI,gBAACjI,GAAA,EAAD,CACIL,KAAMqI,EACNvZ,oBAAqBwY,GACrBiB,aAAW,EACXjI,QAASJ,EACTK,kBAAgB,2BAChBgH,mBAAiB,kCAEjB,gBAAC/G,GAAA,EAAD,CAAanN,GAAG,4BAA4B,qBAC5C,gBAACyN,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASgR,EAAa5D,MAAM,WAApC,UAGA,gBAAC,IAAD,CAAQpN,QApBF,WAClBgR,IACAoI,KAkB4CvJ,UAAWvB,EAAQ0H,cAAnD,cASdoC,GAAa1Z,cAAiB,SAAoBC,EAAOC,GAC3D,OAAO,gBAACC,EAAA,GAAD,QAAOyZ,UAAU,KAAK1Z,IAAKA,GAASD,OAG/C,GAnHiB,SAACA,GAEd,IAAMwF,EAAKxF,EAAMwF,GAEjB,EAAoCzF,YAAe,GAAnD,eAAOya,EAAP,KAAmBG,EAAnB,KAEM1S,GAAWyH,UACX3E,GAAOmH,SAAY,SAAA1L,GAAK,OAAI6F,GAAe7F,EAAOhB,MAClDwF,GAAakH,QAAYzF,IAEvBmD,GAAoBC,UAApBD,gBAEFD,EAAUrC,KA8BVsN,EAAW,CACbJ,aACAnI,YA1BgB,WAChBsI,GAAc,IA0BdF,kBAvBsB,WAEtBxS,EAASkD,GAAe3F,IACnB+K,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,eAgB7B,OACI,gCACI,gBAACkK,GAAA,EAAD,CACIxJ,MAAOtG,EAAK5G,KACZ2W,SAtCY,WACpBH,GAAc,IAsCNtZ,QAAS,kBAAsB0J,EAAKvF,QAd5CyC,EAAS8D,GAAiBvG,KAelBiJ,MAAM,UACNkC,QAAQ,WACRhB,QAAS,CACLhC,KAAMgC,EAAQhC,KACdwM,+BAAgCxK,EAAQwK,gCAE5CjJ,WAAW6J,SAAK,UACXpL,EAAQ4K,OAASvP,IAAexF,IAErCwV,WAAS,IAEb,gBAAC,GAAsBJ,KCvF7BK,GAAkB,SAACC,GAErB,OAAIA,QAAkD,KAC/B,IAAnBA,EAAQxW,OAAsB,GACtB,KAAAwW,GAAO,KAAPA,GAAY,SAACC,GACrB,OAAO,gBAAC,GAAD,CAAU3a,IAAK2a,EAAM3V,GAAI2V,Q,YCjBlC7N,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrC4N,UAAW,CACP1N,QAAS,OACTwB,eAAgB,SAChBkE,MAAO,QAEXpF,KAAM,CACFN,QAAS,OACTwB,eAAgB,gBAEpBmM,KAAM,CACFtC,YAAa,cAiBrB,GAZwB,SAAC/Y,GAErB,IAAM2P,EAAUrC,KAEhB,OACI,uBAAK4D,UAAWvB,EAAQyL,WACpB,gBAACE,GAAA,EAAD,CAAiBzC,SAAS,QAAQ3H,UAAWvB,EAAQ0L,OACrD,gBAAC/G,EAAA,EAAD,CAAY3D,QAAS,MAArB,IAA6B3Q,EAAMuB,SAAnC,OCcNga,GAAkB,WAEpB,IAAMC,GAAgBtJ,QAAYhI,IAC5B0P,GAAc1H,QAAY7H,IAC1BoR,GAAevJ,QAAYlI,IAC3B0R,EAAaT,GAAgBQ,GAEnC,OAAmB,OAAfC,GAAuC,UAAhB9B,EAEnB,gBAAC,GAAD,MAEmB,YAAhBA,GAA+C,IAAlB4B,EAEhC,gBAAC,GAAD,mCAKJ,CAACE,IAIT,GArDiB,WAEb,IAAM9B,GAAc1H,QAAY7H,IAC1BpC,GAAWyH,UAETE,GAAoBC,UAApBD,gBAeR,OAbA7P,aAAgB,WACQ,UAAhB6Z,GACA3R,EAASF,MACJwI,MAAK,SAACC,GAC+B,aAA9BA,EAAOC,KAAKC,eACZd,EAAgB,iCAAkC,CAC9Ce,QAAS,eAK9B,CAACiJ,EAAa3R,IAGb,gCACI,gBAACiO,GAAD,CACII,MAAO,gBAAC,GAAD,MACPC,KAAM,gBAACgF,GAAD,MACNjT,OAAK,MCLrB,IA5BsBiF,QAAW,SAACC,GAAD,YAAY,CACzCwH,YAAa,CACT5G,QAAS,YACTV,QAAS,OACTsB,cAAe,MACfwE,SAAU,SACVtE,eAAgB,SAChBhB,aAAc,QAElBiF,KAAM,CACFzF,QAAS,OACTsB,cAAe,SACfE,eAAgB,SAChBN,WAAY,SACZwE,MAAO,MACPtF,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDM,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUwE,MAHpB,YAIVnF,aAAc,MACdE,QAASZ,EAAM6B,QAAQ,IAE3BsM,QAAS,O,YCqDb,GAxEqB,SAAC,GAAyB,IAAxB7L,EAAwB,EAAxBA,OAAQ8L,EAAgB,EAAhBA,WAErBC,GAAe3J,QAAY9F,IAC3B0P,GAAa5J,QAAY1F,IACzBvE,GAAWyH,UAuCjB,OArCA3P,aAAgB,WACZ,GAAI6b,GAAcA,EAAWlX,OAAS,EAAG,CACrC,IAAIqX,EAAM,KAAAH,GAAU,KAAVA,GAAe,SAAA7Q,GAAI,OAAIA,EAAKvF,MACtCsK,EAAOkM,cAAc,eAAgBD,GAAK,MAE/C,IAEHhc,aAAgB,WACO,UAAf+b,GACA7T,EAASgD,QAEd,CAAC6Q,IA2BA,gBAACG,GAAA,GAAD,CACIC,UAAQ,EACRC,UAAQ,EACRnJ,WAAS,EACToJ,uBAAuB,EACvB9K,cAAc,EACdnD,OAAQ,QACR3I,GAAG,cACHqR,QAASgF,EACT9I,aAAc6I,GAA0B,GACxCS,eAAgB,SAAAC,GAAM,OAAIA,EAAOnY,MACjCoY,kBAAmB,SAACD,EAAQ7K,GACxB,OAAI6K,EAAO9W,KAAOiM,EAAMjM,IAG5BgX,WAAY,SAACzG,EAAU0G,GAAX,OACR,KAAA1G,GAAQ,KAARA,GAAa,SAAChL,EAAM2R,GAAP,OACT,gBAAC7B,GAAA,GAAD,QAAMlK,QAAQ,WAAWU,MAAOtG,EAAK5G,KAAM3D,IAAKuK,EAAKvF,IAAQiX,EAAY,CAAEC,gBAGnFC,YAAa,SAAChZ,GAAD,OACT,gBAACyN,EAAA,GAAD,UAAezN,EAAf,CAAuBwK,OAAQ,QAASkD,MAAM,cAAcyG,YAAY,UAE5EpG,SAhDa,SAACkL,EAAOC,EAAaC,GAEtC,OAAQA,GACR,IAAK,gBACD,IAAIf,EAAM,KAAAc,GAAW,KAAXA,GAAgB,SAAA9R,GAAI,OAAIA,EAAKvF,MACvCsK,EAAOkM,cAAc,eAAgBD,GAAK,GAC1C,MAEJ,IAAK,gBACD,IAAIA,EAAM,KAAAc,GAAW,KAAXA,GAAgB,SAAA9R,GAAI,OAAIA,EAAKvF,MACvCsK,EAAOkM,cAAc,eAAgBD,GAAK,GAC1C,MAGJ,IAAK,QACDjM,EAAOkM,cAAc,eAAgB,IAAI,QCwGrD,GAxIoB,WAEhB,IAAM/T,GAAWyH,UAEXC,EAAUoN,KAERnN,GAAoBC,UAApBD,gBAEFE,GAASC,SAAU,CACrBC,cAAe,CACXyH,MAAO,GACPC,QAAS,GACTsF,aAAc,IAElB5M,SAAS,SAACC,GAEN,IACMzH,EAAc,CAChB6O,MAF6CpH,EAA1CoH,MAGHC,QAH6CrH,EAAnCqH,QAIVlN,SAJ6C6F,EAA1B2M,cAMG,KAAtBpU,EAAY6O,cACL7O,EAAY6O,MAEvBxP,EAASD,GAAWY,IACf2H,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,gBAOjC,OACI,gCACI,uBAAKO,UAAWvB,EAAQqF,aACpB,wBAAM9D,UAAWvB,EAAQwD,KAAM/C,SAAUN,EAAOqB,aAAcqD,YAAU,GACpE,gBAACpD,EAAA,EAAD,CACI4B,WAAS,EACT7E,OAAQ,QACRhK,KAAK,QACLqB,GAAG,YACH6L,MAAM,QACN5C,MAAM,YACNgD,MAAO,IAAA3B,GAAc2H,MACrB/F,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIyG,WAAS,EACT7E,WAAS,EACT7E,OAAQ,QACRgL,KAAM,GACNhV,KAAK,UACLqB,GAAG,cACH6L,MAAM,UACN5C,MAAM,YACNgD,MAAO,IAAA3B,GAAc4H,QACrBhG,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAAC,GAAD,CAAkB/B,OAAQA,IAC1B,gBAAC,IAAD,CACIa,QAAQ,YACRlC,MAAM,YACNN,OAAQ,QACR9M,QAASyO,EAAOqB,aAChBW,UAAWhC,EAAOiI,OALtB,mB,uBCjEpB,GATqB,SAAC/X,GAElB,OACI,gBAAC,KAAD,KACI,gBAACsU,EAAA,EAAD,qCC6CN2I,GAAe,WAGjB,IAAQzX,GAAO0X,UAAP1X,GACFwO,GAAUC,UAEVhM,GAAWyH,UACbkK,GAAe1H,QAAY7H,IACzBwR,GAAe3J,QAAY9F,IAEzBwD,GAAoBC,UAApBD,gBAEFD,EAAUoN,KAEZ3V,GAAQ8K,SAAY,SAAA1L,GAAK,OAAIsD,GAAetD,EAAOhB,MACvD,GAAoB,YAAhBoU,IAA8BxS,EAC9B,OACI,gCACI,gBAAC,GAAD,OAMZ,IAAI+V,EAAkB,GAWtB,OARI/V,GACAA,EAAKoD,SAAStI,SAAQ,SAAAoJ,GAClB,IAAIP,EAAO,KAAA8Q,GAAY,KAAZA,GAAkB,SAACuB,GAAD,OAAa9R,IAAW8R,EAAQ5X,MACtDA,EAAYuF,EAAZvF,GAAIrB,EAAQ4G,EAAR5G,KACXgZ,EAAgBza,KAAK,CAAC8C,KAAIrB,YAK9B,gCACKiD,GACO,gCACI,gBAAC,MAAD,CACI4I,cAAe,CACXyH,MAAOrQ,EAAI,MACXsQ,QAAStQ,EAAI,QACb4V,aAAc,IAElB5M,SACI,SAACC,GAEG,IAAOoH,EAA0CpH,EAA1CoH,MAAOC,EAAmCrH,EAAnCqH,QAAuBlN,EAAY6F,EAA1B2M,aAQvB/U,EAASU,GAAS,CAACnD,KAAIoD,YANH,CAChBpD,KACAiS,QACAC,UACAlN,eAGC+F,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,eACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAEbqD,EAAQqJ,UAERzN,EAAgB,iBAAkB,CAC9Be,QAAS,gBAOhC,SAAAb,GAAM,OACH,wBAAMoB,UAAWvB,EAAQwD,KAAM/C,SAAUN,EAAOqB,aAAcqD,YAAU,GACpE,gBAACpD,EAAA,EAAD,CACI4B,WAAS,EACT7E,OAAQ,QACRhK,KAAK,QACLqB,GAAG,YACH6L,MAAM,QACN5C,MAAM,YACNgD,MAAO,IAAA3B,GAAc2H,MACrB/F,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAACT,EAAA,EAAD,CACIyG,WAAS,EACT7E,WAAS,EACT7E,OAAQ,QACRgL,KAAM,GACNhV,KAAK,UACLqB,GAAG,cACH6L,MAAM,UACN5C,MAAM,YACNgD,MAAO,IAAA3B,GAAc4H,QACrBhG,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEnB,gBAAC,GAAD,CAAkB/B,OAAQA,EAAQ8L,WAAYuB,IAC9C,gBAAC,IAAD,CAAQxM,QAAQ,YAAYlC,MAAM,YAAYpN,QAASyO,EAAOqB,cAA9D,sBAYpC,GAvJqB,WAEjB,MAAkCpR,WAAe,QAAjD,eAAOud,EAAP,KAAkBC,EAAlB,KAEMtV,GAAWyH,UACbkK,GAAe1H,QAAY7H,IAC3BmT,GAAetL,QAAY1F,IAEzBmD,EAAUoN,KAoBhB,OAlBAhd,aAAgB,WACQ,UAAhB6Z,GACA2D,EAAa,QACbtV,EAASF,OAETwV,EAAa,UAEnB,CAAC3D,IAEH7Z,aAAgB,WACQ,UAAhByd,GACAD,EAAa,QACbtV,EAASgD,OAETsS,EAAa,UAEnB,CAACC,IAGC,uBAAKtM,UAAWvB,EAAQqF,aACL,SAAdsI,GACG,gBAACtD,GAAA,EAAD,CAAUrJ,QAAQ,OAAOsJ,OAAQ,IAAKC,UAAU,SAErC,SAAdoD,GACG,gBAACL,GAAD,QCAhB,GAxCwB,SAACjd,GAGrB,IAAMiI,GAAWyH,UACX1E,GAAakH,QAAYzF,IACzBmN,GAAc1H,QAAY7H,IAC1BoT,GAAevL,QAAY3F,IAC3BmR,GAAaxL,SAAY,SAAC1L,GAAD,OAAW6F,GAAe7F,EAAOwE,MAC1D0Q,EAAaT,GAAgByC,EAAaA,EAAWjS,eAAiB,MAQ5E,OANA1L,aAAgB,WACQ,UAAhB6Z,GACA3R,EAASF,QAEd,CAAC6R,IAEe,OAAf5O,GAAuByS,EAAe,EAElC,gBAACnJ,EAAA,EAAD,CAAY3D,QAAQ,SAApB,iBAEkB,OAAf3F,GAAwC,IAAjByS,EAE1B,iCAMJ,gCACC/B,GAAcA,EAAWhX,OAAS,GAC/B,CAACgX,GAEJA,GAAoC,IAAtBA,EAAWhX,QACtB,gBAAC4P,EAAA,EAAD,CAAY3D,QAAQ,SAApB,gCC/BNgN,GAAkB,WAEpB,IAMY,EANN1V,GAAWyH,UAETE,GAAoBC,UAApBD,gBAEFE,GAASC,SAAU,CACrBC,cAAe,CAACxE,SAAU,IAC1B4E,UAAQ,oBAAE,WAAOC,EAAQC,GAAf,uEAEC9E,EAAY6E,EAAZ7E,SAKPvD,EAASiD,GAHW,CAChB/G,KAAMqH,KAGL+E,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,eACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAEbL,EAAUsN,aAEVhO,EAAgB,sBAAuB,CACnCe,QAAS,aAhBnB,2CAAF,+CAqBRI,iBAAkBC,MAAW,CACzBxF,SAAUwF,QACLC,SAAS,cAElB4M,gBAAgB,IAGpB,OACI,gCACI,gBAAC,GAAD,CACIvH,MACI,wBAAMpF,UAAU,WAAWd,SAAUN,EAAOqB,aAAcF,UAAQ,GAC9D,gBAACG,EAAA,EAAD,CACIC,MAAM,cACNV,QAAQ,WACRxM,KAAK,WACL2T,YAAY,oCACZpG,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACfJ,MAAO,IAAA3B,GAActE,SACrBkJ,KAAK,QACL9M,QAAQkI,EAAOyB,OAAO/F,SACtBgG,WAAY1B,EAAOyB,OAAO/F,SAC1BwH,WAAS,KAIrB6D,QACI,gBAAC,GAAD,CAAkB/G,OAAQA,QAQxCwH,GAAmB,SAACtX,GACtB,IAAO8P,EAAU9P,EAAV8P,OAEP,OACI,gBAAC,IAAD,CAAQzO,QAASyO,EAAOqB,aAAcR,QAAQ,WAAWlC,MAAM,aAA/D,c,0JC3DFnB,IAAYC,QAAW,SAACuQ,GAAD,MAAgB,CACzCnQ,MAAM,QACFyF,MAAO,QACPyC,UAAW,OACXkI,UAAW,OACXC,UAAW,UACVF,EAAUrI,YAAYC,QAAQ,MAAO,OAAS,CAC3CtC,MAAO,SAGf6K,WAAY,CACRvQ,QAAS,OACTwB,eAAgB,gBAEpBoE,WAAY,CACR5F,QAAS,OACTG,aAAc,SACdqB,eAAgB,eAChBsE,SAAU,cAmGZ0K,GAAc,SAACle,GAEjB,IAAOme,EAAsCne,EAAtCme,QAASC,EAA6Bpe,EAA7Boe,WAAYC,EAAiBre,EAAjBqe,cAe5B,OACI,gCACKA,EAAgB,KAAAA,GAAa,KAAbA,GAAkB,SAACjX,GAChC,IAhBUqK,EAgBJ6M,EAAU,uBAAH,OAA0BlX,EAAK5B,IAE5C,OACI,gBAAC+Y,GAAA,EAAD,CAAU/d,IAAK4G,EAAK5B,GAAIgZ,UAAMC,EAAW9d,OAAK,EAAC+d,QAAM,EAACrd,SAnBhDoQ,EAmBsErK,EAAK5B,GAnBjE,WAC5B,IAAMmZ,EAAe,KAAAR,GAAO,KAAPA,EAAgB1M,GAC/BmN,GAAa,QAAIT,IAED,IAAlBQ,EACAC,EAAWlc,KAAK+O,GAEhB,KAAAmN,GAAU,KAAVA,EAAkBD,EAAc,GAGpCP,EAAWQ,MAUK,gBAACC,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CACIC,KAAK,QACLZ,SAAuC,IAA9B,KAAAA,GAAO,KAAPA,EAAgB/W,EAAK5B,IAC9BwZ,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBZ,MAGzC,gBAACa,GAAA,EAAD,CAAc3Z,GAAI8Y,EAASrQ,QAAO,UAAK7G,EAAKqQ,aAGnD,OAKX2H,GAAiB,SAACpf,GAEpB,IAAOqf,EAAqDrf,EAArDqf,cAAeC,EAAsCtf,EAAtCsf,iBAAkBC,EAAoBvf,EAApBuf,iBAexC,OACI,gCACKA,EAAmB,KAAAA,GAAgB,KAAhBA,GAAqB,SAACnY,GACtC,IAhBUqK,EAgBJ6M,EAAU,uBAAH,OAA0BlX,EAAK5B,IAE5C,OACI,gBAAC+Y,GAAA,EAAD,CAAU/d,IAAK4G,EAAK5B,GAAIgZ,UAAMC,EAAW9d,OAAK,EAAC+d,QAAM,EAACrd,SAnBhDoQ,EAmBsErK,EAAK5B,GAnBjE,WAC5B,IAAMmZ,EAAe,KAAAU,GAAa,KAAbA,EAAsB5N,GACrCmN,GAAa,QAAIS,IAED,IAAlBV,EACAC,EAAWlc,KAAK+O,GAEhB,KAAAmN,GAAU,KAAVA,EAAkBD,EAAc,GAGpCW,EAAiBV,MAUD,gBAACC,GAAA,EAAD,KACI,gBAACC,GAAA,EAAD,CACIC,KAAK,QACLZ,SAA6C,IAApC,KAAAkB,GAAa,KAAbA,EAAsBjY,EAAK5B,IACpCwZ,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBZ,MAGzC,gBAACa,GAAA,EAAD,CAAc3Z,GAAI8Y,EAASrQ,QAAO,UAAK7G,EAAKqQ,aAGnD,OAKX+H,GAAc,SAACxf,GAEjB,IACIyf,EAGAzf,EAHAyf,WAAYC,EAGZ1f,EAHY0f,aACZC,EAEA3f,EAFA2f,aAAcL,EAEdtf,EAFcsf,iBACdlB,EACApe,EADAoe,WAIEzO,EAAUrC,KAUhB,OACI,uBAAK4D,UAAWvB,EAAQ2D,YACpB,gBAAC,IAAD,CACIiG,aAAW,SACXqG,UAAW,gBAACC,GAAA,EAAD,MACXnL,KAAK,QACLrT,QAASoe,EAAaE,EAAeD,GAEpCD,EAAa,SAAW,UAE7B,gBAAC,IAAD,CACIlG,aAAW,SACXqG,UAAW,gBAACE,GAAA,EAAD,MACXpL,KAAK,QACLrT,QAtBQ,WACZoe,EACAH,EAAiB,IAEjBlB,EAAW,MAcX,WAYZ,GA1NqB,WAEjB,IAAM/H,GAAiBnE,QAAYzF,IAE7BxE,GAAWyH,UACXqQ,GAAgB7N,QAAYtI,IAC5BoW,GAAqB9N,SAAY,SAAC1L,GAAD,OpBwJR,SAACA,EAAOhB,GACvC,OAAIA,QAAwC,GAClC6G,GAAe7F,EAAOhB,GAAIiG,eoB1JcwU,CAAoBzZ,EAAO6P,MACzEgI,EAAgBhI,EAAiB,IAAA0J,GAAa,KAAbA,GAAqB,SAAA3Y,GAAI,OAAK,KAAA4Y,GAAkB,KAAlBA,EAA4B5Y,EAAI,OAAW,GAC1GmY,EAAmBlJ,EAAiB,IAAA0J,GAAa,KAAbA,GAAqB,SAAA3Y,GAAI,OAAI,KAAA4Y,GAAkB,KAAlBA,EAA4B5Y,EAAI,OAAW,GAEhH,EAA8BrH,WAAe,IAA7C,eAAOoe,EAAP,KAAgBC,EAAhB,KACA,EAA0Cre,WAAe,IAAzD,eAAOsf,EAAP,KAAsBC,EAAtB,KACA,EAAoCvf,YAAe,GAAnD,eAAO0f,EAAP,KAAmBS,EAAnB,KAEMvQ,EAAUrC,KAERsC,GAAoBC,UAApBD,gBAyCFuQ,EAAY,CACdhC,UACAC,aACAiB,gBACAC,mBACAI,aA5CiB,WACjBzX,EAASoD,GAAgB,CACrBC,OAAQ+K,EACR/N,MAAO,IAAA6V,GAAO,KAAPA,EAAe6B,MAErBzP,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,aAIzByN,EAAW,KA6BXuB,aA1BiB,WACjB,IAAIS,EAAO3V,GAAmBuV,EAAoBX,GAClDpX,EAASoD,GAAgB,CACrBC,OAAQ+K,EACR/N,MAAO8X,KAEN7P,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,eAAgB,CAC5Be,QAAS,YAGbf,EAAgB,sBAAuB,CACnCe,QAAS,aAIzB2O,EAAiB,KAUjBjB,gBACAkB,mBACAE,cAGJ,OACI,gCACOpJ,GACH,gCACI,gBAACgK,GAAA,EAAD,CACInP,UAAWvB,EAAQhC,KACnB2S,UACI,gBAACC,GAAA,EAAD,CAAerP,UAAWvB,EAAQsO,WAAY1L,UAAU,MAAM/M,GAAG,yBAC5Dia,EAAa,eAAiB,YAC/B,gBAACre,EAAA,EAAD,CAAYC,QAAS,kBAAM6e,GAAc,SAAA1Z,GAAK,OAAKA,OAC/C,gBAACga,GAAA,EAAD,SAKXf,GAAc,gBAACL,GAAmBe,IACjCV,GAAc,gBAACvB,GAAgBiC,IAErC,gBAACX,GAAgBW,KAGlB9J,GAAkB,OC9F3BoK,GAAsB,WAGxB,IXXqBvF,EWWf3P,GAAQ2G,QAAY5F,IACpBkR,GAActL,QAAY1F,IAC1BiR,GAAevL,QAAY3F,IAE3BmU,EXbFxF,OAFiBA,EWea3P,IXZX,IAAnB2P,EAAQxW,OAD0C,KAG1C,KAAAwW,GAAO,KAAPA,GAAY,SAACC,GACrB,OAAO,gBAAC,GAAD,CAAU3a,IAAK2a,EAAM3V,GAAI2V,OWWpC,OAAkB,OAAduF,GAAsC,UAAhBlD,EAElB,gBAAC,GAAD,MAEmB,YAAhBA,GAA8C,IAAjBC,EAEhC,gBAAC,GAAD,mCAKJ,CAACiD,IAKT,GAlDiB,WAGb,IAAMlD,GAActL,QAAY1F,IAC1BvE,GAAWyH,UAQjB,OANA3P,aAAgB,WACQ,UAAhByd,GACAvV,EAASgD,QAEd,CAACuS,EAAavV,IAGb,gCACI,gBAACiO,GAAD,CACInL,MAAI,EACJuL,MAAO,gBAACqH,GAAD,MACP5H,SAAU,gBAAC0K,GAAD,MACVlV,MAAO,gBAAC,GAAD,MACP4K,SAAU,gBAAC,GAAD,U,2DC5BpB7I,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCmT,WAAW,QACPjT,QAAS,OACTuM,OAAQ,QACPzM,EAAMiI,YAAY2C,GAAG,MAAQ,CAC1B1K,QAAS,cAgCrB,GA3BsB,WAGlB,IAAMiC,EAAUrC,KACVE,GAAQoT,UAEd,EAAsB7gB,WAAeyN,EAAMO,QAAQ3F,MAAnD,eAAOyY,EAAP,KAAYC,EAAZ,KACMC,EAAYvT,EAAMO,QAAQ3F,KAUhC,OARArI,aAAgB,WAER+gB,EADc,SAAdC,EACO,OAEA,WAEZ,CAACA,IAGA,uBACIvgB,IAAK,aACL0Q,UAAWvB,EAAQgR,UACnBK,IAAK,QACLH,IAAa,SAARA,EAAiB,iDAAmD,oD,wDCxB/EI,GAAmB,SAACjhB,GAGtB,IAAMgU,GAAUC,UAEVhM,GAAWyH,UAEjB,EAAgC3P,WAAe,MAA/C,eAAOmhB,EAAP,KAAiBC,EAAjB,KAEA,EAAoCphB,YAAe,GAAnD,eAAOqhB,EAAP,KAAmBC,EAAnB,KAEQpK,EAA4BjX,EAA5BiX,aAAiBqK,GAAzB,OAAoCthB,EAApC,IAMMqS,EAAc,WAChB8O,EAAY,OAGVI,EAAsB,SAAC3E,GACzB,IAAI4E,EAAO5E,EAAM6E,OAAOC,aAAa,QACrCrP,IACA2B,EAAQtR,KAAK8e,IAgBXG,EAAiB,CACnBC,oBALwB,WACxB3Z,EAAS6E,GAAWkH,KAKpB6N,mBAVuB,WACvBR,GAAc,IAUdD,cAGJ,OACI,gCACI,gBAAC,KAAD,QAAQU,gBAAc,eAClBC,gBAAc,OACd1gB,QArCQ,SAACub,GACjBuE,EAAYvE,EAAMoF,gBAqCVpC,UAAW,gBAACqC,GAAA,EAAD,MACX/Q,UAAWlR,EAAMkR,UACjBP,QAAQ,YACR+D,KAAM,QACNjG,MAAM,YACNxO,IAAKgX,GACDqK,GATR,WAaA,gBAAC,KAAD,CACI9b,GAAG,eACHmL,QAAQ,OACR1P,oBAAqBC,EACrBggB,SAAUA,EACVxG,aAAW,EACXvI,KAAM+P,QAAQhB,GACdzO,QAASJ,GAET,gBAAC8P,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,YAAxD,WACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,YAAxD,cACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QA7CI,WACtBgR,IACAgP,GAAc,KA2CN,WAIHD,GAAc,gBAACiB,GAAiBV,KAKvCU,GAAe,SAACriB,GAElB,IAAOohB,EAAuDphB,EAAvDohB,WAAYS,EAA2C7hB,EAA3C6hB,mBAAoBD,EAAuB5hB,EAAvB4hB,oBAEvC,OACI,gCACI,gBAACpP,GAAA,EAAD,CAAQL,KAAMiP,EAAY3O,QAASoP,EAAoBnP,kBAAgB,sBACnE,gBAACC,GAAA,EAAD,KAAc,mBACd,gBAACM,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASwgB,EAAoBpT,MAAM,UAAUkC,QAAQ,YAA7D,UAGA,gBAAC,IAAD,CAAQtP,QAASugB,EAAqBnT,MAAM,YAAYkC,QAAQ,WAAWmC,WAAS,GAApF,cASpB,GAAe/S,cAAiB,SAACC,EAAOC,GAAR,OAAgB,gBAACghB,IAAD,UAAsBjhB,EAAtB,CAA6BiX,aAAchX,QCxF3F,GArBqB,SAACD,GAElB,IAAOohB,EAAuDphB,EAAvDohB,WAAYS,EAA2C7hB,EAA3C6hB,mBAAoBD,EAAuB5hB,EAAvB4hB,oBAEvC,OACI,gCACI,gBAACpP,GAAA,EAAD,CAAQL,KAAMiP,EAAY3O,QAASoP,EAAoBnP,kBAAgB,sBACnE,gBAACC,GAAA,EAAD,KAAc,mBACd,gBAACM,GAAA,EAAD,KACI,gBAAC,IAAD,CAAQ5R,QAASwgB,EAAoBpT,MAAM,UAAUkC,QAAQ,YAA7D,UAGA,gBAAC,IAAD,CAAQtP,QAASugB,EAAqBnT,MAAM,YAAYkC,QAAQ,WAAWmC,WAAS,GAApF,c,YCRL,SAASwP,KAGpB,MAAoCviB,YAAe,GAAnD,eAAOqhB,EAAP,KAAmBC,EAAnB,KAEMpZ,GAAWyH,UAcXiS,EAAiB,CACnBC,oBALwB,WACxB3Z,EAAS6E,GAAWkH,WAKpB6N,mBAVuB,WACvBR,GAAc,IAUdD,cAGJ,OACI,gCACI,gBAAChgB,EAAA,EAAD,CAAYC,QApBM,WACtBggB,GAAc,KAoBN,gBAACkB,GAAA,EAAD,OAEHnB,GAAc,gBAAC,GAAiBO,I,+BCjCvCa,IAAgBtb,QAAoB,CAEtCC,SAAU,SAACC,GAAD,OAAUA,EAAK5B,IAEzB6B,aAAc,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,QAAQC,cAAcF,EAAEC,YAGhDzB,GAAeyc,GAAc9a,gBAAgB,CAC/CC,QAAS,OACT3B,OAAQ,QACR4B,MAAO,CACHC,WAAW,EACXC,QAAS,MAIJ2a,IAAczd,QAAiB,qBAAD,mCAAuB,WAAOrB,EAAP,qFAAgBsE,EAAhB,EAAgBA,SAAhB,EAA0B3C,SAAUJ,EAApC,EAAoCA,gBAApC,kBAKzC/B,GAAiBK,IALwB,UAKfG,GALe,cAK1DC,EAL0D,OAM1DqE,EAASya,GAAe9e,EAASF,OANyB,kBAOnDE,EAASF,MAP0C,sCAUtD,KAAIE,SAVkD,0CAY/CsB,EAAgB,KAAItB,SAASF,OAZkB,YAc/C,KAAIyB,QAd2C,0CAgB/CD,EAAgB,KAAIC,UAhB2B,0DAAvB,yDAqBrCwd,IAAc7c,QAAY,CAC5B3B,KAAM,SACN4B,gBACAM,SAAU,CACNqc,eADM,SACSlc,EAAOrF,GAClBqhB,GAAcI,OAAOpc,EAAOrF,EAAOsF,WAG3CH,eAAa,iBACRmc,GAAYrZ,SAAU,SAAC5C,EAAOrF,GAC3BqF,EAAMmB,QAAU,cAFX,UAIR8a,GAAYlc,WAAY,SAACC,EAAOrF,GAC7BqF,EAAMmB,QAAU,SAChBnB,EAAMR,OAAS,aANV,MAWV,GAKHwc,GAAc7Y,cAAa,SAAAnD,GAAK,OAAIA,EAAM4P,UAH/ByM,IAFR,GACHhZ,UADG,GAEHI,WACa6Y,GAHV,GAGH3Y,YAGS4Y,GAA4B,SAAAvc,GAAK,OAAIA,EAAM4P,OAAOzO,SACjD+a,GAAkBC,GAAYvY,QAA9BsY,eAEd,GAAeC,GAAf,QC7DMrV,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCwV,WAAY,CACR5U,QAASZ,EAAM6B,QAAQ,GAAK,KAE5BoE,SAAU,WACVwP,cAAe,OACfvV,QAAS,OACTkB,WAAY,SACZM,eAAgB,UAGpBgU,UAAW,CACPhO,OAAQ,aAAF,OAAe1H,EAAMO,QAAQc,UAAUsG,MAC7CjH,aAAc,OACdO,MAAOjB,EAAMO,QAAQC,KAAKC,SAE9BkV,YAAY,QACR/U,QAASZ,EAAM6B,QAAQ,EAAG,EAAG,EAAG,GAEhC+T,YAAa,cAAF,OAAgB5V,EAAM6B,QAAQ,GAA9B,OACXgU,WAAY7V,EAAM8V,YAAY5hB,OAAO,SACrC0R,MAAO,QACN5F,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5BhF,MAAO,aAgDjB,GA3CmB,SAACpT,GAEhB,IAUU,EAVJ2P,EAAUrC,KAEVrF,GAAWyH,UAEXsE,GAAUC,UAEVnE,GAAUC,SAAU,CACxBC,cAAe,CACbuT,YAAa,IAEfnT,UAAQ,oBAAE,WAAMC,GAAN,iEACRpI,EAASwa,GAAYpS,IACrB2D,EAAQtR,KAAK,WAFL,2CAAF,+CAMV,OACI,uBAAKwO,UAAWlR,EAAMkR,WACpB,wBAAMd,SAAUN,EAAOqB,cACrB,uBAAKD,UAAWvB,EAAQqT,YACtB,gBAACQ,GAAA,EAAD,CAAY/U,MAAM,eAEpB,gBAACgV,GAAA,EAAD,CACE3L,YAAY,UACZ1P,KAAK,SACLjE,KAAK,cACLiM,SAAUN,EAAOqB,aACjBM,MAAO,IAAA3B,GAAcyT,YACrB7R,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,WACflC,QAAS,CACPhC,KAAMgC,EAAQuT,UACd5M,MAAO3G,EAAQwT,YAEjBjE,WAAY,CAAE,aAAc,e,wBClEpC5R,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCG,KAAM,CACFQ,OAAQX,EAAM6B,QAAQ,QAuC9B,GAnCkB,SAACrP,GAGf,IAEI0jB,EAFE/T,EAAUrC,KAIhB,OAAQtN,EAAM2jB,MACV,IAAK,OACDD,EAAYE,KACZ,MACJ,IAAK,OACDF,EAAYG,KAMpB,OACI,gBAAC,IAAD,CACItR,UAAWuR,KACXnT,QAAQ,YACRlC,MAAM,YACNiG,KAAM,QACN/E,QAAS,CACLhC,KAAMgC,EAAQhC,MAElBiS,UAAW,gBAAC8D,EAAD,MACXK,GAAI/jB,EAAM+jB,IAET/jB,EAAMiO,U,ygBC3BnB,IAEM+V,GAAe,SAAChkB,GAClB,IAAQ2jB,EAAsB3jB,EAAtB2jB,KAAM1V,EAAgBjO,EAAhBiO,QAAS8V,EAAO/jB,EAAP+jB,GAEjBE,EAAalkB,WACjB,kBAAMA,cAAiB,SAACmkB,EAAWjkB,GAAZ,OAAoB,gBAAC,MAAD,QAAY8jB,GAAIA,EAAI9jB,IAAKA,GAASikB,SAC7E,CAACH,IAGH,OACE,0BACE,gBAACxF,GAAA,EAAD,CAAUG,QAAM,EAACnM,UAAW0R,GACzBN,EAAO,gBAAC9E,GAAA,EAAD,KAAe8E,GAAuB,KAC9C,gBAACxE,GAAA,EAAD,CAAclR,QAASA,OAM3BX,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrC2W,OAAQ,CACJ/Q,MAtBY,IAuBZgR,WAAY,EACZ5L,WAAY,UAEhB6L,WAAY,CACRjR,MA3BY,IA4BZiQ,WAAY7V,EAAM8V,YAAY5hB,OAAO,QAAS,CAC9C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASC,kBAGzCC,aAAa,QACTrB,WAAY7V,EAAM8V,YAAY5hB,OAAO,QAAS,CAC9C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASG,gBAErC3G,UAAW,SACX5K,MAAO5F,EAAM6B,QAAQ,GAAK,GACzB7B,EAAMiI,YAAY2C,GAAG,MAAQ,CAC9BhF,MAAO5F,EAAM6B,QAAQ,GAAK,IAG9BuV,aAAc,OACVlX,QAAS,OACTkB,WAAY,SACZR,QAASZ,EAAM6B,QAAQ,EAAG,IAEvB7B,EAAMqX,OAAOC,SALR,IAMR5V,eAAgB,aAEpB6V,YAAa,CACT3R,MArDY,SA0JpB,GAjGmB,SAACpT,GAEhB,IAAOmS,EAA4CnS,EAA5CmS,KAAM6S,EAAsChlB,EAAtCglB,kBAAmBjR,EAAmB/T,EAAnB+T,gBAG1BpE,EAAUrC,KACVE,GAAQoT,UAEd,EAAwC7gB,YAAe,GAAvD,eAAOklB,EAAP,KAAqBC,EAArB,KAMA,OACI,gBAACC,GAAA,GAAD,CACIxU,QAAQ,aACRyU,OAAO,OACPjT,KAAMA,EACNjB,UAAWvB,EAAQwU,OACnBxU,QAAS,CACL0K,MAAO1K,EAAQoV,cAGnB,uBAAK7T,UAAWvB,EAAQiV,cACpB,gBAACxjB,EAAA,EAAD,CAAYC,QAAS2jB,GACI,QAApBxX,EAAMmM,UAAsB,gBAAC0L,GAAA,EAAD,MAAuB,gBAACC,GAAA,EAAD,QAG5D,gBAACC,GAAA,EAAD,MACA,gBAAClF,GAAA,EAAD,MACOtM,GACH,gCACI,gBAACiQ,GAAD,CACI/V,QAAS,QACT8V,GAAI,SACJvjB,IAAK,UAET,gBAACwjB,GAAD,CACI/V,QAAS,WACT8V,GAAI,UACJvjB,IAAK,YAIXuT,GACF,gCACI,gBAACiQ,GAAD,CACIL,KAAM,gBAAC6B,GAAA,EAAD,CAAiB/W,MAAM,cAC7BR,QAAS,QACT8V,GAAI,SACJvjB,IAAK,UAET,gBAACwjB,GAAD,CACIL,KAAM,gBAAC8B,GAAA,EAAD,CAAyBhX,MAAM,cACrCR,QAAS,QACT8V,GAAI,QACJvjB,IAAK,UAET,gBAACwjB,GAAD,CACIL,KAAM,gBAAC+B,GAAA,EAAD,CAAmBjX,MAAM,cAC/BR,QAAS,cACT8V,GAAI,YACJvjB,IAAK,gBAET,gBAAC+d,GAAA,EAAD,CAAUG,QAAM,EAACrd,QAvDL,WACxB6jB,GAAiBD,KAuDD,gBAACpG,GAAA,EAAD,KACI,gBAACoD,GAAA,EAAD,CAAmBxT,MAAM,eAE7B,gBAAC0Q,GAAA,EAAD,CAAclR,QAAQ,YACrBgX,EAAe,gBAACU,GAAA,EAAD,MAAiB,gBAACC,GAAA,EAAD,OAErC,gBAACC,GAAA,EAAD,CAAUC,GAAIb,EAAc9kB,QAAQ,OAAO4lB,eAAa,GACpD,gBAAC/B,GAAD,CACIL,KAAM,gBAAC1B,GAAA,EAAD,CAAmBxT,MAAM,cAC/BR,QAAS,UACT8V,GAAI,WACJvjB,IAAK,UACLwlB,gBAAc,IAElB,gBAAChC,GAAD,CACIL,KAAM,gBAAC1B,GAAA,EAAD,CAAmBxT,MAAM,cAC/BR,QAAS,WACT8V,GAAI,WACJvjB,IAAK,qBACLwlB,gBAAc,OAO9B,gBAACT,GAAA,EAAD,Q,YC3EZ,GAlF6B,SAACvlB,GAG1B,IAAMgU,GAAUC,UACTgS,GAAYC,UAAZD,SAEAlS,EAAmB/T,EAAnB+T,gBAEP,EAAgChU,WAAe,MAA/C,eAAOmhB,EAAP,KAAiBC,EAAjB,KAEMgF,EAAc,SAACvJ,GACjBuE,EAAYvE,EAAMoF,gBAGhB3P,EAAc,WAChB8O,EAAY,OAGVI,EAAsB,SAAC3E,GACzB,IAAI4E,EAAO5E,EAAM6E,OAAOC,aAAa,QACrCrP,IACA2B,EAAQtR,KAAK8e,IAGjB,OACI,gCACCzN,GACD,gCACI,gBAAC,IAAD,CAAQ+N,gBAAc,qBAClBC,gBAAc,OACd1gB,QAAS8kB,EACTvG,UAAW,gBAACwG,GAAA,EAAD,MACXlV,UAAWlR,EAAMkR,UACjBP,QAAQ,YACR+D,KAAM,QACNjG,MAAM,aACLwX,EAAW,KAAAA,GAAQ,KAARA,EAAe,GAAK,YAEpC,gBAAC,KAAD,CACIzgB,GAAG,qBACH0b,SAAUA,EACVxG,aAAW,EACXvI,KAAM+P,QAAQhB,GACdzO,QAASJ,EACTpR,oBAAqBC,GAErB,gBAACihB,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,UAAxD,SACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,SAAxD,SACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,YAAxD,WACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,YAAxD,iBAILR,GACH,gCACI,gBAAC,IAAD,CAAQ+N,gBAAc,qBAClBC,gBAAc,OACd1gB,QAAS8kB,EACTvG,UAAW,gBAACwG,GAAA,EAAD,MACXlV,UAAWlR,EAAMkR,UACjBP,QAAQ,YACR+D,KAAM,QACNjG,MAAM,aACLwX,EAAW,KAAAA,GAAQ,KAARA,EAAe,GAAK,YAEpC,gBAAC,KAAD,CACIzgB,GAAG,qBACH0b,SAAUA,EACVxG,aAAW,EACXvI,KAAM+P,QAAQhB,GACdzO,QAASJ,EACTpR,oBAAqBC,GAErB,gBAACihB,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,UAAxD,SACA,gBAAC4N,GAAA,EAAD,CAAU9gB,QAAS,SAAC+gB,GAAD,OAAOb,EAAoBa,IAAI7N,KAAM,WAAxD,gB,uBC7EVjH,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCG,KAAM,CACFQ,OAAQ,OAyBhB,GArBuB,SAACnO,GAEpB,IAAMwN,GAAQoT,UACRjR,EAAUrC,KAEhB,OACI,gBAAC+Y,GAAA,EAAD,CACAhV,MAAM,YACNH,UAAWvB,EAAQhC,KACnB2Y,QACI,gBAACC,GAAA,EAAD,CACIpI,QAAS3Q,EAAMgZ,SAASA,SACxB9U,SAAU,kBAAMlE,EAAMgZ,SAASC,aAAY,SAAAjgB,GAAK,OAAKA,MACrDrC,KAAK,WACL+a,WAAY,CAAE,aAAc,0B,yaCP5C,IAEM5R,IAAYC,QAAW,SAACC,GAAD,MAAY,CACrCG,KAAM,CACFD,QAAS,OACTW,UAAW,QACXwK,SAAUrL,EAAMkZ,WAAW7N,SAC3B8N,WAAYnZ,EAAMkZ,WAAWC,WAC7BpO,WAAY/K,EAAMkZ,WAAWE,gBAC7BtY,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1CC,MAAOjB,EAAMO,QAAQC,KAAKC,SAE9B4Y,OAAQ,CACJ/S,OAAQtG,EAAMsG,OAAOqQ,OAAS,EAC9B7V,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1CC,MAAOjB,EAAMO,QAAQC,KAAKC,QAC1BoV,WAAY7V,EAAM8V,YAAY5hB,OAAO,CAAC,QAAS,UAAW,CAC1D4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASG,iBAGzCmC,YAAa,CACTjT,WAtBY,IAuBZT,MAAO,eAAF,OAvBO,IAuBP,OACLiQ,WAAY7V,EAAM8V,YAAY5hB,OAAO,CAAC,QAAS,UAAW,CAC1D4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASC,kBAGzCsC,WAAY,CACR9Q,YAAa,IAEjB+Q,KAAM,CACFtZ,QAAS,QAEb2W,WAAY,CACRjR,MApCY,IAqCZiQ,WAAY7V,EAAM8V,YAAY5hB,OAAO,QAAS,CAC9C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASC,kBAGzCC,aAAa,QACTrB,WAAY7V,EAAM8V,YAAY5hB,OAAO,QAAS,CAC9C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASG,gBAErC3G,UAAW,SACX5K,MAAO5F,EAAM6B,QAAQ,GAAK,GACzB7B,EAAMiI,YAAY2C,GAAG,MAAQ,CAC9BhF,MAAO5F,EAAM6B,QAAQ,GAAK,IAG9B4X,KAAM,CACFC,SAAU,EACV9C,WAAY,GAEhBzD,WAAW,QACPjT,QAAS,OACTuM,OAAQ,QACPzM,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5B1K,QAAS,UAGfoX,QAAS,IACLpX,QAAS,OACTkB,WAAY,SACZM,eAAgB,WAChBd,QAASZ,EAAM6B,QAAQ,EAAG,IAEvB7B,EAAMqX,OAAOC,SAEpBqC,UAAW,CACPhZ,OAAQX,EAAM6B,QAAQ,IAE1B+G,QAAQ,QACJ3C,SAAU,WACVvF,aAAcV,EAAM4Z,MAAMlZ,aAC1BI,iBAAiB+Y,SAAK7Z,EAAMO,QAAQxK,OAAO+jB,MAAO,KAClD,UAAW,CACThZ,iBAAiB+Y,SAAK7Z,EAAMO,QAAQxK,OAAO+jB,MAAO,MAEpDrR,YAAazI,EAAM6B,QAAQ,GAC3BwE,WAAY,EACZT,MAAO,QACN5F,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5BvE,WAAYrG,EAAM6B,QAAQ,GAC1B+D,MAAO,SAGbmU,gBAAgB,QACZ7Z,QAAS,OACTkB,WAAY,UACXpB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5B1K,QAAS,SAGf8Z,eAAe,QACX9Z,QAAS,OACTkB,WAAY,UACXpB,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5B1K,QAAS,SAGf+J,OAAO,QACH/J,QAAS,QACRF,EAAMiI,YAAY2C,GAAG,MAAQ,CAC5B1K,QAAS,UAGfgK,QAAS,CACLwP,SAAU,EACV7D,WAAY7V,EAAM8V,YAAY5hB,OAAO,SAAU,CAC3C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOC,MACjCC,SAAUhX,EAAM8V,YAAYkB,SAASG,gBAEzC9Q,YAAY,KAEhB4T,aAAc,CACVpE,WAAY7V,EAAM8V,YAAY5hB,OAAO,SAAU,CAC7C4iB,OAAQ9W,EAAM8V,YAAYgB,OAAOoD,QACjClD,SAAUhX,EAAM8V,YAAYkB,SAASC,iBAEvC5Q,WAAY,GAEhBmB,YAAa,CACT3G,UAAW,eAAF,OAAiBb,EAAMqX,OAAOC,QAAQzW,UAAtC,OACToF,SAAU,YACVrF,QAAS,kBAoGjB,GAhGkB,SAACpO,GAGf,IAAO2nB,EAAY3nB,EAAZ2nB,SAID5T,IAFWrE,UAEO7M,MAElB8M,EAAUrC,KAEhB,EAAwBvN,YAAe,GAAvC,eAAOoS,EAAP,KAAaC,EAAb,KAUMwV,EAAc,CAChBzV,OACA6S,kBANsB,WACtB5S,GAAQ,IAMR2B,mBAGJ,OACI,uBAAK7C,UAAWvB,EAAQhC,MACxB,gBAACka,GAAA,EAAD,CACIpU,SAAS,QACTvC,WAAW6J,QAAKpL,EAAQkX,QAAT,UACVlX,EAAQmX,YAAc3U,KAG3B,gBAAC2V,GAAA,EAAD,CAASnX,QAAQ,SACb,gBAACvP,EAAA,EAAD,CACIqN,MAAM,YACN8K,aAAW,cACXlY,QA1BS,WACrB+Q,GAAQ,IA0BI2M,KAAK,QACL7N,WAAW6J,QAAKpL,EAAQoX,YAAT,UACVpX,EAAQqX,KAAO7U,KAGpB,gBAAC4V,GAAA,EAAD,OAEJ,gBAAC,GAAD,MACEhU,GACF,gCACI,uBAAK7C,UAAWvB,EAAQ6X,eACpB,gBAAC,GAAD,CAAsBzT,gBAAiBA,KAE3C,uBAAK7C,UAAWvB,EAAQ4X,gBACpB,gBAAC,GAAD,CAAW5D,KAAM,OAAQI,GAAI,SAAU9V,QAAS,UAChD,gBAAC,GAAD,CAAW0V,KAAM,OAAQI,GAAI,QAAS9V,QAAS,UAC/C,gBAAC,GAAD,CAAYiD,UAAWvB,EAAQyG,UAEnC,uBAAKlF,UAAWvB,EAAQsX,OACxB,uBAAK/V,UAAWvB,EAAQ6X,eACpB,gBAAC,GAAD,MACA,gBAAClF,GAAD,CAAcpR,UAAWvB,EAAQwX,aAErC,uBAAKjW,UAAWvB,EAAQ4X,gBACpB,gBAAC,GAAD,MACA,gBAAC,GAAD,CAAkBrW,UAAWvB,EAAQwX,eAI1CpT,GACH,gCACI,uBAAK7C,UAAWvB,EAAQ6X,eACpB,gBAAC,GAAD,CAAsBzT,gBAAiBA,KAE3C,uBAAK7C,UAAWvB,EAAQ4X,gBACpB,gBAAC,GAAD,CAAW5D,KAAM,OAAQI,GAAI,SAAU9V,QAAS,UAChD,gBAAC,GAAD,CAAW0V,KAAM,OAAQI,GAAI,UAAW9V,QAAS,cAErD,uBAAKiD,UAAWvB,EAAQsX,UAKpC,gBAAC,GAAeW,GAChB,wBAAM1W,WAAW6J,QAAKpL,EAAQ+H,SAAT,UAClB/H,EAAQ8X,aAAetV,KAEtB,uBAAKjB,UAAWvB,EAAQmV,UACxB,uBAAK5T,UAAWvB,EAAQqF,aACnB2S,M,wBChOXra,IAAYC,QAAW,SAACC,GAAD,gBAAY,CACrCC,WAAY,CACRC,QAAS,QAEbC,KAAM,CACFD,QAAS,OACTE,aAAc,SACdC,aAAc,aACdC,UAAW,mBAAF,OAAqBN,EAAMO,QAAQC,KAAKC,SACjDC,aAAc,MACdC,OAAQ,OACRC,QAAS,YACTC,UAAW,UACXC,gBAAiBd,EAAMO,QAAQQ,WAAWC,QAC1CC,MAAOjB,EAAMO,QAAQC,KAAKC,SAE9B+Z,gBAAiB,CACbrZ,SAAU,OACVC,WAAY,SACZL,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUC,KAHpB,YAIVZ,aAAc,MACdC,OAAQ,cACRC,QAAS,cACTW,UAAW,SACXrB,QAAS,OACTsB,cAAe,UAEnBN,gBAAiB,CACbC,SAAU,OACVb,UAAW,qBAAF,OAAuBN,EAAMO,QAAQC,KAAKC,SACnDW,WAAY,SACZL,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUC,KAHpB,YAIVZ,aAAc,MACdC,OAAQ,cACRC,QAAS,cACTW,UAAW,SACXrB,QAAS,OACTsB,cAAe,UAEnBC,YAAa,CACTN,SAAU,MACVb,UAAW,mBAAF,OAAqBN,EAAMO,QAAQC,KAAKC,SACjDW,WAAY,SACZL,WAAY,mEAENf,EAAMO,QAAQQ,WAAWC,QAFrB,+BAGJhB,EAAMO,QAAQc,UAAUC,KAHpB,YAIVZ,aAAc,MACdC,OAAQ,cACRC,QAAS,cACTW,UAAW,SACXrB,QAAS,OACTsB,cAAe,SACfE,eAAgB,gBAEpB+Y,kBAAmB,CACfva,QAAS,OACTsB,cAAe,SACfJ,WAAY,UAEhBsZ,iBAAkB,CACdjO,OAAQ,QACR7G,MAAO,SAEX+U,UAAW,CACP/Z,QAAS,OAEbga,oBAAqB,CACjB1a,QAAS,OACTS,OAAQX,EAAM6B,QAAQ,IAE1BgZ,QAAS,CACL3a,QAAS,OACTsB,cAAe,MACfJ,WAAY,SACZT,OAAQ,aAEZma,WAAY,CACR5a,QAAS,OACTsB,cAAe,SACfJ,WAAY,SACZT,OAAQ,iBA4BVoa,GAAgB,WAElB,IAAM5Y,EAAUrC,KAEVrF,GAAWyH,UACX8Y,GAAatW,QAAYnL,IAEvB6I,GAAoBC,UAApBD,gBAEFE,GAASC,SAAU,CACrBC,cAAe,CACX7J,gBAAiB,MAErBiK,SAAU,SAACC,EAAQC,GACf,IAAMmY,EAAW,IAAIC,SACrBD,EAASE,OAAO,kBAAmBtY,EAAM,iBACzCpI,EAAS5C,GAAgBojB,IACpBlY,MAAK,SAACC,GACH,GAAkC,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,uBAAwB,CACpCe,QAAS,gBAGV,CACH,MAGIH,EAAO/J,QAFPN,EADJ,EACIA,gBACAf,EAFJ,EAEIA,iBAGJwK,EAAgBxK,EAAmBA,EAAiByL,WAApB,iBAA0C1K,EAAgB0K,YAAc,CACpGF,QAAS,UAGjBL,EAAUQ,eAAc,SAKxC,OACI,uBAAKI,UAAWvB,EAAQ2Y,YACpB,wBAAMpX,UAAWvB,EAAQsY,mBACrB,yBACIW,OAAO,UACPpjB,GAAG,qBACH4C,KAAK,OACLjE,KAAK,kBACL+M,UAAWvB,EAAQlC,WACnBiE,SAAU,SAACkL,GACP9M,EAAOkM,cAAc,kBAAmBY,EAAMoF,cAAc6G,MAAM,OAG1E,gBAACC,GAAA,EAAD,CAAQ9H,IAAI,UAAUH,IAAK2H,EAAYtX,UAAWvB,EAAQuY,mBAC1D,uBAAKhX,UAAWvB,EAAQyY,qBACpB,yBAAOW,QAAQ,qBAAqBC,MAAO,CAAC5T,aAAc,IACtD,gBAAChU,EAAA,EAAD,CAAYqN,MAAM,UAAU8K,aAAW,iBAAiBhH,UAAU,OAAOrB,UAAWvB,EAAQwY,UAAWzT,KAAK,SACxG,gBAACuU,GAAA,EAAD,CAAavU,KAAK,YAG1B,gBAAC,IAAD,CACI/D,QAAQ,YACRlC,MAAM,UACNiG,KAAK,QACLrT,QAASyO,EAAOqB,aAChBW,SAAUhC,EAAOiC,cALrB,qBAedmX,GAAwB,WAE1B,IAAMvZ,EAAUrC,KAEV6b,GAAajX,QAAYhI,IACzBkf,GAAalX,QAAY3F,IAE/B,OACI,uBAAK2E,UAAWvB,EAAQ0Y,SACpB,uBAAKnX,UAAWvB,EAAQjB,iBAAxB,UAAgD,gCAAQya,EAAR,MAChD,uBAAKjY,UAAWvB,EAAQjB,iBAAxB,UAAgD,gCAAQ0a,EAAR,QAKtDC,GAAwB,WAG1B,IAAMphB,GAAWyH,UACX4Z,GAAWpX,QAAYlL,IAErB4I,GAAoBC,UAApBD,gBAGFE,GAASC,SAAU,CACrBC,cAAe,CACX5J,WAAYkjB,GAAsB,MAEtClZ,SAAU,SAACC,EAAQC,GAEf,IAAMmY,EAAW,IAAIC,SACrBD,EAASE,OAAO,aAActY,EAAM,YACpCpI,EAAS5C,GAAgBojB,IACpBlY,MAAK,SAACC,GACH,GAAkC,cAA9BA,EAAOC,KAAKC,cACZd,EAAgB,uBAAwB,CACpCe,QAAS,gBAEV,CACH,MAGIH,EAAO/J,QAFPL,EADJ,EACIA,WACAhB,EAFJ,EAEIA,iBAGJwK,EAAgBxK,EAAmBA,EAAiByL,WAApB,iBAA0CzK,EAAWyK,YAAc,CAC/FF,QAAS,UAIjBL,EAAUQ,eAAc,SAMlCnB,EAAUrC,KAEhB,OACI,wBAAMkH,YAAU,EAACtD,UAAWvB,EAAQV,aAChC,gBAACmC,EAAA,EAAD,CACI5L,GAAG,OACH6L,MAAM,WACNjJ,KAAK,OACLjE,KAAK,aACLsK,MAAM,YACNN,OAAO,QACP4E,aAAc,IAAAjD,GAAc1J,WAC5BmjB,gBAAiB,CACbC,QAAQ,GAEZ9X,SAAU5B,EAAO6B,eAErB,gBAAC,IAAD,CAAQhB,QAAQ,YAAYlC,MAAM,UAAUpN,QAASyO,EAAOqB,aAAcW,SAAUhC,EAAOiC,cAA3F,YAOZ,GAhLoB,WAEhB,IAAMpC,EAAUrC,KAEV4F,GAAmBhB,QAAYvL,IAC/BG,GAAWoL,QAAYrL,IACvBoB,GAAWyH,UAQjB,OANA3P,aAAgB,WACa,UAArBmT,GACAjL,EAASlD,QAEd,CAACmO,EAAkBjL,IAGlB,uBAAKiJ,UAAWvB,EAAQhC,MACpB,gBAAC2G,EAAA,EAAD,CAAYpD,UAAWvB,EAAQqY,gBAAiBrX,QAAQ,MAAxD,UAAqE7J,GAAsB,OAA3F,KACA,gBAACyhB,GAAD,MACA,gBAACW,GAAD,MACA,gBAACG,GAAD,QC9DZ,GAxDiC,SAACrpB,GAG9B,IAaY,EAbZ,GAAwBkd,UAAhBuM,EAAR,EAAQA,IAAK/pB,EAAb,EAAaA,MAGPuI,IAFUgM,WAECvE,WAGXI,GAASC,SAAU,CACrBC,cAAe,CACXyZ,MACA/pB,QACAwQ,cAAe,GACfC,cAAe,IAEnBC,UAAQ,oBAAE,WAAOC,GAAP,iEACNqZ,MAAM,IAAerZ,EAAQ,KAAM,IACnCpI,EAAStC,GAAqB0K,IAFxB,2CAAF,+CAMZ,OACI,uBAAKa,UAAW,gBACZ,wBAAMA,UAAW,gBACjB,gBAACE,EAAA,EAAD,CACA5L,GAAG,6BACHrB,KAAK,gBACLkN,MAAM,eACNjJ,KAAK,WACLuI,QAAQ,WACRc,MAAO,IAAA3B,GAAcI,cACrBwB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEf,gBAACT,EAAA,EAAD,CACA5L,GAAG,6BACHrB,KAAK,gBACLkN,MAAM,qBACNjJ,KAAK,WACLuI,QAAQ,WACRc,MAAO,IAAA3B,GAAcK,cACrBuB,SAAU5B,EAAO6B,aACjBC,OAAQ9B,EAAO+B,aAEf,gBAAC,IAAD,CAAQlB,QAAQ,YAAYlC,MAAM,YAAYpN,QAASyO,EAAOqB,cAA9D,mBAGA,gBAACmD,EAAA,EAAD,CAAY3D,QAAQ,aAApB,6DCiBZ,GAhEyB,SAAC3Q,GAGtB,MAA2CD,WAAe,QAA1D,eAAO4pB,EAAP,KAAsBC,EAAtB,KAEQppB,GAAS0c,UAAT1c,IACFwT,GAAUC,UAEVhM,GAAWyH,UACXma,GAAS3X,QAAY9E,IAEnBwC,GAAqBC,UAArBD,gBA2BR,OAzBA5M,gBAAU,WACNiF,EAASrC,GAAiB,CAACpF,SAC1B+P,MAAK,SAACC,GAC+B,cAA9BA,EAAOC,KAAKC,eACZd,EAAgB,kBAAmB,CAACe,QAAQ,YAC5CiZ,EAAiB,aAEjBha,EAAgB,oBAAqB,CAACe,QAAQ,UAC9CiZ,EAAiB,gBAG3B,KAEF5mB,gBAAU,WACF6mB,GAA4B,YAAlBF,EACVG,YAAW,WACP9V,EAAQtR,KAAK,YACd,KAEHonB,YAAW,WACP9V,EAAQtR,KAAK,YACd,OAER,CAACinB,EAAeE,EAAQ7V,IAEJ,SAAnB2V,EAEI,gBAAC3S,GAAA,EAAD,CAAU7E,MAAM,IAEM,YAAnBwX,EAEH,uBAAKzY,UAAW,cACZ,uBAAKA,UAAW,gBACZ,6CACA,8CAIc,WAAnByY,EAEH,uBAAKzY,UAAW,cACZ,uBAAKA,UAAW,gBACZ,kGAJT,GCrCL6Y,GAAmB,SAAC/pB,GAEtB,IAAMwb,GAAgBtJ,QAAY4Q,IAC5BkH,GAAgB9X,QAAY6Q,IAC5BtH,GAAevJ,QAAY2Q,IAC3BnH,EAAaT,GAAgBQ,GAEnC,MAAsB,WAAlBuO,EAEI,gBAAC,GAAD,MAEyB,IAAtBtO,EAAWhX,QAAkC,IAAlB8W,EAE9B,gBAAC,GAAD,gBAKJ,CAACE,IAIT,GAnCmB,SAAC1b,GAEhB,OACI,gCACA,gBAACkW,GAAD,CACII,MAAO,gBAAC,GAAD,MACPE,WAAY,gBAACuT,GAAD,MACZ3T,QAAM,M,gBCUlB,SAAS6T,GAAT,GAA6C,IAArB1oB,EAAqB,EAArBA,SAAa2oB,GAAQ,aAErCnW,EAAkBlR,KAEd+M,GAAoBC,UAApBD,gBAQR,OANA7P,aAAgB,WACPgU,GACDnE,EAAgB,aAAc,CAACe,QAAS,UAAWwZ,SAAS,MAEjE,CAACpW,EAAiBnE,IAGjB,gBAAC,MAAD,UACQsa,EADR,CAEIE,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACJtW,EAAmBxS,EACf,gBAAC,KAAD,CACIwiB,GAAI,CACAkC,SAAU,SACVzf,MAAO,CAAE8jB,KAAMD,UAoG3C,OA3FA,WAEI,IAAItW,EAAkBlR,KAClB0nB,GAAkBC,OAAc,gCACpC,EAA8BzqB,YAAe,GAA7C,eAAKymB,EAAL,KAAeC,EAAf,KACIjZ,EAAQzN,WACR,kBACI0qB,OAAe,CACX1c,QAAS,CACL3F,KAAMoe,EAAW,OAAS,QAC1BvY,QAAS,CACLoF,MAAO,UACPvE,KAAM,UACNqG,KAAM,UACNmF,aAAc,QAElBzL,UAAW,CACPwE,MAAO,UACPvE,KAAM,UACNqG,KAAM,UACNmF,aAAc,QAElB/K,QAAS,CACLT,KAAM,YAGd4X,WAAY,CACRC,WAAY,CACR,YACA,aACA,YACF+D,KAAK,KACP7R,SAAU,IAEdpD,YAAa,CACTpF,OAAQ,CACJsa,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,OAAQ,MAGhBxE,SAAU,CACNA,WACAC,mBAGZ,CAACD,IASL,OAPAhZ,GAAQyd,OAAoBzd,EAAO,CAAC0d,OAAO,IAG3CnrB,aAAgB,WACZ0mB,EAAY8D,KACb,CAACA,IAGA,gBAACY,EAAA,EAAD,CAAe3d,MAAOA,GAClB,gBAAC,EAAD,KACI,gBAAC,KAAD,KACI,gBAAC,GAAD,CACIma,SACI,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAOnG,KAAK,SAAS4I,OAAQ,kBAAM,gBAAC,GAAD,SACnC,gBAAC,KAAD,CAAO5I,KAAK,UAAU4I,OAAQ,kBAAM,gBAAC,GAAD,SACpC,gBAACH,GAAD,CAAczI,KAAK,UAAS,gBAAC,GAAD,OAC5B,gBAACyI,GAAD,CAAczI,KAAK,aAAY,gBAAC,GAAD,OAC/B,gBAACyI,GAAD,CAAczI,KAAK,kBAAiB,gBAAC,GAAD,OACpC,gBAACyI,GAAD,CAAczI,KAAK,SAAQ,gBAAC,GAAD,OAC3B,gBAACyI,GAAD,CAAczI,KAAK,YAAW,gBAAC,GAAD,OAC9B,gBAACyI,GAAD,CAAczI,KAAK,YAAW,gBAAC,GAAD,OAC9B,gBAACyI,GAAD,CAAczI,KAAK,WAAU,gBAAC,GAAD,OAC7B,gBAAC,KAAD,CAAOA,KAAK,sCAAsC4I,OAAQ,kBAAM,gBAAC,GAAD,SAChE,gBAAC,KAAD,CAAO5I,KAAK,+BAA+B4I,OAAQ,kBAAM,gBAAC,GAAD,SACzD,gBAAC,KAAD,CAAOgB,OAAK,EAAC5J,KAAK,KAEVzN,EAAkB,gBAAC,KAAD,CAAUgQ,GAAG,WAAa,gBAAC,KAAD,CAAUA,GAAG,YAGjE,gBAAC,KAAD,CAAOvC,KAAK,IAAI4I,OAAQ,kBAAM,gBAAC,GAAD,gBChI9D,IAAeiB,QAAe,CAC1BC,QAAS,CACLje,KAAMke,GACNjjB,MAAOkjB,GACPjgB,MAAOkgB,GACPlmB,KAAMmmB,GACNtV,OAAQuV,M,YCNhBC,SACE,gBAAC,aAAD,KACE,gBAACC,GAAA,GAAD,MACA,gBAAC,KAAD,CAAUC,MAAOA,IACb,gBAAC,GAAD,QAGNznB,SAAS0nB,eAAe,WCdtBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzN,IAAjB0N,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjD1mB,GAAI0mB,EACJI,QAAQ,EACRF,QAAS,IAUV,OANAG,EAAoBL,GAAUM,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOC,QAAS,EAGTD,EAAOD,QAIfH,EAAoBQ,EAAIF,E/C5BpB9sB,EAAW,GACfwsB,EAAoBS,EAAI,SAASlc,EAAQmc,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAStoB,EAAI,EAAGA,EAAIhF,EAASiF,OAAQD,IAAK,CACrCkoB,EAAWltB,EAASgF,GAAG,GACvBmoB,EAAKntB,EAASgF,GAAG,GACjBooB,EAAWptB,EAASgF,GAAG,GAE3B,IAJA,IAGI8B,GAAY,EACPymB,EAAI,EAAGA,EAAIL,EAASjoB,OAAQsoB,MACpB,EAAXH,GAAsBC,GAAgBD,IAAaI,OAAOC,KAAKjB,EAAoBS,GAAGS,OAAM,SAAS3sB,GAAO,OAAOyrB,EAAoBS,EAAElsB,GAAKmsB,EAASK,OAC3JL,EAASS,OAAOJ,IAAK,IAErBzmB,GAAY,EACTsmB,EAAWC,IAAcA,EAAeD,IAG1CtmB,IACF9G,EAAS2tB,OAAO3oB,IAAK,GACrB+L,EAASoc,KAGX,OAAOpc,EAxBNqc,EAAWA,GAAY,EACvB,IAAI,IAAIpoB,EAAIhF,EAASiF,OAAQD,EAAI,GAAKhF,EAASgF,EAAI,GAAG,GAAKooB,EAAUpoB,IAAKhF,EAASgF,GAAKhF,EAASgF,EAAI,GACrGhF,EAASgF,GAAK,CAACkoB,EAAUC,EAAIC,IgDJ/BZ,EAAoBoB,EAAI,SAAShB,GAChC,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,WAAa,OAAOlB,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADAJ,EAAoBuB,EAAEF,EAAQ,CAAEhmB,EAAGgmB,IAC5BA,GCLRrB,EAAoBuB,EAAI,SAASpB,EAASqB,GACzC,IAAI,IAAIjtB,KAAOitB,EACXxB,EAAoByB,EAAED,EAAYjtB,KAASyrB,EAAoByB,EAAEtB,EAAS5rB,IAC5EysB,OAAOU,eAAevB,EAAS5rB,EAAK,CAAEotB,YAAY,EAAMpqB,IAAKiqB,EAAWjtB,MCJ3EyrB,EAAoB4B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAO5L,GACR,GAAsB,iBAAX6L,OAAqB,OAAOA,QALjB,GCAxBhC,EAAoByB,EAAI,SAASQ,EAAKC,GAAQ,OAAOlB,OAAOmB,UAAUC,eAAe7B,KAAK0B,EAAKC,ICC/FlC,EAAoBqC,EAAI,SAASlC,GACX,oBAAXmC,QAA0BA,OAAOC,aAC1CvB,OAAOU,eAAevB,EAASmC,OAAOC,YAAa,CAAE/c,MAAO,WAE7Dwb,OAAOU,eAAevB,EAAS,aAAc,CAAE3a,OAAO,KCLvDwa,EAAoBwC,IAAM,SAASpC,GAGlC,OAFAA,EAAOqC,MAAQ,GACVrC,EAAO9qB,WAAU8qB,EAAO9qB,SAAW,IACjC8qB,G,WCER,IAAIsC,EAAkB,CACrBC,IAAK,GAaN3C,EAAoBS,EAAEM,EAAI,SAAS6B,GAAW,OAAoC,IAA7BF,EAAgBE,IAGrE,IAAIC,EAAuB,SAASC,EAA4BrrB,GAC/D,IAKIwoB,EAAU2C,EALVlC,EAAWjpB,EAAK,GAChBsrB,EAActrB,EAAK,GACnBurB,EAAUvrB,EAAK,GAGIe,EAAI,EAC3B,IAAIynB,KAAY8C,EACZ/C,EAAoByB,EAAEsB,EAAa9C,KACrCD,EAAoBQ,EAAEP,GAAY8C,EAAY9C,IAGhD,GAAG+C,EAAS,IAAIze,EAASye,EAAQhD,GAEjC,IADG8C,GAA4BA,EAA2BrrB,GACrDe,EAAIkoB,EAASjoB,OAAQD,IACzBoqB,EAAUlC,EAASloB,GAChBwnB,EAAoByB,EAAEiB,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgBhC,EAASloB,IAAM,EAEhC,OAAOwnB,EAAoBS,EAAElc,IAG1B0e,EAAqBC,KAA+B,yBAAIA,KAA+B,0BAAK,GAChGD,EAAmBhtB,QAAQ4sB,EAAqBM,KAAK,KAAM,IAC3DF,EAAmBxsB,KAAOosB,EAAqBM,KAAK,KAAMF,EAAmBxsB,KAAK0sB,KAAKF,I,GC7CvF,IAAIG,EAAsBpD,EAAoBS,OAAEjO,EAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,WAAa,OAAOwN,EAAoB,UAChLoD,EAAsBpD,EAAoBS,EAAE2C,G","file":"app.xxxxxxxxxxxxxxxxxxxx.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import {useState, useEffect} from \"react\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"/backend/\",\r\n    timeout: 5000,\r\n});\r\n\r\n//token handler for managing token auth, unexposed\r\nconst createTokenProvider = () => {\r\n\r\n    /* Implementation */\r\n    let token = JSON.parse(localStorage.getItem(\"REACT_TOKEN_AUTH\"));\r\n\r\n    /* observer/subscriber list  */\r\n    let observers = [];\r\n\r\n    //fetch token\r\n    const getToken = async () => {\r\n        // if a valid token exists, return it\r\n        if (token) {\r\n            return token;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // return true if token != null\r\n    const isLoggedIn = () => {\r\n        return !!token;\r\n    };\r\n\r\n    // pushes a method from object subscribing\r\n    const subscribe = (observer) => {\r\n        observers.push(observer);\r\n    };\r\n    \r\n    // removes method from object unsubscribing\r\n    const unsubscribe = (observer) => {\r\n        observers = observers.filter(_observer => _observer !== observer);\r\n    };\r\n\r\n    // notifies members in observers, basically running the method\r\n    const notify = () => {\r\n        const isLogged = isLoggedIn();\r\n        observers.forEach(observer => observer(isLogged));\r\n    };\r\n\r\n    // sets token to local storage and instance token variable\r\n    const setToken = (_token=null) => {\r\n\r\n        if (_token) {\r\n            localStorage.setItem(\"REACT_TOKEN_AUTH\", JSON.stringify(_token));\r\n        } else {\r\n            localStorage.removeItem(\"REACT_TOKEN_AUTH\");\r\n        }\r\n        token = _token;\r\n        notify();\r\n    };\r\n\r\n    return {\r\n        getToken,\r\n        isLoggedIn,\r\n        setToken,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n};\r\n\r\n// handler exposed for auth/login/token verification \r\nconst createAuthProvider = () => {\r\n\r\n    /* Implementation */\r\n\r\n    // handler to set token\r\n    const login = (token) => {\r\n        tokenProvider.setToken(token);\r\n    };\r\n    \r\n    // handler to remove token\r\n    const logout = () => {\r\n        tokenProvider.setToken(null);\r\n    };\r\n\r\n    // react hook to check auth status\r\n    const useAuth = () => {\r\n\r\n        const [isLogged, setIsLogged] = useState(tokenProvider.isLoggedIn());\r\n    \r\n        useEffect(() => {\r\n            const listener = (newIsLogged) => {\r\n                setIsLogged(newIsLogged);\r\n            };\r\n    \r\n            tokenProvider.subscribe(listener);\r\n            return () => {\r\n                tokenProvider.unsubscribe(listener);\r\n            };\r\n        }, []);\r\n    \r\n        return isLogged;\r\n    };\r\n\r\n    // for making authenticated requests\r\n    const server = () => {\r\n\r\n        const prepareHeader = async () => {\r\n\r\n            const tokenObj = await tokenProvider.getToken();\r\n            let token = `Token ${tokenObj ? tokenObj[\"key\"] : \"\"}`;\r\n            axiosInstance.defaults.headers.common[\"Authorization\"] = token;\r\n            axiosInstance.defaults.headers.common[\"Accept\"] = \"application/json\";\r\n        };\r\n\r\n        const get = async (url, data) => {\r\n            await prepareHeader();\r\n            let response;\r\n            if (data) {\r\n                response = await axiosInstance.get(url, {params: data});\r\n                return response;\r\n            }\r\n            response = await axiosInstance.get(url);\r\n            return response;\r\n        };\r\n\r\n        const post = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.post(url, data);\r\n            return response;\r\n        };\r\n        \r\n        const remove = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.delete(url, data);\r\n            return response;\r\n        };\r\n        \r\n        const edit = async (url, data) => {\r\n            await prepareHeader();\r\n            let response = await axiosInstance.put(url, data);\r\n            return response;\r\n        };\r\n\r\n        const getCookie = (name) => {\r\n            let cookieValue = null;\r\n            if (document.cookie && document.cookie !== \"\") {\r\n                const cookies = document.cookie.split(\";\");\r\n                for (let i = 0; i < cookies.length; i++) {\r\n                    const cookie = cookies[i].trim();\r\n                    // Does this cookie string begin with the name we want?\r\n                    if (cookie.substring(0, name.length + 1) === (name + \"=\")) {\r\n                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return cookieValue;\r\n        };\r\n\r\n        return {get, post, remove, edit, getCookie};\r\n    };\r\n\r\n    const apiFecthResource = server();\r\n\r\n    return {\r\n        useAuth,\r\n        apiFecthResource,\r\n        login,\r\n        logout\r\n    };\r\n};\r\n\r\nconst tokenProvider = createTokenProvider();\r\n\r\nexport {tokenProvider};\r\nexport const {login, logout, useAuth, apiFecthResource} = createAuthProvider();","import React from 'react';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide \r\n            ref={ref}\r\n            {...props}\r\n            timeout={{ enter: 150, exit: 300,}} />;\r\n});\r\n\r\nexport default SlideTransition","import React from 'react'\r\nimport { SnackbarProvider } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SlideTransition from './SlideTransition'\r\n\r\n\r\nconst notistackRef = React.createRef();\r\nconst onClickDismiss = key => () => { \r\n    notistackRef.current.closeSnackbar(key);\r\n}\r\n\r\nconst CustomSnackbarProvider = (props) => {\r\n\r\n    return(\r\n        <SnackbarProvider \r\n            dense\r\n            preventDuplicate\r\n            maxSnack={3} \r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }}\r\n            TransitionComponent={SlideTransition}\r\n            ref={notistackRef}\r\n            action={(key) => (\r\n            <IconButton onClick={onClickDismiss(key)}>\r\n                <CloseIcon/>\r\n            </IconButton>)}\r\n        >\r\n          {props.children}\r\n        </SnackbarProvider>\r\n    )\r\n}\r\n\r\nexport default CustomSnackbarProvider;","import { createSlice, createAsyncThunk, } from \"@reduxjs/toolkit\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\n// axios instance with base url\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"http://127.0.0.1:8000/\",\r\n    timeout: 4000,\r\n});\r\n\r\nconst initialState = {\r\n    data: {\r\n        status: \"stale\",\r\n        email: null,\r\n        user_profile: {\r\n            profile_picture: null,\r\n            birth_date: null\r\n        }\r\n    },\r\n};\r\n\r\nexport const fetchUserData = createAsyncThunk(\"user/fetchUserData\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.get(\"/users/get_user_detail/\");\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const editProfileData = createAsyncThunk(\"user/editProfileData\", async (passedArgs, { rejectWithValue, getState }) => {\r\n\r\n    try {\r\n        const { user } = getState();\r\n        let response = await apiFecthResource.edit(`/profiles/${user.data.id}/`, passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const updateUserPassword = createAsyncThunk(\"user/updateUserPassword\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/change/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const resetUserPassword = createAsyncThunk(\"user/resetUserPassword\", async (passedArgs, {rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/reset/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const confirmPasswordReset = createAsyncThunk(\"user/confirmPasswordReset\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await apiFecthResource.post(\"/dj-rest-auth/password/reset/confirm/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:[\"Link expired\"]});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\nexport const confirmUserEmail = createAsyncThunk(\"user/confirmUserEmail\", async (passedArgs, { rejectWithValue }) => {\r\n\r\n    try {\r\n        let response = await axiosInstance.post(\"/dj-rest-auth/registration/verify-email/\", passedArgs);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors:[\"Link expired\"]});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchUserData.fulfilled]: (state, action) => {\r\n            state.data = {\r\n                status: \"loaded\",\r\n                ...action.payload\r\n            };\r\n        },\r\n        [fetchUserData.rejected]: (state) => {\r\n            state.data.status = \"stale\";\r\n        },\r\n        [editProfileData.fulfilled]: (state, action) => {\r\n            state.data.user_profile = action.payload;\r\n            state.status = \"loaded\";\r\n        },\r\n        [editProfileData.rejected]: (state) => {\r\n            state.data.status = \"stale\";\r\n        },\r\n    }\r\n});\r\n\r\nexport const selectEmailConfirmationStatus = state => state.user.emailConfirmation;\r\nexport const selectUserDetailStatus = state => state.user.data.status;\r\nexport const selectUserEmail = state => state.user.data.email;\r\nexport const selectUserUsername = state => state.user.data.username;\r\nexport const selectUserProfilePic = state => state.user.data.user_profile.profile_picture;\r\nexport const selectUserBdate = state => state.user.data.user_profile.birth_date;\r\n\r\nexport default userSlice.reducer;","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter, createSelector\r\n} from \"@reduxjs/toolkit\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\nimport {removeCardFromDecks, updateCardInDeck} from \"../decks/deckSlice\";\r\n\r\nconst cardsAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n});\r\n\r\nconst initialState = cardsAdapter.getInitialState({\r\n    loading: \"idle\",\r\n    status: \"stale\",\r\n    error: {\r\n        isErrored: false,\r\n        message: \"\",\r\n    }\r\n});\r\n\r\nexport const fetchCards = createAsyncThunk(\"cards/fetchCards\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n\r\n        let url = \"notes/\";\r\n        response = await apiFecthResource.get(url);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({non_field_errors: \"Invalid Request was made\"});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const addNewCard = createAsyncThunk(\"cards/addNewCard\", async (params, { dispatch, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post(\"notes/\", params);\r\n        dispatch(updateCardInDeck({newCard: response.data, type: \"create\"}));\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const removeCard = createAsyncThunk(\"cards/removeCard\", async (params, {getState, dispatch, rejectWithValue}) => {\r\n\r\n    try {\r\n        let url = `notes/${params}/`;\r\n        await apiFecthResource.remove(url);\r\n        const {cards} = getState();\r\n        let deletedCard = cards.entities[params];\r\n        dispatch(removeCardFromDecks({delCard: deletedCard}));\r\n        return params;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const editCard = createAsyncThunk(\"cards/editCard\", async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    \r\n    try {\r\n        const {id, requestBody} = params;\r\n        let url = `notes/${id}/`;\r\n        let response = await apiFecthResource.edit(url, requestBody);\r\n        const {cards} = getState();\r\n        let prevCard = cards.entities[id];\r\n        dispatch(updateCardInDeck({prevCard, newCard: response.data, type: \"update\"}));\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            console.log(err.response);\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const searchCards = createAsyncThunk(\"cards/searchCards\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = \"search/\";\r\n        response = await apiFecthResource.get(url, params);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nconst cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState,\r\n    reducers: {\r\n        clearCards(state) {\r\n            cardsAdapter.removeAll(state);\r\n            state.status = \"stale\";\r\n        },\r\n        setStale(state) {\r\n            state.status = \"stale\";\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchCards.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [fetchCards.fulfilled]: (state, action) => {\r\n            cardsAdapter.upsertMany(state, action.payload);\r\n            state.loading = \"loaded\";\r\n            state.status = \"updated\";\r\n        },\r\n        [addNewCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.addOne(state, action.payload);\r\n        },\r\n        [editCard.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload[\"id\"],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n            cardsAdapter.updateOne(state, updObj);\r\n        },\r\n        [removeCard.fulfilled]: (state, action) => {\r\n            cardsAdapter.removeOne(state, action.payload);\r\n        },\r\n        [fetchCards.rejected]: (state) => {\r\n            state.loading = \"failed\";\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllCards,\r\n    selectById: selectCardById,\r\n    selectIds: selectCardsIds,\r\n    selectTotal: selectCardsTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = cardsAdapter.getSelectors(state => state.cards);\r\n\r\nexport const {clearCards, setStale} = cardsSlice.actions;\r\n\r\nexport const selectCardsStatus = (state) => state.cards.status;\r\n\r\nexport const selectCardsLoadingStatus = createSelector(\r\n    [selectAllCards],\r\n    (cards) => cards.loading\r\n);\r\nexport const selectDecksByCardId = createSelector(\r\n    [selectAllCards, (state, cardId) => cardId],\r\n    (cards, cardId) => cards[cardId].notebook\r\n);\r\n\r\nexport default cardsSlice.reducer;","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nconst InputFormLayout = (props) => {\r\n\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row fluid=\"true\">\r\n                <Col>\r\n                    {props.input}\r\n                </Col>\r\n                <Col xs=\"auto\" xl=\"auto\" lg=\"auto\">\r\n                    {props.options}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst getArrayDifference = (arrayA, arrayB) => {\r\n    let _difference = new Set(arrayA)\r\n    for (let elem of arrayB) {\r\n        _difference.delete(elem)\r\n    }\r\n    return [..._difference]\r\n}\r\n\r\nconst getArrayIntersection = (arrayA, arrayB) => {\r\n    let _intersection = []\r\n    for (let elem of arrayB) {\r\n        if (arrayA.includes(elem)) {\r\n            _intersection.push(elem)\r\n        }\r\n    }\r\n    return _intersection\r\n}\r\n\r\nexport { InputFormLayout, \r\n    getArrayDifference, getArrayIntersection\r\n};","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from \"@reduxjs/toolkit\";\r\nimport {setStale, fetchCards} from \"../cards/cardsSlice\";\r\nimport {apiFecthResource} from \"../../api/api\";\r\nimport {getArrayDifference} from \"../utils/utilities\";\r\n\r\nconst decksAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (deck) => deck.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n});\r\n\r\nconst initialState = decksAdapter.getInitialState({\r\n    loading: \"idle\",\r\n    status: \"stale\",\r\n    activeDeck: null,\r\n    error: {\r\n        isErrored: false,\r\n        message: \"\",\r\n    }\r\n});\r\n\r\nexport const fetchDecks = createAsyncThunk(\"decks/fetchDecks\", async (params, { rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = \"notebooks/\";\r\n        response = await apiFecthResource.get(url);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue({message: \"Invalid Request was made\"});\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({message: \"No Response recieved from server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const addNewDeck = createAsyncThunk(\"decks/addNewDeck\", async (params, {rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        response = await apiFecthResource.post(\"notebooks/\", params);\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const removeDeckById = createAsyncThunk(\"decks/removeDeckById\", async (params, { dispatch, rejectWithValue}) => {\r\n\r\n    try {\r\n        let url = `notebooks/${params}/`;\r\n        await apiFecthResource.remove(url);\r\n        dispatch(removeDeck(params));\r\n        return params;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            console.log(err.response);\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nexport const updateDeckCards = createAsyncThunk(\"decks/updateDeckCards\", async (params, {dispatch, rejectWithValue, getState}) => {\r\n\r\n    let response;\r\n    try {\r\n        const {deckId, cards} = params;\r\n        const {decks} = getState();\r\n        let deckName = decks.entities[deckId].name;\r\n        let data = {name: deckName, notebook_notes: cards};\r\n        response = await apiFecthResource.edit(`notebooks/${deckId}/`, data);\r\n        dispatch(setStale());\r\n        dispatch(fetchCards());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n});\r\n\r\nconst decksSlice = createSlice({\r\n    name: \"decks\",\r\n    initialState,\r\n    reducers: {\r\n        clearDecks(state) {\r\n            decksAdapter.removeAll(state);\r\n            state.status = \"stale\";\r\n        },\r\n        removeDeck(state, action) {\r\n            let delDeckId = action.payload;\r\n            let delIndex = state.ids.findIndex((deckId) => deckId === delDeckId);\r\n\r\n            if (state.activeDeck === action.payload) {\r\n                if (delIndex > 0 && state.ids.length > 1 ) {\r\n                    state.activeDeck = state.ids[delIndex - 1];\r\n                } \r\n                else if (delIndex === 0 && state.ids.length > 1 ) {state.activeDeck = state.ids[delIndex + 1];}\r\n                else {state.activeDeck = null;}\r\n            }\r\n            decksAdapter.removeOne(state, action.payload);\r\n        },\r\n        updateActiveDeck(state, action) {\r\n            state.activeDeck = action.payload;\r\n        },\r\n        updateCardInDeck(state, action) {\r\n            let prevCard = action.payload[\"prevCard\"] ? action.payload[\"prevCard\"] : [];\r\n            let newCard = action.payload[\"newCard\"] ? action.payload[\"newCard\"] : [];\r\n            let actionType = action.payload[\"type\"];\r\n\r\n            if (actionType === \"update\") {\r\n                let prevDeckArray = prevCard.notebook.slice();\r\n                let deckDiff = getArrayDifference(prevDeckArray, newCard.notebook);\r\n                deckDiff.forEach(deckId => {\r\n                    let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== prevCard.id);\r\n                    state.entities[deckId].notebook_notes = newArr;\r\n                });\r\n            }\r\n            \r\n            newCard.notebook.forEach(deckId => {\r\n                if (state.entities[deckId].notebook_notes.includes(newCard.id)) return;\r\n                state.entities[deckId].notebook_notes.push(newCard.id);\r\n            });\r\n        },\r\n        removeCardFromDecks(state, action) {\r\n            let deletedCard = action.payload[\"delCard\"];\r\n            const deletedCardId = deletedCard[\"id\"];\r\n            const deletedCardDecks = deletedCard.notebook.slice();\r\n\r\n            deletedCardDecks.forEach(deckId => {\r\n                let newArr = state.entities[deckId].notebook_notes.filter(prevId => prevId !== deletedCardId);\r\n                state.entities[deckId].notebook_notes = newArr;\r\n            });\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchDecks.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [fetchDecks.fulfilled]: (state, action) => {\r\n            decksAdapter.upsertMany(state, action.payload);\r\n            state.loading = \"loaded\";\r\n            state.status = \"updated\";\r\n        },\r\n        [fetchDecks.rejected]: (state) => {\r\n            state.loading = \"failed\";\r\n        },\r\n        [addNewDeck.fulfilled]: (state, action) => {\r\n            decksAdapter.addOne(state, action.payload);\r\n        },\r\n        [updateDeckCards.fulfilled]: (state, action) => {\r\n            const updObj = {\r\n                id: action.payload[\"id\"],\r\n                changes: {\r\n                    ...action.payload\r\n                }\r\n            };\r\n            decksAdapter.updateOne(state, updObj);\r\n        },\r\n    }\r\n});\r\n\r\nexport const {\r\n    selectAll: selectAllDecks,\r\n    selectById: selectDeckById,\r\n    selectIds: selectDecksIds,\r\n    selectTotal: selectDeckTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = decksAdapter.getSelectors(state => state.decks);\r\nexport const selectDecksStatus = (state) => state.decks.status;\r\nexport const selectActiveDeck = (state) => state.decks.activeDeck;\r\nexport const selectCardsByDeckId = (state, id) => {\r\n    if (id === null || id === undefined) return [];\r\n    let arr = selectDeckById(state, id).notebook_notes;\r\n    return arr;\r\n};\r\n\r\nexport const {updateActiveDeck, removeCardFromDecks, updateCardInDeck, removeDeck, clearDecks} = decksSlice.actions;\r\n\r\nexport default decksSlice.reducer;","import { createSlice, createAsyncThunk, } from \"@reduxjs/toolkit\";\r\nimport {login, logout, apiFecthResource} from \"../../api/api\";\r\nimport {fetchUserData} from \"./userSlice\";\r\nimport {clearDecks} from \"../decks/deckSlice\";\r\nimport {clearCards} from \"../cards/cardsSlice\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst initialState = {\r\n    token: null,\r\n    authenticated: false,\r\n    loading: \"idle\",\r\n};\r\n\r\nexport const userLogin = createAsyncThunk(\"auth/userLogin\", async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const loginValues = passedArgs;\r\n    try {\r\n        let response = await axios.post(\"/backend/dj-rest-auth/login/\", loginValues);\r\n        dispatch(setAuthToken(response.data));\r\n        login(response.data);\r\n        dispatch(fetchUserData());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:\"Unable to reach server\"});\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nexport const userLogout = createAsyncThunk(\"auth/userLogout\", async (passedArgs, { dispatch }) => {\r\n    await apiFecthResource.post(\"dj-rest-auth/logout/\");\r\n    logout();\r\n    dispatch(clearAuthToken());\r\n    dispatch(clearCards());\r\n    dispatch(clearDecks());\r\n});\r\n\r\nexport const userSignup = createAsyncThunk(\"auth/userSignup\", async (passedArgs, {dispatch, rejectWithValue }) => {\r\n\r\n    const requestBody = passedArgs;\r\n    try {\r\n        let response = await axios.post(\"dj-rest-auth/registration/\", requestBody);\r\n        dispatch(setAuthToken(response.data));\r\n        login(response.data);\r\n        dispatch(fetchUserData());\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data);\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue({non_field_errors:[\"Unable to reach server\"]});\r\n        }\r\n    }\r\n    \r\n});\r\n\r\nconst authenticationSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setAuthToken(state, action) {\r\n            state.token = action.payload[\"key\"];\r\n            state.authenticated = true;\r\n        },\r\n        clearAuthToken(state) {\r\n            state.token = null;\r\n            state.authenticated = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [userLogin.pending]: (state) => {\r\n            state.loading = \"loading\";\r\n        },\r\n        [userLogin.fullfilled]: (state) => {\r\n            state.loading = \"loaded\";\r\n        },\r\n        [userSignup.fulfilled]: (state) => {\r\n            state.loading = \"loaded\";\r\n        },\r\n    }\r\n});\r\n\r\n\r\nexport const authTokenSelector = (state) => state.auth.token;\r\nexport const authStatusSelector = (state) => state.auth.authenticated;\r\n\r\nexport const {clearAuthToken, setAuthToken} = authenticationSlice.actions;\r\n\r\nexport default authenticationSlice.reducer;","import React from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {TextField, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Link } from \"@material-ui/core\";\r\nimport {\r\n    updateUserPassword, resetUserPassword,\r\n    selectUserDetailStatus, fetchUserData,\r\n    selectUserEmail\r\n} from \"./userSlice\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n        display: \"none\",\r\n    },\r\n    root: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        alignContent: \"flex-start\",\r\n        boxShadow: `0px 1px 4px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: \"8px\",\r\n        margin: \"auto\",\r\n        padding: \".4em .5em\",\r\n        minHeight: \"inherit\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileCardMini: {\r\n        minWidth: \"80px\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCard: {\r\n        minWidth: \"80%\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    cancelButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\nconst AccountMangementPage = () => {\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus);\r\n    const dispatch = useDispatch();\r\n    \r\n    React.useEffect(() => {\r\n        if (userDetailStatus === \"stale\") {\r\n            dispatch(fetchUserData());\r\n        }\r\n    }, [userDetailStatus, dispatch]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <PasswordChangeForm />\r\n            <PasswordResetRequest/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PasswordChangeForm = () => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // material styles\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            old_password: \"\",\r\n            new_password1: \"\",\r\n            new_password2: \"\"\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(updateUserPassword(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Password Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        const {\r\n                            old_password, new_password1,\r\n                            new_password2, non_field_errors\r\n                        } = result.payload;\r\n                        formikBag.setErrors({\r\n                            old_password: old_password ? old_password.toString(): \"\",\r\n                            new_password1: new_password1 ? new_password1.toString(): \"\",\r\n                            new_password2: new_password2 ? new_password2.toString(): \"\",\r\n                            non_field_errors: non_field_errors ? non_field_errors.toString(): \"\",\r\n                        });\r\n                        enqueueSnackbar(\"Error Updating Password\", {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            old_password: Yup.string().required(\"Required\"),\r\n            new_password1: Yup.string().required(\"Required\"),\r\n            new_password2: Yup.string().required(\"Required\"),\r\n        })\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <form className={classes.profileCard} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    id=\"filled-old_password-input\"\r\n                    name=\"old_password\"\r\n                    label=\"Old Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.old_password}\r\n                    helperText={formik.errors.old_password}\r\n                    value={formik.values.old_password}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    id=\"filled-new_password1-input\"\r\n                    name=\"new_password1\"\r\n                    label=\"New Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.new_password1}\r\n                    helperText={formik.errors.new_password1}\r\n                    value={formik.values.new_password1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    id=\"filled-new_password2-input\"\r\n                    name=\"new_password2\"\r\n                    label=\"New Password Again\"\r\n                    type=\"password\"\r\n                    autoComplete=\"new-password\"\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    error={!!formik.errors.new_password2}\r\n                    helperText={formik.errors.new_password2}\r\n                    value={formik.values.new_password2}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <Button variant=\"contained\" \r\n                    onClick={formik.handleSubmit} \r\n                    margin=\"dense\" \r\n                    className={classes.topMargin}\r\n                    disabled={formik.isSubmitting}\r\n                >\r\n                Update Password\r\n                </Button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PasswordResetRequest = () => {\r\n    // redux \r\n    const dispatch = useDispatch();\r\n    const userEmail = useSelector(selectUserEmail);\r\n    // react\r\n    const [open, setOpen] = React.useState(false);\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material styles\r\n    const classes = useStyles();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: userEmail ? userEmail : \"\"\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(resetUserPassword(values))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Password Reset link Queued\", { \r\n                            variant: \"success\",\r\n                        });\r\n                        setOpen(false);\r\n                    } else {\r\n                        const {\r\n                            email, non_field_errors\r\n                        } = result.payload;\r\n                        formikBag.setErrors({\r\n                            email: email ? email.toString(): \"\",\r\n                            non_field_errors: non_field_errors ? non_field_errors.toString(): \"\",\r\n                        });\r\n                        enqueueSnackbar(`Error ${non_field_errors.toString()}`, {\r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link\r\n                component=\"button\"\r\n                variant='subtitle2'\r\n                onClick={handleClickOpen}\r\n                className={classes.topMargin}\r\n                color=\"inherit\"\r\n            >\r\n            Forgot Password? Click here to request a password reset\r\n            </Link>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-password-reset\">\r\n                <DialogTitle id=\"form-dialog-password-reset\">Password Reset</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                Enter your email address and we will forward you a password reset link\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        color=\"secondary\"\r\n                        name=\"email\"\r\n                        margin=\"dense\"\r\n                        id=\"emailForm\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        defaultValue={formik.values.email}\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} className={classes.cancelButton}>\r\n                Cancel\r\n                    </Button>\r\n                    <Button onClick={formik.handleSubmit} color=\"default\">\r\n                Request Reset\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountMangementPage;\r\nexport {PasswordResetRequest, PasswordChangeForm};","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { Button, TextField, Typography, Link } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {userLogin} from './authenticationSlice'\r\nimport {PasswordResetRequest} from './AccountMangementPage'\r\nimport {useFormik } from 'formik';\r\nimport {Container} from 'react-bootstrap';\r\nimport { useSnackbar } from 'notistack';\r\nimport GoogleLogin from 'react-google-login';\r\nimport {useAuth} from '../../api/api'\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flex: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '80%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonForm: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    buttonWrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '24px',\r\n        left: '32px',\r\n        marginTop: -8,\r\n        marginLeft: -8,\r\n        zIndex: 1\r\n    },\r\n}));\r\n\r\nconst LoginForm = (props) => {\r\n    //  auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // router\r\n    const history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // useeffect\r\n    React.useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.replace('/cards')\r\n        }\r\n    },[isAuthenticated])\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues:{username: '', password: ''},\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userLogin(values))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'rejected') {\r\n                    const {\r\n                        username, password,\r\n                        non_field_errors\r\n                    } = result.payload;\r\n                    \r\n                    formikBag.setErrors({\r\n                        username: username ? username.toString() : 'Invalid Credentials',\r\n                        password: password ? password.toString() : 'Invalid Credentials',\r\n                    })\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() :'Authenticaton Error', { \r\n                        variant: 'error',\r\n                    });\r\n                    formikBag.setSubmitting(false)\r\n                }\r\n            })\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n            .min(4, 'Must be more than 4 characters')\r\n            .required('Required'),\r\n        })\r\n    })\r\n    return (\r\n        <>\r\n        <Container className={classes.flex} fluid>\r\n            <Typography variant=\"h3\" className={classes.buttonForm}> Welcome to Carded </Typography>\r\n            <Typography variant=\"subtitle1\" className={classes.buttonForm}> Please Login to continue or click <Link href=\"/signup\" color=\"inherit\">here</Link> to register an account </Typography>\r\n            <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    id=\"id-username\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete=\"username\"\r\n                    error={!!formik.errors.username}\r\n                    helperText={!!formik.errors.username && formik.errors.username}\r\n                    fullWidth\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    autoComplete=\"current-password\"\r\n                    error={!!formik.errors.password}\r\n                    /* value={formik.values.password} */\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <div className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        type=\"submit\"\r\n                        disabled={formik.isSubmitting}\r\n                        className={classes.buttonForm}\r\n                        margin='dense'\r\n                        >\r\n                        Login\r\n                    </Button>\r\n                    <Typography variant=\"body1\" className={classes.buttonForm}> or </Typography>\r\n                    {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n            </form>\r\n            <PasswordResetRequest/>\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nconst GoogleAuthButton = (props) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <GoogleLogin\r\n        clientId={'316539219448-qtvdqd6iban1fbqajma9nbjdq5f75g70.apps.googleusercontent.com'}\r\n        onSuccess={(response) => console.log(response)}\r\n        onFailure={(err, detail) => console.log(err, detail)}\r\n        render={renderProps => (\r\n            <Button variant=\"contained\" className={classes.buttonForm} onClick={renderProps.onClick} disabled={renderProps.disabled}>This is my custom Google button</Button>\r\n        )}\r\n        cookiePolicy={'http://localhost:3000'}\r\n        responseType={'code'}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { Button, TextField, Typography } from '@material-ui/core';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {useDispatch} from 'react-redux'\r\nimport { useSnackbar } from 'notistack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Container} from 'react-bootstrap';\r\nimport {userSignup} from './authenticationSlice'\r\nimport * as Yup from 'yup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flex: {\r\n      display: 'flex',\r\n      alignContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center'\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '80%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    buttonForm: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    buttonWrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.main,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nconst SignupForm = (props) => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: { username: '', password1: '', password2: '', email: '' },\r\n        onSubmit: (values, formikBag) => {\r\n            dispatch(userSignup(values))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === 'fulfilled') {\r\n                    enqueueSnackbar('Account Created Successfully', { \r\n                        variant: 'success',\r\n                    });\r\n                    setformSubmitting(false)\r\n                } else {\r\n                    setformSubmitting(false)\r\n                    const {\r\n                        username, password1,\r\n                        password2, email, non_field_errors\r\n                    } = result.payload;\r\n                    formikBag.setErrors({\r\n                        username: username ? username.toString(): '',\r\n                        password1: password1 ? password1.toString(): '',\r\n                        password2: password2 ? password2.toString(): '',\r\n                        email: email ? email.toString(): '',\r\n                        non_field_errors: non_field_errors ? non_field_errors.toString(): '',\r\n                    })\r\n                    enqueueSnackbar(non_field_errors ? non_field_errors.toString() : 'Error, Try again', {\r\n                        variant: 'error',\r\n                    });\r\n                }\r\n                formikBag.setSubmitting(false)\r\n            })\r\n        },\r\n        validationSchema: Yup.object({\r\n            username: Yup.string()\r\n              .max(18, 'Must be 18 characters or less')\r\n              .min(4, 'Must be more than 4 characters')\r\n              .required('Required'),\r\n            password1: Yup.string()\r\n              .required('Required'),\r\n            password2: Yup.string()\r\n              .required('Required'),\r\n            email: Yup.string().email('Invalid email address').required('Required'),\r\n        })\r\n    })\r\n \r\n    return (\r\n        <>\r\n        <Container className={classes.flex} fluid>\r\n            <Typography variant=\"h3\" className={classes.buttonForm}> Register for a carded account </Typography>\r\n            <form noValidate className={classes.root} onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    id=\"id-username\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'username'}\r\n                    error={!!formik.errors.username && !!formik.touched.username}\r\n                    helperText={!!formik.errors.username && !!formik.touched.username && formik.errors.username}\r\n                    fullWidth\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    id=\"id-email\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'email'}\r\n                    error={!!formik.errors.email && !!formik.touched.email}\r\n                    helperText={!!formik.errors.email && !!formik.touched.email && formik.errors.email}\r\n                    fullWidth\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password1\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password1\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'new-password'}\r\n                    error={!!formik.errors.password1 && !!formik.touched.password1}\r\n                    helperText={!!formik.errors.password1 && !!formik.touched.password1 && formik.errors.password1}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <TextField\r\n                    name=\"password2\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    id=\"id-password2\"\r\n                    margin=\"dense\"\r\n                    color=\"secondary\"\r\n                    autoComplete={'new-password'}\r\n                    error={!!formik.errors.password2 && !!formik.touched.password2}\r\n                    helperText={!!formik.errors.password2 && !!formik.touched.password2 && formik.errors.password2}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                />\r\n                <div className={classes.buttonWrapper}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        type=\"submit\"\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={formik.isSubmitting}\r\n                        className={classes.buttonForm}\r\n                        >\r\n                        Sign up\r\n                    </Button>\r\n                    {formik.isSubmitting && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                </div>\r\n            </form>\r\n        </Container>\r\n        </>\r\n    );\r\n};\r\n\r\n/* <Formik\r\n        initialValues = {{ username: '', password1: '', password2: '', email: '' }}\r\n        onSubmit={\r\n            async (values) => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                dispatch(userSignup(values))\r\n            }\r\n        }\r\n        validationSchema={\r\n            Yup.object({\r\n                username: Yup.string()\r\n                  .max(15, 'Must be 15 characters or less')\r\n                  .min(5, 'Must be more than 5 characters')\r\n                  .required('Required'),\r\n                password1: Yup.string()\r\n                  .max(20, 'Must be 20 characters or less')\r\n                  .required('Required'),\r\n                password2: Yup.string()\r\n                  .max(20, 'Must be 20 characters or less')\r\n                  .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n            })\r\n        }\r\n        >\r\n            {(formik) => (\r\n            <>\r\n            <Container fluid>\r\n                <FormikForm className=\"baseForm\" noValidate>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                        type=\"Email\"\r\n                        name=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.email && (!formik.errors.email || !signupErrors.email)}\r\n                        isInvalid={!!formik.errors.email || !!signupErrors.email}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.email && formik.errors.email ? 'invalid' : 'valid'}>\r\n                            {formik.errors.email}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.email && \r\n                            <Form.Control.Feedback type={'invalid'}>\r\n                            {signupErrors.email}\r\n                            </Form.Control.Feedback>\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={formik.values.username}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.username && (!formik.errors.username || !signupErrors.username)}\r\n                        isInvalid={!!formik.errors.username || !!signupErrors.username}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.username && formik.errors.username ? 'invalid' : 'valid'}>\r\n                            {formik.errors.username}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.username && \r\n                            <Form.Control.Feedback type={'invalid'}>\r\n                            {signupErrors.username}\r\n                            </Form.Control.Feedback>\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password1\"\r\n                        value={formik.values.password1}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.password1 && (!formik.errors.password1 || !signupErrors.password1)}\r\n                        isInvalid={!!formik.errors.password1 || !!signupErrors.password1}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.password1 && formik.errors.password1 ? 'invalid' : 'valid'}>\r\n                            {formik.errors.password1}\r\n                        </Form.Control.Feedback>\r\n                        { signupErrors.password1 && \r\n                            signupErrors.password1.map((errormsg, index) => {\r\n                                return (\r\n                                    <Form.Control.Feedback key={index} type={'invalid'}>\r\n                                        {errormsg}\r\n                                    </Form.Control.Feedback>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Password Again:</Form.Label>\r\n                        <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password2\"\r\n                        value={formik.values.password2}\r\n                        onChange={formik.handleChange}\r\n                        isValid={formik.touched.password2 && !formik.errors.password2}\r\n                        isInvalid={!!formik.errors.password2}\r\n                        />\r\n                        <Form.Control.Feedback type={formik.touched.password2 && formik.errors.password2 ? 'invalid' : 'valid'}>\r\n                            {formik.errors.password2}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        SignUp\r\n                    </Button>\r\n                </FormikForm>\r\n            </Container>\r\n            </>\r\n            )}\r\n        </Formik> */\r\n\r\nexport default SignupForm;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\nimport {selectActiveDeck} from \"../decks/deckSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: \"0.4em 1em\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n        borderRadius: \".4em\"\r\n    },\r\n    innerForm: {\r\n        padding: \"0.4em 0.4em\",\r\n        border: `0.5px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: \".5em\",\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    Decks: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n    },\r\n    innerDecks: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"auto 1fr\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"1em\",\r\n        [theme.breakpoints.between(\"100\", \"500\")]: {\r\n            gridTemplateColumns: \"none\",\r\n            gridTemplateRows: \"auto\"\r\n        },\r\n    },\r\n    innerListForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"nowrap\",\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.secondary.light}`,\r\n        borderRadius: \".8em\",\r\n        [theme.breakpoints.between(\"100\", \"500\")]: {\r\n            maxHeight: \"200px\"\r\n        },\r\n    },\r\n    innerCards: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    deckList: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    formContainer: {\r\n        width: \"100%\",\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr auto\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"1em\"\r\n    },\r\n}));\r\n\r\nconst MainBodyLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n    // decks\r\n    const deck = props.deck;\r\n    // deckform\r\n    const deckForm = props.deckForm;\r\n    // cards\r\n    const cards = props.cards;\r\n    // search\r\n    const search = props.search;\r\n    // selected deck\r\n    const selectedDeckId = useSelector(selectActiveDeck);\r\n\r\n    return(\r\n        <div className={classes.wrapperMain}>\r\n            <div className={classes.innerForm}>\r\n                {props.input}\r\n            </div>\r\n            {cards && \r\n            <div className={classes.innerCards}>\r\n                {props.body}\r\n            </div>\r\n            }\r\n            {search && \r\n            <div className={classes.innerCards}>\r\n                {props.searchBody}\r\n            </div>\r\n            }\r\n            { deck &&\r\n            <div className={classes.Decks}>\r\n                <ListGroup horizontal className={classes.deckList}>\r\n                    {props.deckList}\r\n                </ListGroup>\r\n                <div className={classes.innerDecks}>\r\n                    {selectedDeckId && \r\n                        <div className={classes.innerListForm}>\r\n                            {deckForm}\r\n                        </div>\r\n                    }\r\n                    <div className={classes.innerCards}>\r\n                        {props.decks}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst InputFormLayout = (props) => {\r\n    // material classes\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.formContainer}>\r\n            <div className={classes.inputContainer}>\r\n                {props.input}\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n                {props.options}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport {InputFormLayout, MainBodyLayout};","import React from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst CustomBackdrop = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Backdrop open={true} color=\"primary\" className={classes.backdrop}>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\n/* export default CustomBackdrop; */\r\nexport default React.forwardRef((props, ref) => <CustomBackdrop {...props} forwardedRef={ref} />);","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useFormik } from \"formik\";\r\nimport {TextField, Button,} from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewCard} from \"./cardsSlice\";\r\nimport {InputFormLayout} from \"../ui/uiFormat\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    baseCardForm: {\r\n        width: \"100%\",\r\n        marginBottom: theme.spacing(1),\r\n        display: \"grid\",\r\n        gridTemplateRows: \"auto\",\r\n        gap: \"1em\"\r\n    },\r\n    cardFormButtonsGroup: {\r\n        display: \"flex\"\r\n    },\r\n    formButton: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    deleteButton: {\r\n        margin: theme.spacing(1),\r\n        color: theme.palette.warning.main,\r\n        borderColor: theme.palette.warning.main,\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CustomCardInput = () => {\r\n    \r\n    // react \r\n    const [showInput, setShowInput] = useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n        },\r\n        onSubmit: async (values) => {\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            if (values.title === \"\") {\r\n                delete values.title;\r\n            }\r\n            const requestBody = {\r\n                ...values\r\n            };\r\n            dispatch(addNewCard(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        formik.handleReset();\r\n                        setShowInput(false);\r\n                        enqueueSnackbar(\"Card Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating card\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    });\r\n    // material classes\r\n    const classes = useStyles();\r\n    // handle focuseEvent\r\n    const handleFocus = () => {\r\n        setShowInput(true);\r\n    };\r\n    const handleClose = () => {\r\n        setShowInput(false);\r\n    };\r\n\r\n    return(\r\n        <InputFormLayout\r\n            input={\r\n                <form className={classes.baseCardForm} autoComplete=\"off\" noValidate onSubmit={formik.handleSubmit}>\r\n                    {showInput && \r\n                    <TextField \r\n                        id=\"title-basic\" \r\n                        name=\"title\" \r\n                        label=\"Title\" \r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        onChange={formik.handleChange} \r\n                        margin=\"dense\"/>\r\n                    }\r\n                    <TextField id=\"content-basic\"\r\n                        name=\"content\" \r\n                        label=\"New Card\" \r\n                        variant=\"outlined\" \r\n                        color=\"secondary\"\r\n                        onChange={formik.handleChange} \r\n                        onFocus={handleFocus}\r\n                        value={formik.values.content}\r\n                        multiline \r\n                        fullWidth\r\n                        placeholder=\"Start typing to add a new card\"\r\n                    />\r\n                    {showInput && \r\n                <div className={classes.cardFormButtonsGroup}>\r\n                    <Button variant=\"outlined\"\r\n                        color=\"secondary\" \r\n                        onClick={formik.handleSubmit} \r\n                        className={classes.formButton}\r\n                        disabled={!formik.dirty}\r\n                    > Save Card</Button>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose} className={classes.deleteButton}> Cancel</Button>\r\n                </div>\r\n                    }\r\n                </form>\r\n            }\r\n\r\n            options={\r\n                <InputButtonGroup formik={formik} input={{showInput, setShowInput}}/>\r\n            }\r\n        \r\n        />\r\n    );\r\n};\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {input} = props;\r\n\r\n    return (\r\n        <Button onClick={() => input.setShowInput((state) => !state)}\r\n            variant=\"outlined\"\r\n            color=\"secondary\">{input.showInput ? \"Close\" : \"Expand\"}</Button>\r\n    );\r\n};\r\n\r\nexport default CustomCardInput;","import React, {useState} from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n    removeCard, selectCardById, editCard,\r\n    selectCardsStatus\r\n} from \"./cardsSlice\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {Button, IconButton, Dialog, DialogActions, DialogTitle, DialogContent, TextField, makeStyles} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n/* boxShadow: '-1px 1px 5px 1px rgb(142 142 142 / 75%)', */\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    cardMain: {\r\n        display: \"grid\",\r\n        position: \"relative\",\r\n        gridTemplateRows: \"auto 1fr auto\",\r\n        cursor: \"pointer\",\r\n        padding: \"0.2em\",\r\n        borderRadius: \".4em\",\r\n        overflow: \"hidden\",\r\n        boxShadow: `0px 0px 1px 0px ${theme.palette.text.primary}`,\r\n        width: \"auto\",\r\n        minWidth: \"150px\",\r\n        maxWidth: \"calc((95vw / 2) - 28px)\",\r\n        minHeight: \"220px\",\r\n        maxHeight: \"305px\",\r\n        margin: \"0.3em 0.5em\",\r\n        [theme.breakpoints.up(\"xs\")]: {\r\n            maxWidth: \"calc((95vw / 2) - 28px)\",\r\n            minWidth: \"180px\"\r\n        },\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            maxWidth: \"calc((95vw / 3) - 15px)\",\r\n            minWidth: \"190px\"\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            maxWidth: \"calc((95vw / 4) - 15px)\",\r\n            minWidth: \"200px\"\r\n        },\r\n        [theme.breakpoints.up(\"lg\")]: {\r\n            maxWidth: \"calc((95vw / 5) - 15px)\",\r\n            minWidth: \"210px\"\r\n        },\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            maxWidth: \"calc((95vw / 6) - 15px)\",\r\n            minWidth: \"220px\"\r\n        },\r\n    },\r\n    cardSubject: {\r\n        padding: \".3em\",\r\n        borderBottom: `1px solid ${theme.palette.secondary.dark}`,\r\n        fontWeight: \"600\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\"\r\n    },\r\n    cardContent: {\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        overflowWrap: \"break-word\",\r\n        whiteSpace: \"normal\",\r\n        wordBreak: \"break-all\",\r\n        padding: \".3em\",\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        fontSize: \"1rem\"\r\n    },\r\n    cardExtras: {\r\n        padding: \".2em\",\r\n        display: \"flex\",\r\n        justifySelf: \"stretch\",\r\n        overflow: \"hidden\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n\r\n}));\r\n\r\nconst CardBody = (props) => {\r\n\r\n    const id = props.id;\r\n    // react\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const dispatch = useDispatch();\r\n    const card = useSelector(state => selectCardById(state, id));\r\n    // router-dom\r\n    let history = useHistory();\r\n    // material\r\n    const classes = useStyles();\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const renderButtons = props.renderButtons ? props.renderButtons : true;\r\n\r\n    const handleDeleteClicked = () => {\r\n        dispatch(removeCard(id))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Card Deleted\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error removing item\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleCardBodyClick = () => {\r\n        setShowDialog(true);\r\n    };\r\n\r\n    const handleEditClicked = () => {\r\n        history.push(`/card/edit/${id}`);\r\n    };\r\n\r\n    const cardprops = {\r\n        id,\r\n        handleDeleteClicked,\r\n        showDialog,\r\n        setShowDialog,\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            {cardsStatus === \"updated\" &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <div className={classes.cardSubject}>\r\n                    {card.title}\r\n                </div>\r\n                <div className={classes.cardContent} data-index={id} onClick={() => handleCardBodyClick()}>\r\n                    {card.content}\r\n                </div>\r\n                { renderButtons &&\r\n                    <div className={classes.cardExtras}>\r\n                        <Button color=\"default\" size=\"small\" href=\"\" data-index={id} onClick={() => handleEditClicked()}>\r\n                            Edit\r\n                        </Button>\r\n                        <DeleteDialogSlide cardProps={cardprops}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {showDialog && <EditCardDialogForm state={cardprops}/>}\r\n        </>\r\n            }\r\n            {cardsStatus === \"stale\" &&\r\n        <>\r\n            <div className={classes.cardMain} >\r\n                <Skeleton variant=\"rect\" height={220} animation=\"wave\"/>\r\n            </div>\r\n        </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst EditCardDialogForm = (props) => {\r\n\r\n    // state\r\n    const {id, showDialog, setShowDialog} = props.state;\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let card  = useSelector(state => selectCardById(state, id));\r\n\r\n    // formik, using hook to make form layout easier\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: card[\"title\"],\r\n            content: card[\"content\"],\r\n        },\r\n        onSubmit: (values) => {\r\n            // Do stuff here...\r\n            const {title, content} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                id,\r\n                title,\r\n                content,\r\n            };\r\n            dispatch(editCard({id, requestBody}))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Card Updated\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error updating item\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n            setShowDialog(false);\r\n        }\r\n    });\r\n\r\n    // handle dialog\r\n    const handleClose = () => setShowDialog(false);\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={showDialog} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-card\">{formik.values.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        id=\"titleDialog\"\r\n                        label=\"Title\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        name='title'\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.title}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        id=\"contentDialog\"\r\n                        label=\"Content\"\r\n                        name='content'\r\n                        multiline\r\n                        rows={7}\r\n                        fullWidth\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.content}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>\r\n                Cancel\r\n                    </Button>\r\n                    <Button color=\"default\" onClick={formik.handleSubmit}>\r\n                Update\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n  \r\nconst DeleteDialogSlide = (props) => {\r\n    //react \r\n    const [open, setOpen] = React.useState(false);\r\n    // material\r\n    const classes = useStyles();\r\n    //destructure\r\n    const {handleDeleteClicked} =props.cardProps;\r\n  \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const handleConfirm = () => {\r\n        setOpen(false);\r\n        handleDeleteClicked();\r\n    };\r\n  \r\n    return (\r\n        <div>\r\n            <IconButton \r\n                aria-label=\"delete\"\r\n                onClick={handleClickOpen}\r\n                size=\"small\"\r\n            >\r\n                <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Transition}\r\n                aria-labelledby=\"alert-dialog-slide-prompt\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-prompt\">{\"Delete this Item?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n                    </Button>\r\n                    <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default CardBody;","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Dialog, DialogActions, DialogTitle } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport clsx from \"clsx\";\r\nimport {selectDeckById, updateActiveDeck, removeDeckById, selectActiveDeck} from \"./deckSlice\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    deleteIconOutlinedColorPrimary: {\r\n        color: theme.palette.warning.light,\r\n        \"&:hover\": {\r\n            color:\"#e61e1eb3\"\r\n        }\r\n    },\r\n    clickableColorPrimary: {\r\n        background: theme.palette.background.paper,\r\n    },\r\n    root: {\r\n        margin: \"0.3em 0.2em\",\r\n        boxShadow: \"-2px 1px 2px 0px rgb(50 50 50 / 65%)\",\r\n        color: theme.palette.text.primary,\r\n        \"&$active\": {\r\n            background: theme.palette.secondary.main,\r\n            color: theme.palette.secondary.contrastText,\r\n            boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\",\r\n            \"&:hover\": {\r\n                background: theme.palette.secondary.dark,\r\n            }\r\n        },\r\n    },\r\n    deleteButton: {\r\n        color: theme.palette.warning.main,\r\n    },\r\n    active: {}\r\n}));\r\n  \r\nconst DeckItem = (props) => {\r\n\r\n    const id = props.id;\r\n    //react \r\n    const [openDelete, setOpenDelete] = React.useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const deck = useSelector(state => selectDeckById(state, id));\r\n    const activeDeck = useSelector(selectActiveDeck);\r\n    // notification \r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpen = () => {\r\n        setOpenDelete(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpenDelete(false);\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        // implement dispatch state with curr deck id\r\n        dispatch(removeDeckById(id))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Deleted\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error removing item\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const handleDeckClick = () => {\r\n        // implement update state with curr deck id\r\n        dispatch(updateActiveDeck(id));\r\n    };\r\n\r\n    const delProps = {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    };\r\n\r\n    return(\r\n        <>\r\n            <Chip \r\n                label={deck.name} \r\n                onDelete={handleClickOpen} \r\n                onClick={() => handleDeckClick(deck.id)} \r\n                color=\"primary\" \r\n                variant=\"outlined\"\r\n                classes={{\r\n                    root: classes.root,\r\n                    deleteIconOutlinedColorPrimary: classes.deleteIconOutlinedColorPrimary,\r\n                }}\r\n                className={clsx({\r\n                    [classes.active]: activeDeck === id,\r\n                })}\r\n                clickable\r\n            />\r\n            <DeleteDialogSlide {...delProps}/>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DeleteDialogSlide = (props) => {\r\n\r\n    // material\r\n    const classes = useStyles();\r\n    \r\n    const {\r\n        openDelete,\r\n        handleClose,\r\n        handleDeleteClick\r\n    } = props;\r\n\r\n    \r\n    const handleConfirm = () => {\r\n        handleClose();\r\n        handleDeleteClick();\r\n    };\r\n  \r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={openDelete}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete this Item?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"default\">\r\n              Cancel\r\n                    </Button>\r\n                    <Button onClick={handleConfirm} className={classes.deleteButton}>\r\n              Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default DeckItem;","import React from \"react\";\r\nimport CardBody from \"../cards/CardBody\";\r\nimport DeckItem from \"../decks/DeckItem\";\r\n\r\nconst useCreateDeck = (listObj) => {\r\n\r\n    let tabledDeck = [];\r\n    if (listObj.length >= 0) {\r\n        tabledDeck = listObj.map((deck) => {\r\n            return {value: deck[\"id\"], label: deck[\"name\"] };\r\n        });\r\n        return tabledDeck;\r\n    } else {\r\n        return tabledDeck;\r\n    }\r\n};\r\n\r\nconst useCardsCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null;\r\n    if (listObj.length === 0 ) return [];\r\n    let cards = listObj.map((item) => {\r\n        return <CardBody key={item} id={item}/>;\r\n    });\r\n\r\n    return cards;\r\n\r\n};\r\n\r\nconst useDecksCreator = (listObj) => {\r\n\r\n    if (listObj === null || listObj === undefined) return null;\r\n    if (listObj.length === 0 ) return null;\r\n\r\n    let cards = listObj.map((item) => {\r\n        return <DeckItem key={item} id={item}/>;\r\n    });\r\n\r\n    return cards;\r\n};\r\n\r\nexport {useCreateDeck, useCardsCreator, useDecksCreator};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    emptyRoot: {\r\n        display: 'grid',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    Icon: {\r\n        justifySelf: 'center',\r\n    },\r\n}));\r\n\r\n\r\nconst EmptyListRender = (props) => {\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.emptyRoot}>\r\n            <ArrowUpwardIcon fontSize=\"large\" className={classes.Icon}/>\r\n            <Typography variant={'h4'}> {props.children} </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyListRender;","import React from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport {selectCardsTotal, selectCardsIds, selectCardsStatus, fetchCards} from \"./cardsSlice\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {MainBodyLayout} from \"../ui/uiFormat\";\r\nimport CustomBackdrop from \"../ui/CustomBackdrop\";\r\nimport CustomCardInput from \"./CardInputBox\";\r\nimport {useCardsCreator} from \"../hooks/customHooks\";\r\nimport EmptyListRender from \"../ui/EmptyListRender\";\r\n\r\n\r\nconst CardList = () => {\r\n    // redux\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            dispatch(fetchCards())\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"rejected\") {\r\n                        enqueueSnackbar(\"Error getting cards, Try again\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    }, [cardsStatus, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <MainBodyLayout\r\n                input={<CustomCardInput/>}\r\n                body={<CardsListRender/>}\r\n                cards\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst CardsListRender = () => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsTotal);\r\n    const cardsStatus = useSelector(selectCardsStatus);\r\n    const totalCardsId = useSelector(selectCardsIds);\r\n    const cardsArray = useCardsCreator(totalCardsId);\r\n\r\n    if (cardsArray === null && cardsStatus === \"stale\") {\r\n        return (\r\n            <CustomBackdrop/>\r\n        );\r\n    } else if (cardsStatus === \"updated\" && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Cards, Create a Card</EmptyListRender>\r\n        );\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst newCardStyles = makeStyles((theme) => ({\r\n    wrapperMain: {\r\n        padding: '0.4em 1em',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'center',\r\n        borderRadius: '.4em'\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '90%',\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 98%,\r\n            ${theme.palette.secondary.light}f5 100%)`,\r\n        borderRadius: '8px',\r\n        padding: theme.spacing(1)\r\n    },\r\n    formCtl: {\r\n\r\n    }\r\n}));\r\n\r\nexport default newCardStyles;","import React from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {selectAllDecks, selectDecksStatus, fetchDecks} from \"../decks/deckSlice\";\r\n\r\nconst CustomSelect = ({formik, defaultArr}) => {\r\n\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    const deckStatus = useSelector(selectDecksStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (defaultArr && defaultArr.length > 0) {\r\n            let arr = defaultArr.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n        }\r\n    }, []);\r\n    \r\n    React.useEffect(() => {\r\n        if (deckStatus === \"stale\") {\r\n            dispatch(fetchDecks());\r\n        }\r\n    }, [deckStatus]);\r\n    \r\n    const handleChange = (event, optionArray, reason) => {\r\n        \r\n        switch (reason) {\r\n        case \"select-option\": {\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        } \r\n        case \"remove-option\":{\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        }\r\n        \r\n        case \"clear\":{\r\n            formik.setFieldValue(\"selectedDeck\", [], false);\r\n            break;\r\n        }\r\n        \r\n        default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Autocomplete\r\n            multiple\r\n            freeSolo\r\n            fullWidth\r\n            filterSelectedOptions={true}\r\n            autoComplete={true}\r\n            margin={\"dense\"}\r\n            id=\"tags-filled\"\r\n            options={allDecksList}\r\n            defaultValue={defaultArr ? defaultArr : []}\r\n            getOptionLabel={option => option.name}\r\n            getOptionSelected={(option, value) => {\r\n                if (option.id === value.id) return true;\r\n                return false;\r\n            }}\r\n            renderTags={(deckList, getTagProps) =>\r\n                deckList.map((deck, index) => (\r\n                    <Chip variant=\"outlined\" label={deck.name} key={deck.id} {...getTagProps({ index })} />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField {...params} margin={\"dense\"} label=\"Select Deck\" placeholder=\"...\" />\r\n            )}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CustomSelect;","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport newCardStyles from \"./newCardStyles\";\r\nimport DeckCustomSelect from \"./CustomDeckSelect\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewCard} from \"./cardsSlice\";\r\n\r\nconst AddCardForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // material\r\n    const classes = newCardStyles();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            title: \"\",\r\n            content: \"\",\r\n            selectedDeck: [],\r\n        },\r\n        onSubmit:(values) => {\r\n            // Do stuff here...\r\n            const {title, content, selectedDeck: notebook} = values;\r\n            const requestBody = {\r\n                title,\r\n                content,\r\n                notebook,\r\n            };\r\n            if (requestBody.title === \"\") {\r\n                delete requestBody.title;\r\n            }\r\n            dispatch(addNewCard(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Card Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating card\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        }\r\n    });\r\n\r\n    return(\r\n        <>\r\n            <div className={classes.wrapperMain}>\r\n                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                    <TextField\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        name=\"title\"\r\n                        id=\"cardTitle\"\r\n                        label=\"Title\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.title}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <TextField\r\n                        multiline\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        rows={10}\r\n                        name=\"content\"\r\n                        id=\"cardContent\"\r\n                        label=\"Content\"\r\n                        color=\"secondary\"\r\n                        value={formik.values.content}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                    />\r\n                    <DeckCustomSelect formik={formik}/>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\" \r\n                        margin={\"dense\"}\r\n                        onClick={formik.handleSubmit}\r\n                        disabled={!formik.dirty}\r\n                    >\r\n                        Create Card\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n/* const CustomSelect = ({formik, defaultArr}) => {\r\n\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    \r\n    const handleChange = (event, optionArray, reason) => {\r\n        \r\n        switch (reason) {\r\n        case \"select-option\": {\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        } \r\n        case \"remove-option\":{\r\n            let arr = optionArray.map(deck => deck.id);\r\n            formik.setFieldValue(\"selectedDeck\", arr, false);\r\n            break;\r\n        }\r\n        \r\n        case \"clear\":{\r\n            formik.setFieldValue(\"selectedDeck\", [], false);\r\n            break;\r\n        }\r\n        \r\n        default:\r\n            break;\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Autocomplete\r\n            multiple\r\n            freeSolo\r\n            fullWidth\r\n            autoComplete={true}\r\n            margin={\"dense\"}\r\n            id=\"tags-filled\"\r\n            options={allDecksList}\r\n            defaultValue={defaultArr ? defaultArr : []}\r\n            getOptionLabel={option => option.name}\r\n            renderTags={(deckList, getTagProps) =>\r\n                deckList.map((deck, index) => (\r\n                    <Chip variant=\"outlined\" label={deck.name} key={deck.id} {...getTagProps({ index })} />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField {...params} margin={\"dense\"} label=\"Select Deck\" placeholder=\"...\" />\r\n            )}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n}; */\r\nexport default AddCardForm;","import React from 'react';\r\nimport {Typography, } from '@material-ui/core';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nconst NoMatchFound = (props) => {\r\n\r\n    return(\r\n        <Container>\r\n            <Typography>Error, Page does not exist</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoMatchFound","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport newCardStyles from \"./newCardStyles\";\r\nimport {useParams, useHistory} from \"react-router-dom\";\r\nimport { Formik  } from \"formik\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {editCard, selectCardById, selectCardsStatus, fetchCards} from \"./cardsSlice\";\r\nimport {selectAllDecks, selectDecksStatus, fetchDecks} from \"../decks/deckSlice\";\r\nimport DeckCustomSelect from \"./CustomDeckSelect\";\r\nimport NoMatchFound from \"../ui/CustomNoMatchFound\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst EditCardPage = () => {\r\n    // react state\r\n    const [pageState, setPageState] = React.useState(\"load\");\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let cardsStatus  = useSelector(selectCardsStatus);\r\n    let decksStatus  = useSelector(selectDecksStatus);\r\n    // material\r\n    const classes = newCardStyles();\r\n    // use effect for getting cards\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            setPageState(\"load\");\r\n            dispatch(fetchCards());\r\n        } else {\r\n            setPageState(\"show\");\r\n        }\r\n    },[cardsStatus]);\r\n    // effect for decks \r\n    React.useEffect(() => {\r\n        if (decksStatus === \"stale\") {\r\n            setPageState(\"load\");\r\n            dispatch(fetchDecks());\r\n        } else {\r\n            setPageState(\"show\");\r\n        }\r\n    },[decksStatus]);\r\n\r\n    return(\r\n        <div className={classes.wrapperMain}>\r\n            {pageState === \"load\" && \r\n                <Skeleton variant=\"rect\" height={220} animation=\"wave\"/>\r\n            }\r\n            {pageState === \"show\" && \r\n                <EditCardForm/>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst EditCardForm = () => {\r\n\r\n    // react-router\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    //redux\r\n    const dispatch = useDispatch();\r\n    let cardsStatus  = useSelector(selectCardsStatus);\r\n    const allDecksList = useSelector(selectAllDecks);\r\n    //notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // material\r\n    const classes = newCardStyles();\r\n    // redux store\r\n    let card  = useSelector(state => selectCardById(state, id));\r\n    if (cardsStatus === \"updated\" && !card) {\r\n        return (\r\n            <>\r\n                <NoMatchFound/>\r\n            </>\r\n        );\r\n    }\r\n    // custom hook\r\n    // formats decklist into a clean array\r\n    let currentCardDeck = [];\r\n\r\n    // fills current card deck with decks card is in\r\n    if (card) {\r\n        card.notebook.forEach(deckId => {\r\n            let deck = allDecksList.find((deckobj) => deckId === deckobj.id);\r\n            const {id, name} = deck;\r\n            currentCardDeck.push({id, name});\r\n        });\r\n    }\r\n \r\n    return(\r\n        <>\r\n            {card &&\r\n                    <>\r\n                        <Formik\r\n                            initialValues={{\r\n                                title: card[\"title\"],\r\n                                content: card[\"content\"],\r\n                                selectedDeck: [],\r\n                            }}\r\n                            onSubmit={\r\n                                (values) => {\r\n                                    // Do stuff here...\r\n                                    const {title, content, selectedDeck: notebook} = values;\r\n                                    /* alert(JSON.stringify(values, null, 3)); */\r\n                                    const requestBody = {\r\n                                        id,\r\n                                        title,\r\n                                        content,\r\n                                        notebook\r\n                                    };\r\n                                    dispatch(editCard({id, requestBody}))\r\n                                        .then((result) => {\r\n                                            if (result.meta.requestStatus === \"fulfilled\") {\r\n                                                enqueueSnackbar(\"Card Updated\", { \r\n                                                    variant: \"success\",\r\n                                                });\r\n                                                history.goBack();\r\n                                            } else {\r\n                                                enqueueSnackbar(\"Error Updating\", { \r\n                                                    variant: \"error\",\r\n                                                });\r\n                                            }\r\n                                        });\r\n                                }\r\n                            }\r\n                        >\r\n                            {formik => (\r\n                                <form className={classes.flex} onSubmit={formik.handleSubmit} noValidate>\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        margin={\"dense\"}\r\n                                        name=\"title\"\r\n                                        id=\"cardTitle\"\r\n                                        label=\"Title\"\r\n                                        color=\"secondary\"\r\n                                        value={formik.values.title}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        multiline\r\n                                        fullWidth\r\n                                        margin={\"dense\"}\r\n                                        rows={10}\r\n                                        name=\"content\"\r\n                                        id=\"cardContent\"\r\n                                        label=\"Content\"\r\n                                        color=\"secondary\"\r\n                                        value={formik.values.content}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                    />\r\n                                    <DeckCustomSelect formik={formik} defaultArr={currentCardDeck}/>\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                                        Update Card\r\n                                    </Button>\r\n                                </form> \r\n                            )}\r\n                        </Formik>\r\n                    </>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditCardPage;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Typography } from '@material-ui/core';\r\nimport {selectDeckById, selectActiveDeck, selectDeckTotal} from './deckSlice'\r\nimport {selectCardsStatus, fetchCards} from '../cards/cardsSlice'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\n\r\nconst DeckCardSection = (props) => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const activeDeck = useSelector(selectActiveDeck)\r\n    const cardsStatus = useSelector(selectCardsStatus)\r\n    const totalDeckNum = useSelector(selectDeckTotal)\r\n    const singleDeck = useSelector((state) => selectDeckById(state, activeDeck))\r\n    const cardsArray = useCardsCreator(singleDeck ? singleDeck.notebook_notes : null)\r\n\r\n    React.useEffect(() => {\r\n        if (cardsStatus === \"stale\") {\r\n            dispatch(fetchCards())\r\n        }\r\n    }, [cardsStatus])\r\n\r\n    if (activeDeck === null && totalDeckNum > 0 ) {\r\n        return (\r\n            <Typography variant=\"body1\">Select a Deck</Typography>\r\n        )\r\n    } else if (activeDeck === null && totalDeckNum === 0) {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {cardsArray && cardsArray.length > 0 &&\r\n            [cardsArray]\r\n        }\r\n        {cardsArray && cardsArray.length === 0 &&\r\n            <Typography variant=\"body1\">Empty Deck, Add some cards</Typography>\r\n        }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default DeckCardSection","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport {TextField, Button} from \"@material-ui/core\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {addNewDeck} from \"./deckSlice\";\r\nimport {InputFormLayout} from \"../ui/uiFormat\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst CustomDeckInput = () => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {deckName: \"\" },\r\n        onSubmit: async (values, formikBag) => {\r\n            // Do stuff here...\r\n            const {deckName} = values;\r\n            /* alert(JSON.stringify(values, null, 3)); */\r\n            const requestBody = {\r\n                name: deckName\r\n            };\r\n            dispatch(addNewDeck(requestBody))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Deck Created\", { \r\n                            variant: \"success\",\r\n                        });\r\n                        formikBag.resetForm();\r\n                    } else {\r\n                        enqueueSnackbar(\"Error creating deck\", { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                });\r\n        },\r\n        validationSchema: Yup.object({\r\n            deckName: Yup.string()\r\n                .required(\"Required\"),\r\n        }),\r\n        validateOnBlur: false\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <InputFormLayout\r\n                input={\r\n                    <form className=\"baseForm\" onSubmit={formik.handleSubmit} required>\r\n                        <TextField \r\n                            label=\"Create Deck\" \r\n                            variant=\"outlined\" \r\n                            name=\"deckName\" \r\n                            placeholder=\"Start typing to create a new deck\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.deckName}\r\n                            size=\"small\"\r\n                            error={ formik.errors.deckName ? true : false}\r\n                            helperText={formik.errors.deckName}\r\n                            fullWidth/>\r\n                    </form>\r\n                }\r\n\r\n                options={\r\n                    <InputButtonGroup formik={formik}/>\r\n                }\r\n            />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nconst InputButtonGroup = (props) => {\r\n    const {formik} = props;\r\n\r\n    return (\r\n        <Button onClick={formik.handleSubmit} variant=\"outlined\" color=\"secondary\">Save Deck</Button>\r\n    );\r\n};\r\n\r\nexport {CustomDeckInput};","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport {selectAllCards} from \"../cards/cardsSlice\";\r\nimport {updateDeckCards, selectActiveDeck, selectCardsByDeckId} from \"./deckSlice\";\r\nimport {getArrayDifference} from \"../utils/utilities\";\r\n\r\nconst useStyles = makeStyles((mainTheme) => ({\r\n    root: {\r\n        width: \"210px\",\r\n        maxHeight: \"58vh\",\r\n        overflowY: \"auto\",\r\n        overflowX: \"hidden\",\r\n        [mainTheme.breakpoints.between(\"100\", \"500\")]: {\r\n            width: \"auto\"\r\n        },\r\n    },\r\n    listHeader: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    buttonForm: {\r\n        display: \"flex\",\r\n        alignContent: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n        flexWrap: \"nowrap\",\r\n    },\r\n}));\r\n\r\nconst DeckListForm = () => {\r\n    // selected deck\r\n    const selectedDeckId = useSelector(selectActiveDeck);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const allCardsArray = useSelector(selectAllCards);\r\n    const deckCardsArrayById = useSelector((state) => selectCardsByDeckId(state, selectedDeckId));\r\n    let AddCardsArray = selectedDeckId ? allCardsArray.filter(card => !deckCardsArrayById.includes(card[\"id\"])) : [];\r\n    let RemoveCardsArray = selectedDeckId ? allCardsArray.filter(card => deckCardsArrayById.includes(card[\"id\"])) : [];\r\n    // react \r\n    const [checked, setChecked] = React.useState([]);\r\n    const [deleteChecked, setDeleteChecked] = React.useState([]);\r\n    const [removeList, setRemoveList] = React.useState(true);\r\n    // material\r\n    const classes = useStyles();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    \r\n    const handleUpdate = () => {\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: checked.concat(deckCardsArrayById)\r\n        }))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Updated\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error Updating Deck\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setChecked([]);\r\n    };\r\n    \r\n    const handleRemove = () => {\r\n        let diff = getArrayDifference(deckCardsArrayById, deleteChecked);\r\n        dispatch(updateDeckCards({\r\n            deckId: selectedDeckId,\r\n            cards: diff\r\n        }))\r\n            .then((result) => {\r\n                if (result.meta.requestStatus === \"fulfilled\") {\r\n                    enqueueSnackbar(\"Deck Updated\", { \r\n                        variant: \"success\",\r\n                    });\r\n                } else {\r\n                    enqueueSnackbar(\"Error Updating Deck\", { \r\n                        variant: \"error\",\r\n                    });\r\n                }\r\n            });\r\n        setDeleteChecked([]);\r\n    };\r\n\r\n    const listProps = {\r\n        checked,\r\n        setChecked,\r\n        deleteChecked,\r\n        setDeleteChecked,\r\n        handleUpdate,\r\n        handleRemove,\r\n        AddCardsArray,\r\n        RemoveCardsArray,\r\n        removeList\r\n    };\r\n\r\n    return(\r\n        <>\r\n            {  selectedDeckId &&\r\n            <>\r\n                <List \r\n                    className={classes.root}\r\n                    subheader={\r\n                        <ListSubheader className={classes.listHeader} component=\"div\" id=\"nested-list-subheader\">\r\n                            {removeList ? \"Remove Cards\" : \"Add Cards\"}\r\n                            <IconButton onClick={() => setRemoveList(state => !state)}>\r\n                                <SwapHorizIcon/>\r\n                            </IconButton>\r\n                        </ListSubheader>\r\n                    }\r\n                >   \r\n                    {removeList && <RemoveDeckList {...listProps}/>}\r\n                    {!removeList && <AddDeckList {...listProps}/>}\r\n                </List>\r\n                <ListButtons {...listProps}/>\r\n            </>\r\n            }\r\n            { !selectedDeckId && null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst AddDeckList = (props) =>  {\r\n\r\n    const {checked, setChecked, AddCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {AddCardsArray ? AddCardsArray.map((card) => {\r\n                const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n                return (\r\n                    <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                checked={checked.indexOf(card.id) !== -1}\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={`${card.title}`} />\r\n                    </ListItem>\r\n                );\r\n            }) : null }\r\n        </>\r\n    );\r\n};\r\n\r\nconst RemoveDeckList = (props) =>  {\r\n\r\n    const {deleteChecked, setDeleteChecked, RemoveCardsArray} = props;\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = deleteChecked.indexOf(value);\r\n        const newChecked = [...deleteChecked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setDeleteChecked(newChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {RemoveCardsArray ? RemoveCardsArray.map((card) => {\r\n                const labelId = `checkbox-list-label-${card.id}`;\r\n\r\n                return (\r\n                    <ListItem key={card.id} role={undefined} dense button onClick={handleToggle(card.id)}>\r\n                        <ListItemIcon>\r\n                            <Checkbox\r\n                                edge=\"start\"\r\n                                checked={deleteChecked.indexOf(card.id) !== -1}\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItemText id={labelId} primary={`${card.title}`} />\r\n                    </ListItem>\r\n                );\r\n            }) : null }\r\n        </>\r\n    );\r\n};\r\n\r\nconst ListButtons = (props) => {\r\n\r\n    const {\r\n        removeList, handleUpdate,\r\n        handleRemove, setDeleteChecked,\r\n        setChecked\r\n    } = props;\r\n\r\n    // material\r\n    const classes = useStyles();\r\n\r\n    const handleClear = () => {\r\n        if (removeList) {\r\n            setDeleteChecked([]);\r\n        } else {\r\n            setChecked([]);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className={classes.buttonForm}>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<DoneAllIcon />}\r\n                size=\"small\"\r\n                onClick={removeList ? handleRemove : handleUpdate }\r\n            >\r\n                {removeList ? \"remove\" : \"update\" }\r\n            </Button>\r\n            <Button \r\n                aria-label=\"accept\"\r\n                startIcon={<ClearIcon />}\r\n                size=\"small\"\r\n                onClick={handleClear}\r\n            >\r\n                clear\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeckListForm;","import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {MainBodyLayout} from \"../ui/uiFormat\";\r\nimport {useDecksCreator} from \"../hooks/customHooks\";\r\nimport {selectDecksIds, selectDecksStatus, fetchDecks, selectDeckTotal} from \"./deckSlice\";\r\nimport DeckCardSection from \"./DeckCardSection\";\r\nimport {CustomDeckInput} from \"./DeckInputBox\";\r\nimport DeckListForm from \"./DeckListForm\";\r\nimport CustomBackdrop from \"../ui/CustomBackdrop\";\r\nimport EmptyListRender from \"../ui/EmptyListRender\";\r\n\r\n\r\nconst DeckList = () => {\r\n\r\n    // redux\r\n    const decksStatus = useSelector(selectDecksStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (decksStatus === \"stale\") {\r\n            dispatch(fetchDecks());\r\n        }\r\n    }, [decksStatus, dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <MainBodyLayout\r\n                deck\r\n                input={<CustomDeckInput/>}\r\n                deckList={<DeckChipsRenderList/>}\r\n                decks={<DeckCardSection/>}\r\n                deckForm={<DeckListForm />}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst DeckChipsRenderList = () => {\r\n\r\n    // redux\r\n    const decks = useSelector(selectDecksIds);\r\n    const decksStatus = useSelector(selectDecksStatus);\r\n    const totalDeckNum = useSelector(selectDeckTotal);\r\n    // create deck list \r\n    const deckArray = useDecksCreator(decks);\r\n\r\n    if (deckArray === null && decksStatus === \"stale\") {\r\n        return (\r\n            <CustomBackdrop/>\r\n        );\r\n    } else if (decksStatus === \"updated\" && totalDeckNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty Decks, Create a Deck</EmptyListRender>\r\n        );\r\n    }\r\n\r\n    return(\r\n        [deckArray]\r\n    );\r\n\r\n};\r\n\r\nexport default DeckList;","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerImg: {\r\n        display: \"none\",\r\n        height: \"34px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"block\",\r\n        }\r\n    }\r\n}));\r\n\r\nconst LogoComponent = () => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // react\r\n    const [src, setSrc] = React.useState(theme.palette.type);\r\n    const darkTheme = theme.palette.type;\r\n\r\n    React.useEffect(() => {\r\n        if (darkTheme === \"dark\") {\r\n            setSrc(\"dark\");\r\n        } else {\r\n            setSrc(\"light\");\r\n        }\r\n    }, [darkTheme]);\r\n\r\n    return(\r\n        <img\r\n            key={\"image-icon\"}\r\n            className={classes.headerImg}\r\n            alt={\"title\"}\r\n            src={src === \"dark\" ? \"/static/frontend/assets/images/CARDEDWHITE.png\" : \"/static/frontend/assets/images/CARDEDBLACK.png\"}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LogoComponent;","import React from \"react\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport SlideTransition from \"../ui/SlideTransition\";\r\nimport {userLogout} from \"../users/authenticationSlice\";\r\n\r\nconst AccountNavButton = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // logout dialog\r\n    const [openLogout, setOpenLogout] = React.useState(false);\r\n    //\r\n    const { forwardedRef, ...bprops } = props;\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute(\"href\");\r\n        handleClose();\r\n        history.push(path);\r\n    };\r\n\r\n    const handleLogoutClick = () => {\r\n        handleClose();\r\n        setOpenLogout(true);\r\n    };\r\n    \r\n    const handleLogoutCancel = () => {\r\n        setOpenLogout(false);\r\n    };\r\n\r\n    const handleLogoutConfirm = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    const logDialogProps = {\r\n        handleLogoutConfirm,\r\n        handleLogoutCancel,\r\n        openLogout\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button aria-controls=\"account-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<AccountCircleIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={\"small\"}\r\n                color=\"secondary\"\r\n                ref={forwardedRef}\r\n                {...bprops}\r\n            >\r\n            Account\r\n            </Button>\r\n            <Menu\r\n                id=\"account-menu\"\r\n                variant=\"menu\"\r\n                TransitionComponent={SlideTransition}\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={\"/profile\"}>Profile</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={\"/account\"}>My account</MenuItem>\r\n                <MenuItem onClick={handleLogoutClick}>\r\n                Logout\r\n                </MenuItem>\r\n            </Menu>\r\n            {openLogout && <LogoutDialog {...logDialogProps}/>}\r\n        </>\r\n    );\r\n};\r\n\r\nconst LogoutDialog = (props) => {\r\n\r\n    const {openLogout, handleLogoutCancel, handleLogoutConfirm} = props;\r\n\r\n    return(\r\n        <>\r\n            <Dialog open={openLogout} onClose={handleLogoutCancel} aria-labelledby=\"alert-dialog-title\">\r\n                <DialogTitle>{\"Confirm Logout?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleLogoutCancel} color=\"default\" variant='outlined'>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLogoutConfirm} color=\"secondary\" variant='outlined' autoFocus>\r\n                    Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default React.forwardRef((props, ref) => <AccountNavButton {...props} forwardedRef={ref} />);","import React from \"react\";\r\nimport {Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst LogoutDialog = (props) => {\r\n\r\n    const {openLogout, handleLogoutCancel, handleLogoutConfirm} = props;\r\n\r\n    return(\r\n        <>\r\n            <Dialog open={openLogout} onClose={handleLogoutCancel} aria-labelledby=\"alert-dialog-title\">\r\n                <DialogTitle>{\"Confirm Logout?\"}</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleLogoutCancel} color=\"default\" variant='outlined'>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={handleLogoutConfirm} color=\"secondary\" variant='outlined' autoFocus>\r\n                    Logout\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LogoutDialog;","import React from \"react\";\r\nimport LogoutDialog from \"./LogoutDialog\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport {userLogout} from \"../users/authenticationSlice\";\r\n\r\n\r\nexport default function LogoutButton() {\r\n\r\n    // logout dialog\r\n    const [openLogout, setOpenLogout] = React.useState(false);\r\n    // redux\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogoutClick = () => {\r\n        setOpenLogout(true);\r\n    };\r\n    \r\n    const handleLogoutCancel = () => {\r\n        setOpenLogout(false);\r\n    };\r\n\r\n    const handleLogoutConfirm = () => {\r\n        dispatch(userLogout(history));\r\n    };\r\n\r\n    const logDialogProps = {\r\n        handleLogoutConfirm,\r\n        handleLogoutCancel,\r\n        openLogout\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton onClick={handleLogoutClick}>\r\n                <ExitToAppIcon />\r\n            </IconButton>\r\n            {openLogout && <LogoutDialog {...logDialogProps}/>}\r\n        </>\r\n    );\r\n}","import { createSlice, createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport {apiFecthResource} from '../../api/api'\r\n\r\nconst searchAdapter = createEntityAdapter({\r\n    // Assume IDs are stored in a field other than `book.id`\r\n    selectId: (card) => card.id,\r\n    // Keep the \"all IDs\" array sorted based on book titles\r\n    sortComparer: (a, b) => a.created.localeCompare(b.created),\r\n})\r\n\r\nconst initialState = searchAdapter.getInitialState({\r\n    loading: 'idle',\r\n    status: 'stale',\r\n    error: {\r\n        isErrored: false,\r\n        message: '',\r\n    }\r\n})\r\n\r\nexport const searchCards = createAsyncThunk('search/searchCards', async (params, {dispatch, getState, rejectWithValue}) => {\r\n\r\n    let response;\r\n    try {\r\n        let url = `search/`\r\n        response = await apiFecthResource.get(url, params)\r\n        dispatch(fillSearchData(response.data))\r\n        return response.data;\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            // The request was made and the server responded with a status code out of the range of 2xx\r\n            return rejectWithValue(err.response.data)\r\n\r\n        } else if (err.request) {\r\n            // The request was made but no response was received\r\n            return rejectWithValue(err.request)\r\n        }\r\n    }\r\n})\r\n\r\nconst searchSlice = createSlice({\r\n    name: 'search',\r\n    initialState,\r\n    reducers: {\r\n        fillSearchData(state, action) {\r\n            searchAdapter.setAll(state, action.payload)\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [searchCards.pending]: (state, action) => {\r\n            state.loading = 'loading'\r\n        },\r\n        [searchCards.fulfilled]: (state, action) => {\r\n            state.loading = 'loaded'\r\n            state.status = 'updated'\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    selectAll: selectAllCardSearch,\r\n    selectIds: selectCardsSearchIds,\r\n    selectTotal: selectCardsSearchTotal,\r\n    // Pass in a selector that returns the posts slice of state\r\n} = searchAdapter.getSelectors(state => state.search);\r\nexport const selectSearchLoadingStatus = state => state.search.loading;\r\nexport const {fillSearchData} = searchSlice.actions;\r\n\r\nexport default searchSlice.reducer\r\n","import React from 'react';\r\nimport {useFormik } from 'formik';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport {searchCards} from '../search/searchSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    searchIcon: {\r\n        padding: theme.spacing(0.8, 1.6),\r\n        /* height: '100%', */\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    inputRoot: {\r\n        border: `1px solid ${theme.palette.secondary.dark}`,\r\n        borderRadius: '.5em',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: '20ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst SearchForm = (props) => {\r\n    // material styles\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // react router\r\n    const history = useHistory();\r\n    // formik\r\n    const formik  = useFormik({\r\n      initialValues: {\r\n        searchValue: ''\r\n      },\r\n      onSubmit: async(values) => {\r\n        dispatch(searchCards(values))\r\n        history.push('/search')\r\n      }\r\n    })\r\n\r\n    return(\r\n        <div className={props.className}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon color=\"secondary\"/>\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              type=\"search\"\r\n              name=\"searchValue\"\r\n              onSubmit={formik.handleSubmit}\r\n              value={formik.values.searchValue}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles } from '@material-ui/core/styles';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n    }\r\n}))\r\n\r\nconst NavButton = (props) => {\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    // icon mangement\r\n    let IconToUse;\r\n\r\n    switch (props.icon) {\r\n        case 'card':\r\n            IconToUse = BookRoundedIcon\r\n            break;\r\n        case 'deck':\r\n            IconToUse = LibraryBooksRoundedIcon\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return(\r\n        <Button\r\n            component={RouterLink}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size={'small'}\r\n            classes={{\r\n                root: classes.root\r\n            }}\r\n            startIcon={<IconToUse/>}\r\n            to={props.to}\r\n        >\r\n            {props.primary}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default NavButton;\r\n","import React from 'react'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {\r\n    List, Divider, IconButton, Collapse,\r\n    ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core';\r\nimport {ExpandLess, ExpandMore} from '@material-ui/icons';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport BookRoundedIcon from '@material-ui/icons/BookRounded';\r\nimport LibraryBooksRoundedIcon from '@material-ui/icons/LibraryBooksRounded';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst ListItemLink = (props) => {\r\n    const { icon, primary, to } = props;\r\n  \r\n    const renderLink = React.useMemo(\r\n      () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n      [to],\r\n    );\r\n  \r\n    return (\r\n      <li>\r\n        <ListItem button component={renderLink}>\r\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n          <ListItemText primary={primary} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n}));\r\n\r\nconst SideDrawer = (props) => {\r\n\r\n    const {open, handleDrawerClose, isAuthenticated} = props;\r\n\r\n    // material classes\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    // collapsible menu\r\n    const [showCollapse, setShowCollapse] = React.useState(true);\r\n\r\n    const handleCollapseClick = () => {\r\n        setShowCollapse(!showCollapse);\r\n    };\r\n\r\n    return(\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            className={classes.drawer}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                { !isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        primary={'Login'}\r\n                        to={'/login'}\r\n                        key={'login'}\r\n                    />\r\n                    <ListItemLink\r\n                        primary={'Register'}\r\n                        to={'/signup'}\r\n                        key={'signup'}\r\n                    />\r\n                </>\r\n                }\r\n                { isAuthenticated && \r\n                <>\r\n                    <ListItemLink\r\n                        icon={<BookRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Cards'}\r\n                        to={'/cards'}\r\n                        key={'Cards'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<LibraryBooksRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Decks'}\r\n                        to={'/deck'}\r\n                        key={'Decks'}\r\n                    />\r\n                    <ListItemLink\r\n                        icon={<AddBoxRoundedIcon color=\"secondary\"/>}\r\n                        primary={'Create Card'}\r\n                        to={'/card/new'}\r\n                        key={'Create Card'}\r\n                    />\r\n                    <ListItem button onClick={handleCollapseClick}>\r\n                        <ListItemIcon>\r\n                            <AccountCircleIcon color=\"secondary\"/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Account\" />\r\n                        {showCollapse ? <ExpandLess /> : <ExpandMore />}\r\n                    </ListItem>\r\n                    <Collapse in={showCollapse} timeout=\"auto\" unmountOnExit>\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Profile'}\r\n                            to={'/profile'}\r\n                            key={'Profile'}\r\n                            disablePadding\r\n                        />\r\n                        <ListItemLink\r\n                            icon={<AccountCircleIcon color=\"secondary\" />}\r\n                            primary={'Password'}\r\n                            to={'/account'}\r\n                            key={'Account Management'}\r\n                            disablePadding\r\n                        />\r\n\r\n                    </Collapse>\r\n                </>\r\n                }\r\n            </List>\r\n            <Divider />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport { useHistory, useLocation} from 'react-router-dom'\r\nimport SlideTransition from '../ui/SlideTransition'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDropDownRoundedIcon from '@material-ui/icons/ArrowDropDownRounded';\r\n\r\nconst MobileHeaderDropdown = (props) => {\r\n\r\n    // react-router\r\n    const history = useHistory()\r\n    const {pathname} = useLocation()\r\n    // auth \r\n    const {isAuthenticated} = props;\r\n    // anchor element for menu\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuItemClick = (event) => {\r\n        let path = event.target.getAttribute('href')\r\n        handleClose()\r\n        history.push(path)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {pathname ? pathname.slice(1) : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/cards'}>Cards</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/deck'}>Decks</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/profile'}>Profile</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/account'}>My account</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        { !isAuthenticated && \r\n        <>\r\n            <Button aria-controls=\"dropdown-auth-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick} \r\n                startIcon={<ArrowDropDownRoundedIcon/>} \r\n                className={props.className}\r\n                variant=\"contained\"\r\n                size={'small'}\r\n                color=\"secondary\">\r\n                {pathname ? pathname.slice(1) : 'Dropdown'}\r\n            </Button>\r\n            <Menu\r\n                id=\"dropdown-auth-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={SlideTransition}\r\n            >\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/login'}>Login</MenuItem>\r\n                <MenuItem onClick={(e) => handleMenuItemClick(e)} href={'/signup'}>Register</MenuItem>\r\n            </Menu>\r\n        </>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MobileHeaderDropdown","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 0\r\n    }\r\n}))\r\n\r\nconst DarkModeSwitch = (props) => {\r\n    /* const {darkMode, setDarkMode} = {...props} */\r\n    const theme = useTheme();\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <FormControlLabel\r\n        label=\"Dark Mode\"\r\n        className={classes.root}\r\n        control={\r\n            <Switch\r\n                checked={theme.darkMode.darkMode}\r\n                onChange={() => theme.darkMode.setDarkMode(state => !state)}\r\n                name=\"darkMode\"\r\n                inputProps={{ 'aria-label': 'darkmode checkbox' }}\r\n            />\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default DarkModeSwitch;","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LogoComponent from './LogoComponent'\r\nimport {useAuth} from '../../api/api'\r\nimport {useDispatch} from 'react-redux'\r\nimport AccountNavButton from './AccountNavButton'\r\nimport LogoutButton from './LogoutButton'\r\nimport SearchForm from './SearchForm'\r\nimport NavButton from './NavButton'\r\nimport SideDrawer from './SideDrawer'\r\nimport MobileHeaderDropdown from './MobileHeaderDropdown'\r\nimport DarkModeSwitch from './DarkModeSwitch'\r\n\r\nconst drawerWidth = 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        minHeight: '100vh',\r\n        fontSize: theme.typography.fontSize,\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontWeight: theme.typography.fontWeightLight,\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 24,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n    headerImg: {\r\n        display: 'none',\r\n        height: '34px',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        }\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    navButton: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(2),\r\n          width: 'auto',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'none',\r\n        },\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        }\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    wrapperMain: {\r\n        minHeight: `calc(97vh - ${theme.mixins.toolbar.minHeight}px)`,\r\n        position: 'relative;',\r\n        padding: '.5em .5em;',\r\n    }\r\n}));\r\n\r\nconst HeaderBar = (props) => {\r\n\r\n    // main body\r\n    const {mainBody} = props;\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    // auth \r\n    const isAuthenticated = useAuth();\r\n    // material classes\r\n    const classes = useStyles();\r\n    // drawer open\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const drawerProps = {\r\n        open,\r\n        handleDrawerClose,\r\n        isAuthenticated\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar variant=\"dense\">\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: open,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <LogoComponent/>\r\n                { isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={'card'} to={'/cards'} primary={'Cards'}/>\r\n                        <NavButton icon={'deck'} to={'/deck'} primary={'Decks'}/>\r\n                        <SearchForm className={classes.search}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionMobile}>\r\n                        <DarkModeSwitch/>\r\n                        <LogoutButton className={classes.navButton}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <DarkModeSwitch/>\r\n                        <AccountNavButton className={classes.navButton}/>\r\n                    </div>\r\n                </>\r\n                }\r\n                { !isAuthenticated && \r\n                <>\r\n                    <div className={classes.sectionMobile}>\r\n                        <MobileHeaderDropdown isAuthenticated={isAuthenticated}/>\r\n                    </div>\r\n                    <div className={classes.sectionDesktop}>\r\n                        <NavButton icon={'card'} to={'/login'} primary={'Login'}/>\r\n                        <NavButton icon={'deck'} to={'/signup'} primary={'Register'}/>\r\n                    </div>                    \r\n                    <div className={classes.grow} />\r\n                </>\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n        <SideDrawer {...drawerProps}/>\r\n        <main className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}>\r\n            <div className={classes.toolbar} />\r\n            <div className={classes.wrapperMain}>\r\n                {mainBody}\r\n            </div>\r\n        </main>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default HeaderBar;\r\n","import React from \"react\";\r\nimport {useFormik } from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {TextField, Button, Typography, Avatar } from \"@material-ui/core\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {editProfileData, fetchUserData,\r\n    selectUserDetailStatus, selectUserBdate,\r\n    selectUserProfilePic, selectUserUsername\r\n} from \"./userSlice\";\r\nimport {selectCardsTotal} from \"../cards/cardsSlice\";\r\nimport {selectDeckTotal} from \"../decks/deckSlice\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input_file: {\r\n        display: \"none\",\r\n    },\r\n    root: {\r\n        display: \"grid\",\r\n        justifyItems: \"center\",\r\n        alignContent: \"flex-start\",\r\n        boxShadow: `0px 1px 2px 0px ${theme.palette.text.primary}`,\r\n        borderRadius: \"8px\",\r\n        margin: \"auto\",\r\n        padding: \".4em .5em\",\r\n        minHeight: \"inherit\",\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary\r\n    },\r\n    profileUsername: {\r\n        minWidth: \"80px\",\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 95%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCardMini: {\r\n        minWidth: \"80px\",\r\n        boxShadow: `0px 0px 1.5px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    profileCard: {\r\n        minWidth: \"40%\",\r\n        boxShadow: `0px 0px 3px 0px ${theme.palette.text.primary}`,\r\n        alignItems: \"center\",\r\n        background: `linear-gradient(\r\n            180deg,\r\n            ${theme.palette.background.default} 97%,\r\n            ${theme.palette.secondary.main}f5 100%)`,\r\n        borderRadius: \"8px\",\r\n        margin: \"0.5em 0.4em\",\r\n        padding: \"0.8em 0.2em\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    ProfileAvatarForm: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\"\r\n    },\r\n    ProfileAvatarImg: {\r\n        height: \"150px\",\r\n        width: \"150px\"\r\n    },\r\n    uploadBtn: {\r\n        padding: \"4px\"\r\n    },\r\n    ProfileAvatarBtnGrp: {\r\n        display: \"flex\",\r\n        margin: theme.spacing(1)\r\n    },\r\n    flexRow: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    },\r\n    flexColumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        margin: \"1em 0.4em\"\r\n    }\r\n}));\r\n\r\nconst ProfilePage = () => {\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const userDetailStatus = useSelector(selectUserDetailStatus);\r\n    const username = useSelector(selectUserUsername);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        if (userDetailStatus === \"stale\") {\r\n            dispatch(fetchUserData());\r\n        }\r\n    }, [userDetailStatus, dispatch]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className={classes.profileUsername} variant=\"h6\"> Hello {username ? username : \"User\"} </Typography>\r\n            <ProfileAvatar/>\r\n            <ProfileCardStatDetail/>\r\n            <ProfileCardUpdateForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileAvatar = () => {\r\n    // material\r\n    const classes = useStyles();\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const avatarLink = useSelector(selectUserProfilePic);\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            profile_picture: null,\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            const formData = new FormData();\r\n            formData.append(\"profile_picture\", values[\"profile_picture\"]);\r\n            dispatch(editProfileData(formData))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    \r\n                    } else {\r\n                        const {\r\n                            profile_picture,\r\n                            non_field_errors\r\n                        } = result.payload;\r\n\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${profile_picture.toString()}`, { \r\n                            variant: \"error\",\r\n                        });\r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n    \r\n    return (\r\n        <div className={classes.flexColumn}>\r\n            <form className={classes.ProfileAvatarForm}>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-u\"\r\n                    type=\"file\"\r\n                    name=\"profile_picture\"\r\n                    className={classes.input_file}\r\n                    onChange={(event) => {\r\n                        formik.setFieldValue(\"profile_picture\", event.currentTarget.files[0]);\r\n                    }}\r\n                />\r\n                <Avatar alt=\"ao brrr\" src={avatarLink} className={classes.ProfileAvatarImg} />\r\n                <div className={classes.ProfileAvatarBtnGrp}>\r\n                    <label htmlFor=\"contained-button-u\" style={{marginBottom: 0}}>\r\n                        <IconButton color=\"default\" aria-label=\"upload picture\" component=\"span\" className={classes.uploadBtn} size=\"small\">\r\n                            <PhotoCamera size=\"small\" />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"default\" \r\n                        size=\"small\" \r\n                        onClick={formik.handleSubmit}\r\n                        disabled={formik.isSubmitting}\r\n                    >\r\n                        Update Avatar\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileCardStatDetail = () => {\r\n\r\n    const classes = useStyles();\r\n    // redux\r\n    const cardsTotal = useSelector(selectCardsTotal);\r\n    const decksTotal = useSelector(selectDeckTotal);\r\n\r\n    return (\r\n        <div className={classes.flexRow}>\r\n            <div className={classes.profileCardMini}> Cards <span> {cardsTotal} </span></div>\r\n            <div className={classes.profileCardMini}> Decks <span> {decksTotal} </span></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileCardUpdateForm = () => {\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const userBday = useSelector(selectUserBdate);\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    // formik \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            birth_date: userBday ? userBday : null\r\n        },\r\n        onSubmit: (values, formikBag) => {\r\n            /* alert(JSON.stringify(values, null, 2)); */\r\n            const formData = new FormData();\r\n            formData.append(\"birth_date\", values[\"birth_date\"]);\r\n            dispatch(editProfileData(formData))\r\n                .then((result) => {\r\n                    if (result.meta.requestStatus === \"fulfilled\") {\r\n                        enqueueSnackbar(\"Updated Successfully\", { \r\n                            variant: \"success\",\r\n                        });\r\n                    } else {\r\n                        const {\r\n                            birth_date,\r\n                            non_field_errors\r\n                        } = result.payload;\r\n\r\n                        enqueueSnackbar(non_field_errors ? non_field_errors.toString() :`Error: ${birth_date.toString()}`, { \r\n                            variant: \"error\",\r\n                        });\r\n                    \r\n                    }\r\n                    formikBag.setSubmitting(false);\r\n                });\r\n        }\r\n    });\r\n\r\n    // material styles\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form noValidate className={classes.profileCard}>\r\n            <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                name=\"birth_date\"\r\n                color=\"secondary\"\r\n                margin=\"dense\"\r\n                defaultValue={formik.values.birth_date}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={formik.handleChange}\r\n            />\r\n            <Button variant=\"contained\" color=\"default\" onClick={formik.handleSubmit} disabled={formik.isSubmitting}>\r\n                Submit\r\n            </Button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport { useFormik  } from \"formik\";\r\nimport {TextField, Button, Typography } from '@material-ui/core';\r\nimport {confirmPasswordReset} from './userSlice'\r\n\r\nconst ConfirmPasswordResetForm = (props) => {\r\n\r\n    // react-router\r\n    const { uid, token  } = useParams();\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch()\r\n\r\n    // formik\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            uid,\r\n            token,\r\n            new_password1: '',\r\n            new_password2: ''\r\n        },\r\n        onSubmit: async (values) => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            dispatch(confirmPasswordReset(values))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={'profile-main'}>\r\n            <form className={'profile-form'}>\r\n            <TextField\r\n            id=\"filled-new_password1-input\"\r\n            name=\"new_password1\"\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            value={formik.values.new_password1}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <TextField\r\n            id=\"filled-new_password2-input\"\r\n            name=\"new_password2\"\r\n            label=\"New Password Again\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            value={formik.values.new_password2}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            />\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={formik.handleSubmit}>\r\n                Update Password\r\n            </Button>\r\n            <Typography variant=\"subtitle1\">\r\n                Forgot Password? Click here to request a pssword reset\r\n            </Typography>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfirmPasswordResetForm;","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\nimport { Backdrop } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport {confirmUserEmail} from './userSlice'\r\nimport {authStatusSelector} from './authenticationSlice'\r\n\r\nconst ConfirmUserEmail = (props) => {\r\n\r\n    // react \r\n    const [confirmStatus, setConfirmStatus ] = React.useState('load');\r\n    // react-router\r\n    const { key  } = useParams();\r\n    const history = useHistory();\r\n    // redux\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(authStatusSelector)\r\n    // notification\r\n    const { enqueueSnackbar, } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        dispatch(confirmUserEmail({key}))\r\n        .then((result) => {\r\n            if (result.meta.requestStatus === 'fulfilled') {\r\n                enqueueSnackbar('Email Verified!', {variant:'success'})\r\n                setConfirmStatus('success')\r\n            } else {\r\n                enqueueSnackbar('Please check link', {variant:'error'})\r\n                setConfirmStatus('failed')\r\n            }\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (isAuth && confirmStatus === 'success') {\r\n            setTimeout(() => {\r\n                history.push('/cards')\r\n            }, 2000);\r\n        } else {\r\n            setTimeout(() => {\r\n                history.push('/login')\r\n            }, 2000);\r\n        }\r\n    }, [confirmStatus, isAuth, history])\r\n\r\n    if (confirmStatus ===  'load') {\r\n        return(\r\n            <Backdrop open={true}/>\r\n        )\r\n    } else if (confirmStatus ===  'success') {\r\n        return(\r\n            <div className={'inner-main'}>\r\n                <div className={'profile-main'}>\r\n                    <p> Email Verified!</p>\r\n                    <p> Redirecting...</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (confirmStatus ===  'failed') {\r\n        return(\r\n            <div className={'inner-main'}>\r\n                <div className={'profile-main'}>\r\n                    <p> Error, verifying link. please request verification link again</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default ConfirmUserEmail;","import React from 'react';\r\nimport { useSelector} from 'react-redux'\r\nimport {selectCardsSearchTotal, selectCardsSearchIds, selectSearchLoadingStatus} from './searchSlice'\r\nimport {MainBodyLayout} from '../ui/uiFormat'\r\nimport CustomBackdrop from '../ui/CustomBackdrop'\r\nimport CustomCardInput from '../cards/CardInputBox'\r\nimport {useCardsCreator} from '../hooks/customHooks'\r\nimport EmptyListRender from '../ui/EmptyListRender'\r\n\r\nconst SearchPage = (props) => {\r\n\r\n    return (\r\n        <>\r\n        <MainBodyLayout\r\n            input={<CustomCardInput/>}\r\n            searchBody={<SearchListRender/>}\r\n            search\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nconst SearchListRender = (props) => {\r\n\r\n    const totalCardsNum = useSelector(selectCardsSearchTotal)\r\n    const searchLoading = useSelector(selectSearchLoadingStatus)\r\n    const totalCardsId = useSelector(selectCardsSearchIds)\r\n    const cardsArray = useCardsCreator(totalCardsId)\r\n\r\n    if (searchLoading !== 'loaded') {\r\n        return (\r\n            <CustomBackdrop/>\r\n        )\r\n    } else if (cardsArray.length === 0 && totalCardsNum === 0) {\r\n        return(\r\n            <EmptyListRender>Empty..</EmptyListRender>\r\n        )\r\n    }\r\n\r\n    return(\r\n        [cardsArray]\r\n    )\r\n}\r\n\r\nexport default SearchPage","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route, Redirect,\r\n} from \"react-router-dom\";\r\nimport { ThemeProvider  } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nimport CustomSnackbarProvider from \"./components/ui/SnackBarAlert\";\r\nimport LoginForm from \"./components/users/LoginForm\";\r\nimport SignupForm from \"./components/users/SignupForm\";\r\nimport CardList from \"./components/cards/CardList\";\r\nimport AddCardForm from \"./components/cards/AddCardForm\";\r\nimport EditCardForm from \"./components/cards/EditCardForm\";\r\nimport DeckList from \"./components/decks/DeckList\";\r\nimport HeaderBar from \"./components/header/HeaderBar.js\";\r\nimport ProfilePage from \"./components/users/ProfilePage\";\r\nimport AccountMangementPage from \"./components/users/AccountMangementPage\";\r\nimport ConfirmPasswordResetForm from \"./components/users/ConfirmPasswordResetForm\";\r\nimport ConfirmUserEmail from \"./components/users/ConfirmUserEmail\";\r\nimport SearchPage from \"./components/search/SearchPage\";\r\nimport NoMatchFound from \"./components/ui/CustomNoMatchFound\";\r\nimport {useAuth} from \"./api/api\";\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    // auth\r\n    let isAuthenticated = useAuth();\r\n    // notification\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    // React\r\n    React.useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            enqueueSnackbar(\"Logged Out\", {variant: \"warning\", persist: false,});\r\n        }\r\n    }, [isAuthenticated, enqueueSnackbar]);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated ? (children) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nfunction App() {\r\n\r\n    let isAuthenticated = useAuth();\r\n    let prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n    let [darkMode, setDarkMode] = React.useState(false);\r\n    let theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: darkMode ? \"dark\" : \"light\",\r\n                    primary: {\r\n                        light: \"#ffffff\",\r\n                        main: \"#f5f5f5\",\r\n                        dark: \"#c2c2c2\",\r\n                        contrastText: \"#fff\",\r\n                    },\r\n                    secondary: {\r\n                        light: \"#ffc4ff\",\r\n                        main: \"#ce93d8\",\r\n                        dark: \"#9c64a6\",\r\n                        contrastText: \"#000\",\r\n                    },\r\n                    warning: {\r\n                        main: \"#b40000\"\r\n                    }\r\n                },\r\n                typography: {\r\n                    fontFamily: [\r\n                        \"Open Sans\",\r\n                        \"sans-serif\",\r\n                        \"Segoe UI\",\r\n                    ].join(\",\"),\r\n                    fontSize: 14,\r\n                },\r\n                breakpoints: {\r\n                    values: {\r\n                        xs: 500,\r\n                        sm: 600,\r\n                        md: 960,\r\n                        lg: 1280,\r\n                        xl: 1920,\r\n                        phones: 450,\r\n                    },\r\n                },\r\n                darkMode: {\r\n                    darkMode,\r\n                    setDarkMode\r\n                }\r\n            }),\r\n        [darkMode],\r\n    );\r\n    theme = responsiveFontSizes(theme, {factor:3});\r\n\r\n\r\n    React.useEffect(() => {\r\n        setDarkMode(prefersDarkMode);\r\n    }, [prefersDarkMode]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CustomSnackbarProvider>\r\n                <Router>\r\n                    <HeaderBar\r\n                        mainBody={\r\n                            <Switch>\r\n                                <Route path=\"/login\" render={() => <LoginForm/>}/>\r\n                                <Route path=\"/signup\" render={() => <SignupForm/>}/>\r\n                                <PrivateRoute path=\"/cards\"><CardList/></PrivateRoute>\r\n                                <PrivateRoute path=\"/card/new\"><AddCardForm/></PrivateRoute>\r\n                                <PrivateRoute path=\"/card/edit/:id\"><EditCardForm/></PrivateRoute>\r\n                                <PrivateRoute path=\"/deck\"><DeckList/></PrivateRoute>\r\n                                <PrivateRoute path=\"/profile\"><ProfilePage/></PrivateRoute>\r\n                                <PrivateRoute path=\"/account\"><AccountMangementPage/></PrivateRoute>\r\n                                <PrivateRoute path=\"/search\"><SearchPage/></PrivateRoute>\r\n                                <Route path=\"/password-reset/confirm/:uid/:token\" render={() => <ConfirmPasswordResetForm/>}/>\r\n                                <Route path=\"/accounts/confirm-email/:key\" render={() => <ConfirmUserEmail/>}/>\r\n                                <Route exact path=\"/\">\r\n                                    {\r\n                                        isAuthenticated ? <Redirect to=\"/cards\"/> : <Redirect to=\"/login\"/>\r\n                                    }\r\n                                </Route>\r\n                                <Route path=\"*\" render={() => <NoMatchFound/>}/>\r\n                            </Switch>\r\n                        }\r\n                    />\r\n                </Router>\r\n            </CustomSnackbarProvider>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport authReducer from '../components/users/authenticationSlice'\r\nimport userReducer from '../components/users/userSlice'\r\nimport cardsReducer from '../components/cards/cardsSlice'\r\nimport deckReducer from '../components/decks/deckSlice'\r\nimport searchReducer from '../components/search/searchSlice'\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        cards: cardsReducer,\r\n        decks: deckReducer,\r\n        user: userReducer,\r\n        search: searchReducer,\r\n    }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n/* import './scss/main.scss'; */\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline/>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'));","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcarded_react\"] = self[\"webpackChunkcarded_react\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [201,460,913,698,278,14,794,555,617,105,70,593,606,145,968,162,344,979,382], function() { return __webpack_require__(71628); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}